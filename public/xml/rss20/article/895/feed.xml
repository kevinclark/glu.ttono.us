<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet href="/stylesheets/rss.css" type="text/css"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:trackback="http://madskills.com/public/xml/rss/module/trackback/">
  <channel>
    <title>Gluttonous: Weigh In: Patches, Plugins and Proposed Enhancements</title>
    <link>http://glu.ttono.us/articles/2006/06/05/weigh-in-patches-plugins-and-proposed-enhancements</link>
    <language>en-us</language>
    <ttl>40</ttl>
    <description></description>
    <item>
      <title>Weigh In: Patches, Plugins and Proposed Enhancements</title>
      <description>&lt;p&gt;This week&amp;#8217;s guide is going to be a little different. &lt;/p&gt;

&lt;p&gt;On the &lt;a href="http://wrath.rubyonrails.org/pipermail/rails-core/"&gt;rails-core mailing list&lt;/a&gt;, in what started as a &lt;a href="http://www.ruby-forum.com/topic/67958#new"&gt;discussion&lt;/a&gt; the issue of the growing number of &lt;a href="http://script.aculo.us"&gt;Scriptaculous&lt;/a&gt;/&lt;a href="http://prototype.conio.net/"&gt;Prototype&lt;/a&gt; tickets and especially enhancement requests, &lt;strong&gt;we&amp;#8217;ve &lt;a href="http://www.ruby-forum.com/topic/67958#85925"&gt;begun talking about&lt;/a&gt; the removal of the &amp;#8220;enhancement&amp;#8221; category on &lt;a href="http://dev.rubyonrails.org/newticket"&gt;trac tickets&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;The problem is that generally half or more of the tickets that come through the Rails bug tracking system are enhancement requests. With 13 people able to commit and a handful of others actively dealing with tickets being reported, &lt;strong&gt;enhancement requests will in general never be acted on&lt;/strong&gt;. This means there are new tickets every day ruining that delicate signal vs noise ratio.&lt;/p&gt;

&lt;p&gt;For a while the &lt;a href="http://weblog.techno-weenie.net/2006/4/20/five-reasons-why-your-next-rails-mod-should-be-a-plugin"&gt;standard line&lt;/a&gt; for enhancements has been &amp;#8220;make it a plugin and see where it goes&amp;#8221;. This may not always be the proper response but when dealing with the deluge it is at the very least the easiest and a plugin is usually the simplest way to see feature X in Rails.&lt;/p&gt;

&lt;p&gt;So here&amp;#8217;s the guide part: &lt;strong&gt;we could use an alternate viewpoint&lt;/strong&gt;. The rails-core list is significantly biased: people who care to speak up there are comfortable writing patches and plugins. I expect a good portion of you watching my feed and visiting my blog haven&amp;#8217;t written patches for Rails and haven&amp;#8217;t written your own plugin. &lt;strong&gt;Do you think keeping the enhancement category is worthwhile?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The real question here isn&amp;#8217;t whether Rails should accept new features. Patches for new enhancements would be considered but enhancement tickets sans a patch would not.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;I&amp;#8217;d like to make this an open dialog. Please, speak your mind.&lt;/strong&gt; And careful with that submit button. Apparently my comments are a bit wonky and it tends to result in double posting. I&amp;#8217;ll try to fix it as soon as I can.&lt;/p&gt;

&lt;p&gt;Next week we&amp;#8217;ll return to our regularly scheduled practical guides.&lt;/p&gt;</description>
      <pubDate>Mon, 05 Jun 2006 02:43:00 -0400</pubDate>
      <guid isPermaLink="false">urn:uuid:f40267eb-2dc4-4e13-ad8a-8c880497e28a</guid>
      <author>kev</author>
      <link>http://glu.ttono.us/articles/2006/06/05/weigh-in-patches-plugins-and-proposed-enhancements</link>
      <category>Rails</category>
      <category>Op-Ed</category>
      <category>guides</category>
    </item>
    <item>
      <title>"Weigh In: Patches, Plugins and Proposed Enhancements" by Colin</title>
      <description>&lt;p&gt;First: Get a, codewise, stable version of rails. As rails 1.1 killed more than a few 1.0 plugins, and many 3rd party plugins are not that actively maintained frequent changes to the codebase spells out trouble..&lt;/p&gt;


	&lt;p&gt;Actually the lack of a clear vision for rails 2.0 and beyond makes it hard to choose for rails, as it might well be that stuff that works now won&amp;#8217;t work in the next version. &amp;#8220;Freeze rails&amp;#8221; is the response you get when you point this out, but it is not a very good solution, i guess people will want/need the newer version eventually for a variety of reason (stabilty, features, whatever)&lt;/p&gt;


	&lt;p&gt;Removing &amp;#8220;enhancements&amp;#8221; might well kill rails. The rails approach to webaplications is a truly unique one, however, it is already starting to be copied. Rails must take care not to alienate from its (potential) userbase. And preventing feature requests is a step in the wrong direction. Besides, as said before, another  strong argument in favour of rails is the richness of the features it offers.&lt;/p&gt;


	&lt;p&gt;Maybe trac is not the right place for enhancement request. Maybe a separate page (not a wiki, too open ended) where users can make requests/implement those request together with an incredible tutorial on how to patch rails (in a non-intrusive way) might work better. You could even choose to combine it with a reward system. However, in that case maintenance should be rewarded too, which will be the hard part to award). But no matter how to implement it, these enhancements need to be centralised and closely associated with rails-core.
I think generating more user input, both suggestions and actual code, is what rails need not to be surpassed by another &amp;#8220;rails vision&amp;#8221; framework.&lt;/p&gt;</description>
      <pubDate>Thu, 08 Jun 2006 05:21:49 -0400</pubDate>
      <guid isPermaLink="false">urn:uuid:f3be161e-4050-4f4d-af52-5f1276f45211</guid>
      <link>http://glu.ttono.us/articles/2006/06/05/weigh-in-patches-plugins-and-proposed-enhancements#comment-917</link>
    </item>
    <item>
      <title>"Weigh In: Patches, Plugins and Proposed Enhancements" by Andre in LA</title>
      <description>&lt;p&gt;I vote for moving the enhancements from Trac to the Wiki or another centralized repository. I want Rails to progress towards its core principles. Also, having the extra features as plugins will allow authors to make frequent enhancements and updates.&lt;/p&gt;</description>
      <pubDate>Tue, 06 Jun 2006 17:19:09 -0400</pubDate>
      <guid isPermaLink="false">urn:uuid:3fc555ef-acb8-4cbb-9b0a-581e3e236606</guid>
      <link>http://glu.ttono.us/articles/2006/06/05/weigh-in-patches-plugins-and-proposed-enhancements#comment-915</link>
    </item>
    <item>
      <title>"Weigh In: Patches, Plugins and Proposed Enhancements" by Tom</title>
      <description>&lt;p&gt;From what I&amp;#8217;ve read:&lt;/p&gt;


	&lt;p&gt;1) &amp;#8220;Enhancement&amp;#8221; tickets in Trac don&amp;#8217;t get acted on.
2) People still want a way of tracking enhancements.&lt;/p&gt;


	&lt;p&gt;So, if the people who work on tickets don&amp;#8217;t have time to worry about (code-less) enhancements, then break it out into a separate system&amp;#8230; it&amp;#8217;s not doing anyone any good where it is.&lt;/p&gt;


	&lt;p&gt;Maybe, if no one ever has time to look at it, that separate system becomes a bucket of things that goes nowhere, until one day someone has the initiative to start making headway on that repository.  Or, maybe it becomes a place where the masses who can write plugins/patches take those suggestions and make plugins for them&amp;#8230; or make patches and submit them as enhancement tickets with code attached.&lt;/p&gt;


	&lt;p&gt;Although it&amp;#8217;s not clear what the new system would become, it seems logical to break it out.&lt;/p&gt;</description>
      <pubDate>Mon, 05 Jun 2006 13:54:27 -0400</pubDate>
      <guid isPermaLink="false">urn:uuid:0353d172-c32e-480b-9908-8c3a0db46555</guid>
      <link>http://glu.ttono.us/articles/2006/06/05/weigh-in-patches-plugins-and-proposed-enhancements#comment-908</link>
    </item>
    <item>
      <title>"Weigh In: Patches, Plugins and Proposed Enhancements" by brasten</title>
      <description>&lt;p&gt;What about flagging the tickets as &amp;#8216;Patch/Plugin Wanted&amp;#8217;.  Some sort of designation that the enhancement request is understandable and would probably be accepted but is not going to be addressed by core developers.&lt;/p&gt;


	&lt;p&gt;It might also encourage people who want to contribute to Rails to actually do so.  If someone&amp;#8217;s able to browse through tickets that the core deems important enough to keep open (even if they&amp;#8217;re too busy to implement it), they might find that motivating.&lt;/p&gt;


	&lt;p&gt;(Yes, it would be basically the same as &amp;#8216;wontfix&amp;#8217;, but it&amp;#8217;s all in how you present it to those who may help.)&lt;/p&gt;


	&lt;p&gt;On a somewhat related note, has anyone considered backing out some of Rails&amp;#8217; Scriptaculous/Prototype functionality?  Rails seems to give the impression that, eventually, the goal is to replace JavaScript with Ruby, or at least severely minimize the amount of JavaScript you&amp;#8217;ll have to use.  Whether or not that&amp;#8217;s ACTUALLY the goal, if you give people a little they&amp;#8217;ll want more.  (Why can&amp;#8217;t you make a change_cursor helper?  or a sortable_rearrangeable_multiselect_data_grid helper??)&lt;/p&gt;


	&lt;p&gt;It seems to me that Ajax-based helpers (remote forms, remote functions, anything else with &amp;#8220;remote&amp;#8221;) belong as a part of the Rails core, since their job it to facilitate interaction with the Rails app (and have to be somewhat aware of their environment.. urls and such).  But visual_effect?  alert?  sortable_element?  Do we really want these?  Do these types of helpers expose us to an &amp;#8216;object-model tax&amp;#8217;?&lt;/p&gt;</description>
      <pubDate>Mon, 05 Jun 2006 12:01:53 -0400</pubDate>
      <guid isPermaLink="false">urn:uuid:b279f2ef-4c0d-4fec-adcc-319b1e22d30d</guid>
      <link>http://glu.ttono.us/articles/2006/06/05/weigh-in-patches-plugins-and-proposed-enhancements#comment-907</link>
    </item>
    <item>
      <title>"Weigh In: Patches, Plugins and Proposed Enhancements" by Todd Huss</title>
      <description>&lt;p&gt;We were suffering from the same problem at work and it was making our issue tracking system unusable and here&amp;#8217;s roughly how we solved the problem:&lt;/p&gt;


	&lt;p&gt;Folks on the outside can only enter bugs into trac and have another forum (wiki/email list/forums) to propose and discuss new features.&lt;/p&gt;


	&lt;p&gt;Folks on the inside (core) are the only ones who can create enhancement tickets (either from a patch they receive or for a feature they deem worthy to implement).&lt;/p&gt;


	&lt;p&gt;I think 37signals addresses this well in Getting Real when they say read feature requests and then delete them because you&amp;#8217;ll hear about it over and over again  if it&amp;#8217;s important. Because of that I don&amp;#8217;t think issue/bug tracking systems are really ideal to handle feature requests once a project gets popular enough.&lt;/p&gt;</description>
      <pubDate>Mon, 05 Jun 2006 11:07:48 -0400</pubDate>
      <guid isPermaLink="false">urn:uuid:d1abcf32-8cb7-4391-a105-e95429ad52b8</guid>
      <link>http://glu.ttono.us/articles/2006/06/05/weigh-in-patches-plugins-and-proposed-enhancements#comment-906</link>
    </item>
    <item>
      <title>"Weigh In: Patches, Plugins and Proposed Enhancements" by Julik</title>
      <description>&lt;p&gt;I think it&amp;#8217;s a good idea &amp;#8211; enhancement has to be filed as such when it has a patch pinned to it.&lt;/p&gt;


	&lt;p&gt;It would be nice to have a &amp;#8220;request a feature&amp;#8221; system in addition to Trac though.&lt;/p&gt;</description>
      <pubDate>Mon, 05 Jun 2006 10:48:37 -0400</pubDate>
      <guid isPermaLink="false">urn:uuid:035d5df8-7bc7-49e5-b143-1ddf23356c67</guid>
      <link>http://glu.ttono.us/articles/2006/06/05/weigh-in-patches-plugins-and-proposed-enhancements#comment-905</link>
    </item>
    <item>
      <title>"Weigh In: Patches, Plugins and Proposed Enhancements" by Pat</title>
      <description>&lt;p&gt;Phillip has a good idea.  We should just have a wishlist page on the wiki, and then if someone implements one of the items, delete the entry and make an announcement on the plugins page (or whichever is appropriate).&lt;/p&gt;


	&lt;p&gt;It is good to have that wishlist so that other developers can work on it if they want to.&lt;/p&gt;


	&lt;p&gt;Re: Brandon&amp;#8217;s &amp;#8220;plugin hell&amp;#8221; &amp;#8211; I agree that it may get to be a pain like that.  Really though, merging all this stuff into Rails core will be even worse.  Any time the code base gets larger it becomes harder to maintain.  Right now the plugin authors are able to fix things up as quickly as you need.  If they make it into core, fixes will be a lot slower.&lt;/p&gt;


	&lt;p&gt;If some things should be in core, they&amp;#8217;l make it in.  Also if we do eventually have plugin hell, someone will no doubt come up with a creative way of managing it better.  It&amp;#8217;s not really a problem yet though, and I doubt it ever will be.&lt;/p&gt;</description>
      <pubDate>Mon, 05 Jun 2006 10:39:34 -0400</pubDate>
      <guid isPermaLink="false">urn:uuid:b20a8f76-0c4d-4df4-acd3-6e6511f828a3</guid>
      <link>http://glu.ttono.us/articles/2006/06/05/weigh-in-patches-plugins-and-proposed-enhancements#comment-904</link>
    </item>
    <item>
      <title>"Weigh In: Patches, Plugins and Proposed Enhancements" by David Goodlad</title>
      <description>&lt;p&gt;Enhancement &lt;em&gt;requests&lt;/em&gt;, in contrast to patches, don&amp;#8217;t really help much.  They are, as others have said, a wishlist.  The Rails core Trac doesn&amp;#8217;t really seem like an appropriate place, and they just add more work for those trying to keep the list of open tickets down.&lt;/p&gt;


	&lt;p&gt;A separate way to track the desires of developers who are unable to implement their own needs would be good.  I like the idea that blogs will become a good venue for discussion, but it may not be good enough for some people.  Many developers will not have enough traffic hitting their blogs to generate very much interest, so will feel &amp;#8216;left out&amp;#8217;.  However, I truly feel that if it&amp;#8217;s something that a developer &lt;em&gt;needs&lt;/em&gt;, they are software developers and they should at least make some effort to try to implement it.  Rails is open source for a reason :)&lt;/p&gt;</description>
      <pubDate>Mon, 05 Jun 2006 09:55:57 -0400</pubDate>
      <guid isPermaLink="false">urn:uuid:3400f74d-e6d2-4393-aede-67a7b6f41319</guid>
      <link>http://glu.ttono.us/articles/2006/06/05/weigh-in-patches-plugins-and-proposed-enhancements#comment-903</link>
    </item>
    <item>
      <title>"Weigh In: Patches, Plugins and Proposed Enhancements" by Aaron Blohowiak</title>
      <description>&lt;p&gt;How about a bounty system for enhancements? Let people put their money where their want is.&lt;/p&gt;</description>
      <pubDate>Mon, 05 Jun 2006 09:28:51 -0400</pubDate>
      <guid isPermaLink="false">urn:uuid:8b211403-5b50-4bd0-bd68-1ee672db529e</guid>
      <link>http://glu.ttono.us/articles/2006/06/05/weigh-in-patches-plugins-and-proposed-enhancements#comment-902</link>
    </item>
    <item>
      <title>"Weigh In: Patches, Plugins and Proposed Enhancements" by Jeremy McAnally</title>
      <description>&lt;p&gt;I actually like having the enhancements there; it&amp;#8217;s a nice, central place to have a wishlist.  I&amp;#8217;m not familiar enough with the Rails codebase to be making any core changes, but I do like to flip through the enhancements (which are usually smaller more manageable tasks) and do what I can.  If you guys decide to remove it, tell me and I&amp;#8217;ll put a trac over on my site for people to put enhancements on so at least the plugin writers will know where to look. :)&lt;/p&gt;</description>
      <pubDate>Mon, 05 Jun 2006 09:09:43 -0400</pubDate>
      <guid isPermaLink="false">urn:uuid:ff7081da-77bb-41cb-a218-ca08eefef6f6</guid>
      <link>http://glu.ttono.us/articles/2006/06/05/weigh-in-patches-plugins-and-proposed-enhancements#comment-901</link>
    </item>
    <item>
      <title>"Weigh In: Patches, Plugins and Proposed Enhancements" by Tim Lucas</title>
      <description>&lt;p&gt;I say let blogs (and mailing lists) be the new form of  enhancement discussion. Anything genuinely decent will spark interest and makes it way back if it&amp;#8217;s deserving. Anything that&amp;#8217;s not of interest will quickly fade away.&lt;/p&gt;</description>
      <pubDate>Mon, 05 Jun 2006 08:49:22 -0400</pubDate>
      <guid isPermaLink="false">urn:uuid:1813f56d-faf7-4534-8c0c-434eee57b711</guid>
      <link>http://glu.ttono.us/articles/2006/06/05/weigh-in-patches-plugins-and-proposed-enhancements#comment-900</link>
    </item>
    <item>
      <title>"Weigh In: Patches, Plugins and Proposed Enhancements" by Geir</title>
      <description>&lt;p&gt;I&amp;#8217;m a Rails developer but don&amp;#8217;t feel that I have the knowledge or time to write patches (yet). I haven&amp;#8217;t created a single ticket on the Trac system.&lt;/p&gt;


	&lt;p&gt;I gave up on monitoring the &amp;#8216;ticket changes&amp;#8217; part of the Trac timeline RSS because of the enhancement noise.&lt;/p&gt;


	&lt;p&gt;I support removing the &amp;#8220;magic lantern&amp;#8221; enhancement tickets from the Trac system.&lt;/p&gt;</description>
      <pubDate>Mon, 05 Jun 2006 08:39:04 -0400</pubDate>
      <guid isPermaLink="false">urn:uuid:bfd83d77-f87a-4921-b3e0-224dae876dc6</guid>
      <link>http://glu.ttono.us/articles/2006/06/05/weigh-in-patches-plugins-and-proposed-enhancements#comment-899</link>
    </item>
    <item>
      <title>"Weigh In: Patches, Plugins and Proposed Enhancements" by Phillip Toland</title>
      <description>&lt;p&gt;I think that removing the enhancement category from Trac would be a mistake. Even if the core team cannot work on those enhancements, at least there is an &amp;#8220;official&amp;#8221; wish list for others who are looking to contribute. In order to lower the signal-to-noise ratio maybe the enhancements could be tracked separately?&lt;/p&gt;</description>
      <pubDate>Mon, 05 Jun 2006 08:30:10 -0400</pubDate>
      <guid isPermaLink="false">urn:uuid:9cfa89d6-f73b-4f5e-8af7-5357adaeaa57</guid>
      <link>http://glu.ttono.us/articles/2006/06/05/weigh-in-patches-plugins-and-proposed-enhancements#comment-898</link>
    </item>
    <item>
      <title>"Weigh In: Patches, Plugins and Proposed Enhancements" by Brandon keepers</title>
      <description>&lt;p&gt;What makes rails wonderful, especially to newbies, is that out of the box it does (almost) everything you can think of, and it does it simply.  It is a complete stack that is integrated from top to bottom.  When I start a rails project, I don&amp;#8217;t have to choose from the smorgasbord for each layer and hope that everything works well together.&lt;/p&gt;


	&lt;p&gt;But if rails continues down the path that it is going, it will be no different than any other platform.  When I start a new project, I currently have about 10 plugins that I install, almost half of which are just enhancements (like 12_hour_time, annotate_models, etc).  None of these are absolute requirements, but at what point will rails no longer be suitable for most people out-of-the-box? (Java programmers come to know this as JAR-hell.)&lt;/p&gt;


	&lt;p&gt;Besides lack of features in the core, the other problem with not accepting enhancements is that code is less likely to be scrutinized by the community when it&amp;#8217;s delivered as a plugin.&lt;/p&gt;</description>
      <pubDate>Mon, 05 Jun 2006 08:05:15 -0400</pubDate>
      <guid isPermaLink="false">urn:uuid:b5d75b6b-5d6d-48d8-8c2d-8044f4ba58cf</guid>
      <link>http://glu.ttono.us/articles/2006/06/05/weigh-in-patches-plugins-and-proposed-enhancements#comment-897</link>
    </item>
    <item>
      <title>"Weigh In: Patches, Plugins and Proposed Enhancements" by Pat</title>
      <description>&lt;p&gt;I occasionally check out the ticket list, and it&amp;#8217;s always gigantic.  It is a pretty amazing feat for the committers to achieve what they do in the first place.&lt;/p&gt;


	&lt;p&gt;There are plenty of things that are wrong with Rails and need fixing.  Just as a couple examples, there are some weird PostgreSQL issues at times.  I&amp;#8217;ve never even been able to successfully run the AR unit tests against Postgres, so I don&amp;#8217;t feel confident in fixing those things myself.  Transactions also aren&amp;#8217;t supported in fixtures, which is a surprise (and I generally like the principle of least surprise).&lt;/p&gt;


	&lt;p&gt;Those are just a couple things in Rails that should work but don&amp;#8217;t.  These should definitely be taken care of before enhancements are made.  Enhancements to a broken system are bad &amp;#8211; check out the Broken Windows chapter of PragProg.  If the committers don&amp;#8217;t have time to get to these enhancements anyway, they shouldn&amp;#8217;t be included at all.  As you said, it just ruins the SvN.&lt;/p&gt;


	&lt;p&gt;I do think it might be worthwhile to have one or two committers dedicated to enhancements, while the rest fix up bugs.  You might want to search the community for developers who have a track record of releasing good enhancement-style plugins.&lt;/p&gt;


	&lt;p&gt;Finally, if the Trac doesn&amp;#8217;t even accept enhancement requests, more people will write plugins instead of hoping they make it into the core, which will only be good for the community as a whole.  Many of the requests don&amp;#8217;t even belong in the core so would get rejected anyway &amp;#8211; might as well get those people writing plugins from the getgo.&lt;/p&gt;</description>
      <pubDate>Mon, 05 Jun 2006 05:39:56 -0400</pubDate>
      <guid isPermaLink="false">urn:uuid:40b41d48-aea6-4310-9766-5bb5a399411e</guid>
      <link>http://glu.ttono.us/articles/2006/06/05/weigh-in-patches-plugins-and-proposed-enhancements#comment-896</link>
    </item>
  </channel>
</rss>
