<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <title>Gluttonous</title>
  <meta http-equiv="content-type" content="text/html; charset=utf-8" />
  <meta content="32.867098, -117.211597" name="ICBM" />
  <link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://glu.ttono.us/xml/rsd" />
  <link rel="alternate" type="application/rss+xml" title="RSS" href="http://feeds.feedburner.com/Gluttonous" />
  <link rel="alternate" type="application/atom+xml" title="Atom" href="http://feeds.feedburner.com/Gluttonous" />
  <script src="/javascripts/cookies.js?1155250443" type="text/javascript"></script>
  <script src="/javascripts/prototype.js?1155250443" type="text/javascript"></script>
  <script src="/javascripts/effects.js?1155250443" type="text/javascript"></script>
  <script src="/javascripts/typo.js?1155250443" type="text/javascript"></script>
  
  <script type="text/javascript"></script>
  <link href="/stylesheets/theme/azure.css?1215021856" media="all" rel="Stylesheet" type="text/css" />
  <link href="/stylesheets/user-styles.css?1155250443" media="all" rel="Stylesheet" type="text/css" />
  <link href="/stylesheets/theme/print.css?1215021856" media="print" rel="Stylesheet" type="text/css" />
  <link href='http://www.myopenid.com/server' rel='openid.server' />
  <link href='http://kevinclark.myopenid.com/' rel='openid.delegate' />
</head>

<body>
  <div id="container" class="clearfix">
      <div id="header">
        <div id="logo">
          <h1 id="sitename"><a href="/">Gluttonous</a></h1>
          <h2 id="subtitle"></h2>
        </div>
      </div>
      
      <div id="search"> <form action="/articles/search" id="sform" method="get">
 <label for="q">Live Search:</label><input type="text" id="q" name="q" value="" size="15" />
<img alt="Spinner-blue" id="search_spinner" src="/images/spinner-blue.gif?1155250442" style="display:none;" />
</form>
<script type="text/javascript">
//<![CDATA[
new Form.Element.Observer('q', 1, function(element, value) {new Ajax.Updater('search-results', '/live/search', {asynchronous:true, evalScripts:true, onComplete:function(request){Element.hide('search_spinner')}, onLoading:function(request){Element.show('search_spinner')}, parameters:'q=' + escape($F('q'))})})
//]]>
</script></div>
      

      <div id="content" class="clearfix">
        <div id="main">
           <div class="post">
  <h2><a href="/articles/2006/01/25/recent-downtime">Recent Downtime</a></h2>
<p class="auth">Posted by kev
<span class="typo_date" title="Wed, 25 Jan 2006 22:07:03 GMT">Wed, 25 Jan 2006 22:07:03 GMT</span></p>
<p>Sorry about the recent outages folks. Seems apache was having some permissions errors, but the great people at <a href="http://planetargon.com">Planet Argon</a> were quick to get me fixed up.</p>

  
  <p class="meta">Posted in <a href="/articles/category/musings" rel="tag">Musings</a>&nbsp;<strong>|</strong>&nbsp;<a href="/articles/2006/01/25/recent-downtime#comments">no comments</a>&nbsp;<strong>|</strong>&nbsp;<a href="/articles/2006/01/25/recent-downtime#trackbacks">1 trackback</a></p>
  </div>
 <div class="post">
  <h2><a href="/articles/2006/01/18/on-mock-stub-nomenclature">On Mock/Stub Nomenclature</a></h2>
<p class="auth">Posted by kev
<span class="typo_date" title="Wed, 18 Jan 2006 21:17:00 GMT">Wed, 18 Jan 2006 21:17:00 GMT</span></p>
<p>In the wake of <a href="http://blog.caboo.se/articles/2006/01/12/mocking-net-http-get">my own confusion</a> on the differences between mocks and stubbs, <a href="http://martinfowler.com/">Martin Fowler</a> has posted a <a href="http://martinfowler.com/bliki/TestDouble.html">nice summary</a> of the differences between various types of objects used in testing.</p>

<p>via <a href="http://www.robbyonrails.com:8680/articles/2006/01/18/dont-mock-me-said-the-dummy-object">Robby Russell</a>.</p>

  
  <p class="meta">Posted in <a href="/articles/category/coding" rel="tag">Coding</a>, <a href="/articles/category/ruby" rel="tag">Ruby</a>&nbsp;<strong>|</strong>&nbsp;<a href="/articles/2006/01/18/on-mock-stub-nomenclature#comments">no comments</a>&nbsp;<strong>|</strong>&nbsp;<a href="/articles/2006/01/18/on-mock-stub-nomenclature#trackbacks">1 trackback</a></p>
  </div>
 <div class="post">
  <h2><a href="/articles/2006/01/12/mocking-net-http-get">Mocking Net::HTTP.get</a></h2>
<p class="auth">Posted by kev
<span class="typo_date" title="Fri, 13 Jan 2006 00:04:15 GMT">Fri, 13 Jan 2006 00:04:15 GMT</span></p>
<p>I&#8217;ve written a small article called <a href="http://blog.caboo.se/articles/2006/01/12/mocking-net-http-get">Mocking Net::HTTP.get</a> over at the <a href="http://blog.caboo.se">Caboose Blog</a>.</p>

<p>Go check it out.</p>

  
  <p class="meta">Posted in <a href="/articles/category/rails" rel="tag">Rails</a>&nbsp;<strong>|</strong>&nbsp;<a href="/articles/2006/01/12/mocking-net-http-get#comments">no comments</a>&nbsp;<strong>|</strong>&nbsp;<a href="/articles/2006/01/12/mocking-net-http-get#trackbacks">no trackbacks</a></p>
  </div>
 <div class="post">
  <h2><a href="/articles/2006/01/05/so-im-famous">So, I'm famous</a></h2>
<p class="auth">Posted by kev
<span class="typo_date" title="Thu, 05 Jan 2006 20:23:00 GMT">Thu, 05 Jan 2006 20:23:00 GMT</span></p>
<p>Ok, so thats just a hook. I&#8217;m not really famous. I did however make the front page of Digg, albeit not credited to me directly. I guess I should give some background.</p>

<p>I&#8217;m the managing editor of a satire newspaper at UCSD. These days I don&#8217;t do alot of writing, but I have had some articles I was proud of over the last several years.</p>

<p><a href="http://www.themq.com/index.php?issue=103&amp;articleid=58">One of them</a> made <a href="http://digg.com/science/Copulating_deaf_couple_unaware_of_own_volume_">digg</a> and, according to the comments, the front page.</p>

<p>Cool eh?</p>

  
  <p class="meta">Posted in <a href="/articles/category/musings" rel="tag">Musings</a>&nbsp;<strong>|</strong>&nbsp;<a href="/articles/2006/01/05/so-im-famous#comments">no comments</a>&nbsp;<strong>|</strong>&nbsp;<a href="/articles/2006/01/05/so-im-famous#trackbacks">1 trackback</a></p>
  </div>
 <div class="post">
  <h2><a href="/articles/2006/01/02/holiday-loot">Holiday Loot</a></h2>
<p class="auth">Posted by kev
<span class="typo_date" title="Mon, 02 Jan 2006 18:57:00 GMT">Mon, 02 Jan 2006 18:57:00 GMT</span></p>
<p>With the new year upon us, I&#8217;m enjoying snuggling up with my wonderous gifts:</p>

<ul>
<li>Firefly the Series (DVD) from the girlfriend &#8211; No one should be without it. Really, if you haven&#8217;t seen it, rent it or buy it or cry in a corner. You don&#8217;t know what you&#8217;re missing.</li>
<li>The Pragmatic Programmer, Code Complete and Domain Driven Design from the folks. This year my resolution is to make better more maintainable code.</li>
<li>Refactoring  (yes the Fowler book) from myself. I was browsing the book store and couldn&#8217;t help myself. It is truly excellent.</li>
</ul>

<p>Hooray for good books, and thanks to <a href="http://lunchroom.lunchboxsoftware.com/">Scott Baron</a> for pointing out DDD and <a href="http://www.jvoorhis.com">Jeremy Voorhis</a> and <a href="http://www.robbyonrails.com">Robby Russell</a> for mentioning Refactoring.</p>

  
  <p class="meta">Posted in <a href="/articles/category/musings" rel="tag">Musings</a>&nbsp;<strong>|</strong>&nbsp;<a href="/articles/2006/01/02/holiday-loot#comments">4 comments</a>&nbsp;<strong>|</strong>&nbsp;<a href="/articles/2006/01/02/holiday-loot#trackbacks">no trackbacks</a></p>
  </div>
 <div class="post">
  <h2><a href="/articles/2005/12/29/steve-jobs-does-hollywood">Steve Jobs Does Hollywood</a></h2>
<p class="auth">Posted by kev
<span class="typo_date" title="Fri, 30 Dec 2005 03:11:00 GMT">Fri, 30 Dec 2005 03:11:00 GMT</span></p>
<p><a href="http://www.mikeindustries.com/blog/archive/2005/12/ipod-giveaway-7-steve-jobs#comments">This site</a> is doing an ipod give away to the best &#8216;Steve Jobs Movie Poster&#8217;. It&#8217;s good stuff, so take a look.</p>

<p>Here&#8217;s my entry:</p>

<p><img src="http://thar.be/SteveJobsPoster.jpg" style="border: 1px solid black;" /></p>

  
  <p class="meta">Posted in <a href="/articles/category/musings" rel="tag">Musings</a>&nbsp;<strong>|</strong>&nbsp;<a href="/articles/2005/12/29/steve-jobs-does-hollywood#comments">2 comments</a>&nbsp;<strong>|</strong>&nbsp;<a href="/articles/2005/12/29/steve-jobs-does-hollywood#trackbacks">no trackbacks</a></p>
  </div>
 <div class="post">
  <h2><a href="/articles/2005/12/19/specification-classes-make-my-code-happy">Specification classes make my code happy</a></h2>
<p class="auth">Posted by kev
<span class="typo_date" title="Mon, 19 Dec 2005 19:46:00 GMT">Mon, 19 Dec 2005 19:46:00 GMT</span></p>
<p>I recently re-stumbled-over <a href="http://lunchroom.lunchboxsoftware.com/pages/specifications">Scott Baron</a>&#8217;s (htonl of the core team) post on <a href="http://lunchroom.lunchboxsoftware.com/pages/specifications">Specification Classes</a>. These little gems abstract your validation logic so your model validations aren&#8217;t strongly coupled with other models. </p>

<p>So, for example:</p>

<p>I&#8217;m writing a ticket sales application. I need to make sure that when someone submits an order that the tickets that belong to that order are still avaliable. In this case we&#8217;ve got an <code>order has_many :tickets</code> relationship.</p>

<p>How do I validate this? Well, I could override the <code>ActiveRecord::Base.validate</code> method to look at all of the tickets and determine if they&#8217;re avaliable, but thats messy. The AR validations are really about database conditions for data, not logic for when an order is acceptable.</p>

<p>Spec classes to the rescue! I specify conditions for a proper order in my OrderSpecification class:</p>

<div class="typocode"><pre><code class="typocode_ruby "><span class="keyword">class </span><span class="class">OrderSpecification</span>
  <span class="ident">extend</span> <span class="constant">Specification</span>

  <span class="ident">satisfies</span> <span class="symbol">:all_tickets_avaliable</span><span class="punct">,</span> <span class="punct">'</span><span class="string">not all tickets are avaliable</span><span class="punct">'</span> <span class="keyword">do</span> <span class="punct">|</span><span class="ident">order</span><span class="punct">|</span>
    <span class="ident">order</span><span class="punct">.</span><span class="ident">tickets</span><span class="punct">.</span><span class="ident">each</span> <span class="punct">{|</span><span class="ident">t</span><span class="punct">|</span> <span class="ident">t</span><span class="punct">.</span><span class="ident">reload</span><span class="punct">}</span>
    <span class="ident">order</span><span class="punct">.</span><span class="ident">tickets</span><span class="punct">.</span><span class="ident">inject</span><span class="punct">(</span><span class="constant">true</span><span class="punct">)</span> <span class="punct">{|</span><span class="ident">avaliable</span><span class="punct">,</span> <span class="ident">t</span><span class="punct">|</span> <span class="ident">avaliable</span> <span class="punct">&amp;&amp;</span> <span class="ident">t</span><span class="punct">.</span><span class="ident">avaliable?</span> <span class="punct">}</span>
  <span class="keyword">end</span>
<span class="keyword">end</span></code></pre></div>

<p>Following Scott&#8217;s suggestions, I create a service class to be in charge of creating an order.</p>

<div class="typocode"><pre><code class="typocode_ruby "><span class="keyword">class </span><span class="class">OrderService</span>
  <span class="keyword">def </span><span class="method">self.process_order</span><span class="punct">(</span><span class="ident">order</span><span class="punct">,</span> <span class="ident">user</span><span class="punct">)</span>
    <span class="keyword">return</span> <span class="constant">false</span> <span class="keyword">unless</span> <span class="constant">OrderSpecification</span><span class="punct">.</span><span class="ident">passes_all?</span><span class="punct">(</span><span class="ident">order</span><span class="punct">)</span>
    <span class="ident">order</span><span class="punct">.</span><span class="ident">tickets</span><span class="punct">.</span><span class="ident">each</span> <span class="punct">{|</span><span class="ident">ticket</span><span class="punct">|</span> <span class="ident">ticket</span><span class="punct">.</span><span class="ident">avaliable</span> <span class="punct">=</span> <span class="constant">false</span><span class="punct">;</span> <span class="ident">ticket</span><span class="punct">.</span><span class="ident">user_id</span> <span class="punct">=</span> <span class="ident">user</span><span class="punct">}</span>
    <span class="ident">order</span><span class="punct">.</span><span class="ident">user_id</span> <span class="punct">=</span> <span class="ident">user</span>
    <span class="ident">order</span><span class="punct">.</span><span class="ident">save</span>
  <span class="keyword">end</span>
<span class="keyword">end</span></code></pre></div>

<p>And finally, I use the service class to create my order in my OrdersController.</p>

<div class="typocode"><pre><code class="typocode_ruby ">  <span class="keyword">def </span><span class="method">create</span>
    <span class="punct">....</span>

    <span class="attribute">@order</span> <span class="punct">=</span> <span class="ident">Order</span><span class="punct">.</span><span class="ident">new</span><span class="punct">(</span><span class="ident">params</span><span class="punct">[</span><span class="symbol">:order</span><span class="punct">])</span>

    <span class="attribute">@cart</span><span class="punct">.</span><span class="ident">tickets</span><span class="punct">.</span><span class="ident">each</span> <span class="punct">{|</span><span class="ident">ticket</span><span class="punct">|</span> <span class="attribute">@order</span><span class="punct">.</span><span class="ident">tickets</span> <span class="punct">&lt;&lt;</span> <span class="ident">ticket</span><span class="punct">}</span>  

    <span class="keyword">if</span> <span class="constant">OrderService</span><span class="punct">.</span><span class="ident">process_order</span><span class="punct">(</span><span class="attribute">@order</span><span class="punct">,</span> <span class="attribute">@session</span><span class="punct">[</span><span class="symbol">:user</span><span class="punct">].</span><span class="ident">id</span><span class="punct">)</span>
      <span class="comment"># do stuff</span>
    <span class="keyword">else</span>
      <span class="comment"># do other stuff</span>
    <span class="keyword">end</span>
  <span class="keyword">end</span></code></pre></div>

<p>Most excellent. Thanks Scott!</p>

<p><strong>Update:</strong>I realize that I referenced the Specification class itself in my code above. See <a href="http://lunchroom.lunchboxsoftware.com/pages/specifications">Scott&#8217;s post</a> for the code.</p>

  
  <p class="meta">Posted in <a href="/articles/category/coding" rel="tag">Coding</a>, <a href="/articles/category/rails" rel="tag">Rails</a>, <a href="/articles/category/ruby" rel="tag">Ruby</a>&nbsp;<strong>|</strong>&nbsp;<a href="/articles/2005/12/19/specification-classes-make-my-code-happy#comments">no comments</a>&nbsp;<strong>|</strong>&nbsp;<a href="/articles/2005/12/19/specification-classes-make-my-code-happy#trackbacks">no trackbacks</a></p>
  </div>
 <div class="post">
  <h2><a href="/articles/2005/12/16/caboose-blogs">Caboose blogs</a></h2>
<p class="auth">Posted by kev
<span class="typo_date" title="Fri, 16 Dec 2005 22:18:00 GMT">Fri, 16 Dec 2005 22:18:00 GMT</span></p>
<p>Several members of #caboose are now blogging together tricks, tips and demos. Find us <a href="http://blog.caboo.se">here</a>.</p>

  
  <p class="meta">Posted in <a href="/articles/category/coding" rel="tag">Coding</a>, <a href="/articles/category/rails" rel="tag">Rails</a>, <a href="/articles/category/ruby" rel="tag">Ruby</a>, <a href="/articles/category/hacks" rel="tag">Hacks</a></p>
  </div>
 <div class="post">
  <h2><a href="/articles/2005/12/14/kong">Kong</a></h2>
<p class="auth">Posted by kev
<span class="typo_date" title="Wed, 14 Dec 2005 10:33:33 GMT">Wed, 14 Dec 2005 10:33:33 GMT</span></p>
<p>&#8220;I liked the part where he swung the plane around&#8221; &#8211; Jordan, my roommate, commenting on King Kong</p>

<p>Simply incredible. Several parts actually took my breath away, and the insects were actually frightening.</p>

  
  <p class="meta">Posted in <a href="/articles/category/musings" rel="tag">Musings</a>&nbsp;<strong>|</strong>&nbsp;<a href="/articles/2005/12/14/kong#comments">no comments</a>&nbsp;<strong>|</strong>&nbsp;<a href="/articles/2005/12/14/kong#trackbacks">1 trackback</a></p>
  </div>
 <div class="post">
  <h2><a href="/articles/2005/12/04/help-me-pick-hardware">Help Me Pick Hardware</a></h2>
<p class="auth">Posted by kev
<span class="typo_date" title="Mon, 05 Dec 2005 01:53:01 GMT">Mon, 05 Dec 2005 01:53:01 GMT</span></p>
<p>I&#8217;m picking out hardware for a pet project of mine. The project, which incidentally was my first journey in to Ruby and Rails back in May, is a slant on the classic and horribly addictive <a href="http://toothpastefordinner.com/lj/php">live journal image aggregators</a>.</p>

<p>Anyway, the program downloads and formats (crops/resizes and such) images from the stream, scrapes the blogs for keywords and places info in the database. There&#8217;s also a rails front end to view and tag. Bandwidth isn&#8217;t an issue, this began as a University research project and they&#8217;re going to let us host in the server room. I need to come up with a server.</p>

<p>The people involved have gathered funds and we&#8217;re looking at a server in the &lt; $1000 range. Hard drive space is a major issue: with the amount of stuff we&#8217;ll be downloading we need atleast 200 gigs and mirrored with RAID would be nice.</p>

<p>What should I buy and from where? We can make this a general good deals on hardware post if we&#8217;d like, but any suggestions for my project would be especially helpful.</p>

<p>Go at it.</p>

  
  <p class="meta">Posted in <a href="/articles/category/rails" rel="tag">Rails</a>, <a href="/articles/category/ruby" rel="tag">Ruby</a>&nbsp;<strong>|</strong>&nbsp;<a href="/articles/2005/12/04/help-me-pick-hardware#comments">2 comments</a>&nbsp;<strong>|</strong>&nbsp;<a href="/articles/2005/12/04/help-me-pick-hardware#trackbacks">no trackbacks</a></p>
  </div>


  <p id="pagination">Older posts: <a href="/articles/page/1">1</a> ...  <a href="/articles/page/10">10</a> <a href="/articles/page/11">11</a> 12 <a href="/articles/page/13">13</a> <a href="/articles/page/14">14</a>  ... <a href="/articles/page/17">17</a></p>

          <script type="text/javascript">
//<![CDATA[
show_dates_as_local_time()
//]]>
</script>
        </div>
        
        <div id="sidebar">
          
            <div id="search-results"></div>
            
              
      
<div class="sidebar-node">
  <h3>About</h3>
My name is Kevin Clark. I'm a <a href="http://ruby-lang.org">Ruby</a> hacker making awesome things at <a href="http://powerset.com">Powerset</a> in San Francisco.

</div>


      
<div class="sidebar-node">
  <h3>Understanding</h3>
<a href="http://glu.ttono.us/articles/2005/08/19/understanding-ruby-symbols">Ruby Symbols</a><br />
<a href="http://glu.ttono.us/articles/2005/09/05/environments-in-rails-0-13-1">Environments in Rails 0.13.1</a><br />
<a href="http://glu.ttono.us/articles/2005/10/27/the-joy-of-migrations">The Joy of Migrations</a><br />
<a href="http://glu.ttono.us/articles/2005/10/30/why-and-how-ruby-and-rails-unit-testing">Ruby (and Rails) Unit Testing</a><br />
<a href="http://glu.ttono.us/articles/2006/02/06/rails-best-practices-tips-and-tricks">Rails Best Practices, Tips and Tricks</a><br />
<a href="http://glu.ttono.us/articles/2006/03/21/rails-for-designers">Rails for Designers</a><br />
<a href="http://glu.ttono.us/articles/2006/05/22/guide-environments-in-rails-1-1">Environments in Rails 1.1</a><br />
<a href="http://glu.ttono.us/articles/2006/05/29/guide-test-driven-rjs-with-arts">Test Driven RJS with ARTS</a>

</div>


      
<div class="sidebar-node">
  <h3>Cheat Sheets</h3>
<a href="http://glu.ttono.us/articles/2006/05/22/configuring-rails-environments-the-cheat-sheet">Configuring Rails Environments</a>

</div>


      
<div class="sidebar-node">
  <h3>Categories</h3>
<ul id="categories">
  
  <li><a href="/articles/category/web-dev">Web Dev</a> <em>(14)</em></li>
  
  
  <li><a href="/articles/category/coding">Coding</a> <em>(37)</em></li>
  
  
  <li><a href="/articles/category/rails">Rails</a> <em>(74)</em></li>
  
  
  <li><a href="/articles/category/op-ed">Op-Ed</a> <em>(7)</em></li>
  
  
  <li><a href="/articles/category/reviews">Reviews</a> <em>(3)</em></li>
  
  
  <li><a href="/articles/category/musings">Musings</a> <em>(18)</em></li>
  
  
  <li><a href="/articles/category/ruby">Ruby</a> <em>(69)</em></li>
  
  
  <li><a href="/articles/category/hacks">Hacks</a> <em>(22)</em></li>
  
  
  <li><a href="/articles/category/sdrug">sd.rb</a> <em>(10)</em></li>
  
  
  <li><a href="/articles/category/testing">testing</a> <em>(17)</em></li>
  
  
  <li><a href="/articles/category/documentation">documentation</a> <em>(6)</em></li>
  
  
  <li><a href="/articles/category/sightings">sightings</a> <em>(19)</em></li>
  
  
  <li><a href="/articles/category/guides">guides</a> <em>(8)</em></li>
  
  
  <li><a href="/articles/category/cheat-sheets">cheat sheets</a> <em>(1)</em></li>
  
  
  <li><a href="/articles/category/business">business</a> <em>(1)</em></li>
  
  
  <li><a href="/articles/category/summer-of-code">summer of code</a> <em>(5)</em></li>
  
</ul>


</div>


      
<div class="sidebar-node">
  <h3></h3>
<a href="http://feeds.feedburner.com/Gluttonous"><img src="http://feeds.feedburner.com/~fc/Gluttonous?bg=5189b5&amp;fg=333333&amp;anim=0" height="26" width="88" style="border:0" alt="" /></a>

</div>


      
<div class="sidebar-node">
  <h3></h3>
<!-- Creative Commons License -->
<a rel="license" href="http://creativecommons.org/licenses/by-nc-sa/2.5/"><img alt="Creative Commons License" border="0" src="http://creativecommons.org/images/public/somerights20.gif" /></a><br />
<!-- /Creative Commons License -->


<!--

<rdf:RDF xmlns="http://web.resource.org/cc/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
<Work rdf:about="">
   <dc:type rdf:resource="http://purl.org/dc/dcmitype/Text" />
   <license rdf:resource="http://creativecommons.org/licenses/by-nc-sa/2.5/" />
</Work>

<License rdf:about="http://creativecommons.org/licenses/by-nc-sa/2.5/">
   <permits rdf:resource="http://web.resource.org/cc/Reproduction" />
   <permits rdf:resource="http://web.resource.org/cc/Distribution" />
   <requires rdf:resource="http://web.resource.org/cc/Notice" />
   <requires rdf:resource="http://web.resource.org/cc/Attribution" />
   <prohibits rdf:resource="http://web.resource.org/cc/CommercialUse" />
   <permits rdf:resource="http://web.resource.org/cc/DerivativeWorks" />
   <requires rdf:resource="http://web.resource.org/cc/ShareAlike" />
</License>

</rdf:RDF>

-->


</div>


  


            
            
            <a href="http://typo.leetsoft.com/" class="powered"><img alt="Powered" src="/images/powered.gif?1155250442" /></a>
            </div>

            <br clear="all" />
      </div>
      <div id="footer">
        <ul>
          <li><a href="http://validator.w3.org/check?uri=referer">Valid XHTML 1.0</a></li>
          <li><a href="http://jigsaw.w3.org/css-validator/validator?uri=http://glu.ttono.us/">Valid CSS</a></li>
        </ul>
      </div>
  </div>
<script type="text/javascript" src="http://tracker.measuremap.com/a/562"></script>
<script src="http://www.google-analytics.com/urchin.js" type="text/javascript">
</script>
<script type="text/javascript">
_uacct = "UA-89073-1";
urchinTracker();
</script>
</body>
</html>

