<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <title>Gluttonous</title>
  <meta http-equiv="content-type" content="text/html; charset=utf-8" />
  <meta content="32.867098, -117.211597" name="ICBM" />
  <link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://glu.ttono.us/xml/rsd" />
  <link rel="alternate" type="application/rss+xml" title="RSS" href="http://feeds.feedburner.com/Gluttonous" />
  <link rel="alternate" type="application/atom+xml" title="Atom" href="http://feeds.feedburner.com/Gluttonous" />
  <script src="/javascripts/cookies.js?1155250443" type="text/javascript"></script>
  <script src="/javascripts/prototype.js?1155250443" type="text/javascript"></script>
  <script src="/javascripts/effects.js?1155250443" type="text/javascript"></script>
  <script src="/javascripts/typo.js?1155250443" type="text/javascript"></script>
  
  <script type="text/javascript"></script>
  <link href="/stylesheets/theme/azure.css?1215021856" media="all" rel="Stylesheet" type="text/css" />
  <link href="/stylesheets/user-styles.css?1155250443" media="all" rel="Stylesheet" type="text/css" />
  <link href="/stylesheets/theme/print.css?1215021856" media="print" rel="Stylesheet" type="text/css" />
  <link href='http://www.myopenid.com/server' rel='openid.server' />
  <link href='http://kevinclark.myopenid.com/' rel='openid.delegate' />
</head>

<body>
  <div id="container" class="clearfix">
      <div id="header">
        <div id="logo">
          <h1 id="sitename"><a href="/">Gluttonous</a></h1>
          <h2 id="subtitle"></h2>
        </div>
      </div>
      
      <div id="search"> <form action="/articles/search" id="sform" method="get">
 <label for="q">Live Search:</label><input type="text" id="q" name="q" value="" size="15" />
<img alt="Spinner-blue" id="search_spinner" src="/images/spinner-blue.gif?1155250442" style="display:none;" />
</form>
<script type="text/javascript">
//<![CDATA[
new Form.Element.Observer('q', 1, function(element, value) {new Ajax.Updater('search-results', '/live/search', {asynchronous:true, evalScripts:true, onComplete:function(request){Element.hide('search_spinner')}, onLoading:function(request){Element.show('search_spinner')}, parameters:'q=' + escape($F('q'))})})
//]]>
</script></div>
      

      <div id="content" class="clearfix">
        <div id="main">
           <div class="post">
  <h2><a href="/articles/2005/09/09/svn-support-in-rails-generators-again">SVN Support In Rails Generators (Again)</a></h2>
<p class="auth">Posted by kev
<span class="typo_date" title="Fri, 09 Sep 2005 21:37:00 GMT">Fri, 09 Sep 2005 21:37:00 GMT</span></p>
<p>So remember when I told you about my <a href="http://glu.ttono.us/articles/2005/08/27/using-subversion-with-rails-code-generation">patch</a> to add svn support to the automatic code generators in rails? Well, as of this morning in <a href="http://dev.rubyonrails.com/changeset/2174">changeset 2174</a> its in the trunk. Go forth and use generators with excellent version control!</p>

  
  <p class="meta">Posted in <a href="/articles/category/web-dev" rel="tag">Web Dev</a>, <a href="/articles/category/coding" rel="tag">Coding</a>, <a href="/articles/category/rails" rel="tag">Rails</a>, <a href="/articles/category/ruby" rel="tag">Ruby</a>, <a href="/articles/category/hacks" rel="tag">Hacks</a>&nbsp;<strong>|</strong>&nbsp;<a href="/articles/2005/09/09/svn-support-in-rails-generators-again#comments">no comments</a>&nbsp;<strong>|</strong>&nbsp;<a href="/articles/2005/09/09/svn-support-in-rails-generators-again#trackbacks">1 trackback</a></p>
  </div>
 <div class="post">
  <h2><a href="/articles/2005/09/05/environments-in-rails-0-13-1">Environments in Rails 0.13.1</a></h2>
<p class="auth">Posted by kev
<span class="typo_date" title="Tue, 06 Sep 2005 00:30:00 GMT">Tue, 06 Sep 2005 00:30:00 GMT</span></p>
<p>Development, test and production: we all know and love the default rails environments that let us seperate our databases and tests. What do they do, how do they work, and how can we further  customize our rails environment?</p>

<p><strong>Please note</strong>: As of <a href="http://dev.rubyonrails.com/changeset/2115">changeset 2115</a> the rails environment does not work like this article describes. This article will cover environments in 0.13.1 and earlier. I will release another article this week explaining the new environment system.</p>

  <a href="/articles/2005/09/05/environments-in-rails-0-13-1">Read more...</a>
  <p class="meta">Posted in <a href="/articles/category/coding" rel="tag">Coding</a>, <a href="/articles/category/rails" rel="tag">Rails</a>&nbsp;<strong>|</strong>&nbsp;<a href="/articles/2005/09/05/environments-in-rails-0-13-1#comments">no comments</a>&nbsp;<strong>|</strong>&nbsp;<a href="/articles/2005/09/05/environments-in-rails-0-13-1#trackbacks">no trackbacks</a></p>
  </div>
 <div class="post">
  <h2><a href="/articles/2005/09/02/ror">#ror</a></h2>
<p class="auth">Posted by kev
<span class="typo_date" title="Fri, 02 Sep 2005 04:36:00 GMT">Fri, 02 Sep 2005 04:36:00 GMT</span></p>
<pre><code>20:30 < technoweenie> dude, how about a  google ad sense section targeting 
                      helper in rails?  
http://www.google.com/support/adsense/bin/answer.py?answer=23168&topic=371
20:30 < technoweenie> <% google_ad_sense_section do %> .... <% end %>
20:30 < kevinclark> cool
20:31 < technoweenie> hm 
20:31 < technoweenie> the rails helper idea is stupid, dont listne to me
20:33 < kevinclark> yeah, why wouldn't you just hardcode it?
20:33 < technoweenie> because
20:34 < technoweenie> i get off on writing rails helpers
20:34 < kevinclark> its the same amount of characters even
20:34 < technoweenie> it's sickening and i'm trying to stop
20:34 < technoweenie> heh i know!
20:34 < kevinclark> we should form a support group
20:34 < technoweenie> isn't that what this room is?
20:34 < technoweenie> you guys arent doing your jobs</code></pre>

  
  <p class="meta">Posted in <a href="/articles/category/musings" rel="tag">Musings</a>, <a href="/articles/category/rails" rel="tag">Rails</a>, <a href="/articles/category/coding" rel="tag">Coding</a>&nbsp;<strong>|</strong>&nbsp;<a href="/articles/2005/09/02/ror#comments">no comments</a>&nbsp;<strong>|</strong>&nbsp;<a href="/articles/2005/09/02/ror#trackbacks">no trackbacks</a></p>
  </div>
 <div class="post">
  <h2><a href="/articles/2005/08/30/more-subversion-for-rails-generators">More Subversion for Rails Generators</a></h2>
<p class="auth">Posted by kev
<span class="typo_date" title="Wed, 31 Aug 2005 00:54:12 GMT">Wed, 31 Aug 2005 00:54:12 GMT</span></p>
<p>Bugs have been found in the rails subversion patch I submitted. With the current posted version it will not work if you are using externals. If you&#8217;re using the patch and you need a fix, feel free to email me: kevin.clark [at] gmail [dot] com or the nick kevinclark on irc.freenode.net. Additionally, I have put my ticket in the needy patches section as I have found another hiccup that needs to be resolved before being merged with the trunk.</p>

<p>A big thanks to procreate from irc.freenode.net for the heads up!</p>

  
  <p class="meta">Posted in <a href="/articles/category/web-dev" rel="tag">Web Dev</a>, <a href="/articles/category/coding" rel="tag">Coding</a>, <a href="/articles/category/rails" rel="tag">Rails</a>, <a href="/articles/category/ruby" rel="tag">Ruby</a>, <a href="/articles/category/hacks" rel="tag">Hacks</a>&nbsp;<strong>|</strong>&nbsp;<a href="/articles/2005/08/30/more-subversion-for-rails-generators#comments">no comments</a>&nbsp;<strong>|</strong>&nbsp;<a href="/articles/2005/08/30/more-subversion-for-rails-generators#trackbacks">no trackbacks</a></p>
  </div>
 <div class="post">
  <h2><a href="/articles/2005/08/27/using-subversion-with-rails-code-generation">Using Subversion with Rails Code Generation</a></h2>
<p class="auth">Posted by kev
<span class="typo_date" title="Sun, 28 Aug 2005 01:51:00 GMT">Sun, 28 Aug 2005 01:51:00 GMT</span></p>
<p>Subversion is a wonderful thing. Unfortunately, when using rails code generators it can be annoying adding all the newly generated files by hand. Using <code>script/destroy</code> can be hazardous because subversion will complain the files are not there, but have not been flagged for removal from the repository.</p>

<p>So, I wrote a <a href="http://dev.rubyonrails.com/ticket/2064">patch</a>. If it is accepted, you should be able to do things like:</p>

<pre>
<code>[Dionysus:~/web/testbed] kevincla% script/generate model -c Monkey
      exists  app/models/
      exists  test/unit/
      exists  test/fixtures/
      create  app/models/monkey.rb
A         app/models/monkey.rb
      create  test/unit/monkey_test.rb
A         test/unit/monkey_test.rb
      create  test/fixtures/monkeys.yml
A         test/fixtures/monkeys.yml
</code>
</pre>

<p>And all of your happy new code will go into your repository automatically. My patch also accounts for code which has been marked for addition which you would like to delete, so if you just ran the code above and then do <code>script/destroy model -c Monkey</code> it will revert the files and then delete them without any messy svn warnings.</p>

  
  <p class="meta">Posted in <a href="/articles/category/coding" rel="tag">Coding</a>, <a href="/articles/category/rails" rel="tag">Rails</a>, <a href="/articles/category/ruby" rel="tag">Ruby</a>, <a href="/articles/category/hacks" rel="tag">Hacks</a>&nbsp;<strong>|</strong>&nbsp;<a href="/articles/2005/08/27/using-subversion-with-rails-code-generation#comments">1 comment</a>&nbsp;<strong>|</strong>&nbsp;<a href="/articles/2005/08/27/using-subversion-with-rails-code-generation#trackbacks">no trackbacks</a></p>
  </div>
 <div class="post">
  <h2><a href="/articles/2005/08/24/single-table-inheiritence-for-the-impatient">Single Table Inheiritence (in Rails) for the impatient</a></h2>
<p class="auth">Posted by kev
<span class="typo_date" title="Wed, 24 Aug 2005 07:10:00 GMT">Wed, 24 Aug 2005 07:10:00 GMT</span></p>
<ul>
<li>Create a column to hold the object type (automagically works for &#8216;type&#8217;) in the table corresponding to the model you want to inheirit from.</li>
<li>Create a model, and set it to inherit like so:</li>
</ul>

<pre>
<code>
Class BaseClass < ActiveRecord::Base
end

Class ChildClass < BaseClass
end
</code>
</pre>

<ul>
<li>Profit!</li>
</ul>

<p>No, but seriously, you can now use ChildClass.new to create a new ChildClass. It will use the same table as BaseClass. If you want the child class to have more attributes than its parent, add more columns and simply ignore them for the parent. For a full rationale behind why just ignoring them is ok, buy the Agile Rails book. It boils down to convenience and utility. We can easily do this. If you want to impose restrictions on your own to stop base classes or children of a common base class from accessing each others attributes, you&#8217;re welcome to add it to the model code.</p>

<p>For more information, including how to set the column to be something other than type, see the <a href="http://api.rubyonrails.org/classes/ActiveRecord/Base.html">api documentation</a>.</p>

  
  <p class="meta">Posted in <a href="/articles/category/ruby" rel="tag">Ruby</a>, <a href="/articles/category/rails" rel="tag">Rails</a>, <a href="/articles/category/web-dev" rel="tag">Web Dev</a>&nbsp;<strong>|</strong>&nbsp;<a href="/articles/2005/08/24/single-table-inheiritence-for-the-impatient#comments">no comments</a>&nbsp;<strong>|</strong>&nbsp;<a href="/articles/2005/08/24/single-table-inheiritence-for-the-impatient#trackbacks">no trackbacks</a></p>
  </div>
 <div class="post">
  <h2><a href="/articles/2005/08/23/update-to-iis-apache">Update to IIS & Apache</a></h2>
<p class="auth">Posted by kev
<span class="typo_date" title="Tue, 23 Aug 2005 21:10:32 GMT">Tue, 23 Aug 2005 21:10:32 GMT</span></p>
<p>So, I had a typo in my regex. Also, apparently it helps if you run:</p>

<pre>
<code>
cscript proxycfg.vbs -r
</code>
</pre>

<p>In the installation folder. All is well.</p>

  
  <p class="meta">Posted in <a href="/articles/category/web-dev" rel="tag">Web Dev</a>, <a href="/articles/category/rails" rel="tag">Rails</a>, <a href="/articles/category/hacks" rel="tag">Hacks</a>&nbsp;<strong>|</strong>&nbsp;<a href="/articles/2005/08/23/update-to-iis-apache#comments">no comments</a>&nbsp;<strong>|</strong>&nbsp;<a href="/articles/2005/08/23/update-to-iis-apache#trackbacks">no trackbacks</a></p>
  </div>
 <div class="post">
  <h2><a href="/articles/2005/08/23/apache-and-iis-the-marriage-forged-in-the-flames-of-hades">Apache and IIS, the marriage forged in the flames of Hades</a></h2>
<p class="auth">Posted by kev
<span class="typo_date" title="Tue, 23 Aug 2005 04:13:00 GMT">Tue, 23 Aug 2005 04:13:00 GMT</span></p>
<p>For my latest work, I was required to deploy my rails application on a server running Windows 2003 and MS SQL Server. <em>Normally</em>, I would install Apache on the machine and be happily on my way. Unfortunately, the same machine is host to several websites running on the bastion of Microsoft Webserving, IIS 6.0. This article chronicles my trek through the wilderness to (hopefully) see this project to deployment.</p>

  <a href="/articles/2005/08/23/apache-and-iis-the-marriage-forged-in-the-flames-of-hades">Read more...</a>
  <p class="meta">Posted in <a href="/articles/category/hacks" rel="tag">Hacks</a>, <a href="/articles/category/rails" rel="tag">Rails</a>, <a href="/articles/category/web-dev" rel="tag">Web Dev</a>&nbsp;<strong>|</strong>&nbsp;<a href="/articles/2005/08/23/apache-and-iis-the-marriage-forged-in-the-flames-of-hades#comments">3 comments</a>&nbsp;<strong>|</strong>&nbsp;<a href="/articles/2005/08/23/apache-and-iis-the-marriage-forged-in-the-flames-of-hades#trackbacks">no trackbacks</a></p>
  </div>
 <div class="post">
  <h2><a href="/articles/2005/08/19/understanding-ruby-symbols">Understanding Ruby Symbols</a></h2>
<p class="auth">Posted by kev
<span class="typo_date" title="Fri, 19 Aug 2005 22:11:00 GMT">Fri, 19 Aug 2005 22:11:00 GMT</span></p>
<p>Update 8/25: This post has been translated into <a href="http://wiki.rubykr.org/show/KoreanDoc_UnderstandingRubySymbols">korean</a>.</p>

<p>Update 12/12: I found a <a href="http://www.4coders.com/index.php?modulo=contenido&amp;op=detalle&amp;tipo=a&amp;id=37">spanish translation</a> today.</p>

<p>Symbols in ruby are an enigma. We use them, but many don&#8217;t really understand them.</p>

<h2>So really, what is a symbol?</h2>

<p>Simply, a symbol is something that you use to represent names and strings. What this boils down to is a way to efficiently have descriptive names while saving the space one would use to generate a string for each naming instance.</p>

<h2>The Case of Dr. Jones</h2>

<p>Dr. Jones is a Psycologist. He regularly uses word association tests to diagnose patients and uses ruby to keep track of everything. His first patient, Why, steps up to the plate:</p>

<pre>
Dr J: Red
Why : Ruby
Dr J: Transportation
Why : Rails
Dr J: Chunky
Why : Bacon
</pre>

<p>Dr Jones creates a hash to store his data:</p>

<p><code>
    why = {"red" => "ruby", "transportation" => "rails", "chunky" => "bacon"}
</code></p>

<p>Dr. Jones&#8217;s second patient, Bob, turns in his survey results:</p>

<p>
<code>
    bob = {"red" => "paint", "transportation" => "car", "chunky" => "fat"}
</code>
</p>

<h3>The Problem</h3>

<p>After running several hundred word association tests, Dr. Jones begins to realize that he&#8217;s running out of memory! On a hunch, Jones runs tests in irb:</p>

<pre>
<code>
> patient1 = { "ruby" => "red" }
> patient2 = { "ruby" => "programming" }
> patient1.each_key {|key| puts key.object_id.to_s}
211006
> patient2.each_key {|key| puts key.object_id.to_s}
203536
</code>
</pre>

<p>Well look at that, each time he creates a hash to store his information, ruby creates a new string object in a different memory location for each key. Fortunately, there&#8217;s an alternative.</p>

<h3>Symbols to the Rescue</h3>

<p>Unlike strings, symbols of the same name are initialized and exist in memory only once during a session of ruby. Symbols are most obviously useful when you&#8217;re going to be reusing strings representing something else. Reproducing Dr. Jones&#8217;s tests, we are able to see this directly:</p>

<pre>
<code>
> patient1 = { :ruby => "red" }
> patient2 = { :ruby => "programming" }
> patient1.each_key {|key| puts key.object_id.to_s}
3918094
> patient2.each_key {|key| puts key.object_id.to_s}
3918094
</code>
</pre>

<p>Using symbols, we&#8217;ve used a single memory address to represent the word ruby in our word association tests. Over time, this can save alot of space.</p>

<h2>So I&#8217;m no shrink, when else will I want to use symbols?</h2>

<p>Symbols are useful whenever you&#8217;re going to be reusing a word over and over to represent something else, whether its a key in a hash or the method you&#8217;re using in an http query. An example from the latest and greatest web framework <a href=""http://www.rubyonrails.com"">Ruby on Rails</a> is its use of symbols in routes and links. Rails defines actions within controllers to do things within the framework before rendering a web page, so a link in Rails may look like:</p>

<pre>
<code>
    link_to("View Article", :controller => "articles", :action => "show", :id => 1)
</code>
</pre>

<p>When an application may have hundreds of links, or atleast hundreds of references to different actions and controllers, it is significantly more efficient to use symbols than strings.</p>

<p>Finally, its important to note that the usefulness of symbols is not restricted to keys in hashes. For example, if one was writing a http client or server they might use get and post several times within their application, and it might be appropriate to use:</p>

<pre>
<code>
    do_this if query == :get<br />
    ...
    send_message_to_server(:post,filename)
</code>
</pre>

<p>Any time a string could be used over and over, a symbol may be a good candidate for replacement.</p>

<h3>Updates</h3>

<p>In #ruby-lang on Freenode (irc.freenode.net) Aria and nome presented helpful additions to this article.</p>

<pre>
11:58 < Aria> Also, the entirely realistic reasoning for using symbols: If you 
              are going to refer to a method name, use a symbol. Because /by 
              defining the method/, the symbol exists anyway.

12:03 < nome> kevinclark: the intention of symbols are for identification of 
              (user-level, primarily) constructs: a slot in a hash, a method, 
              an option, etc.
</pre>

<p>Also note Aria&#8217;s response to Geoff&#8217;s question in the comments:</p>

<pre>
Geoff -
I'd be interested in knowing exactly how
much memory 1,000 strings ("red") uses over :red.

And remember, outside of Rails, "red" != :red

Aria - 
How much memory? 20 bytes per object, plus storage for the data, 3 bytes,
plus the length storage (4 byes)—so 27,000 bytes or so.

Versus one copy of the entry in the symbol table, which is likely to be just 
a few bytes (I could check, but I know for certain it’s in the tens, not tens 
of thousands of bytes range.)
</pre>

<p>Jim Weirich notes:</p>

<pre>
I (generally) use the following rule on string vs symbols:

(1) If the contents (i.e. the sequence of characters) of the object is important, use a String.

(2) If the identity of the object is important, use a Symbol.
</pre>

<p>Reports of errors and omissions are welcome and should be sent to kevin [dot] clark [at] gmail [dot] com </p>

  
  <p class="meta">Posted in <a href="/articles/category/coding" rel="tag">Coding</a>, <a href="/articles/category/ruby" rel="tag">Ruby</a>&nbsp;<strong>|</strong>&nbsp;<a href="/articles/2005/08/19/understanding-ruby-symbols#comments">33 comments</a>&nbsp;<strong>|</strong>&nbsp;<a href="/articles/2005/08/19/understanding-ruby-symbols#trackbacks">5 trackbacks</a></p>
  </div>
 <div class="post">
  <h2><a href="/articles/2005/08/17/a-quick-slip-of-the-keyboard">A Quick Slip of the Keyboard..</a></h2>
<p class="auth">Posted by kev
<span class="typo_date" title="Wed, 17 Aug 2005 21:54:47 GMT">Wed, 17 Aug 2005 21:54:47 GMT</span></p>
<p>Has anyone else accidentally typed &#8216;rm .&#8217; instead of &#8217;<a href="http://macromates.com/">tm</a> .&#8217;?</p>

  
  <p class="meta">Posted in <a href="/articles/category/musings" rel="tag">Musings</a>&nbsp;<strong>|</strong>&nbsp;<a href="/articles/2005/08/17/a-quick-slip-of-the-keyboard#comments">1 comment</a>&nbsp;<strong>|</strong>&nbsp;<a href="/articles/2005/08/17/a-quick-slip-of-the-keyboard#trackbacks">2 trackbacks</a></p>
  </div>


  <p id="pagination">Older posts: <a href="/articles/page/1">1</a> ...  <a href="/articles/page/14">14</a> <a href="/articles/page/15">15</a> 16 <a href="/articles/page/17">17</a> </p>

          <script type="text/javascript">
//<![CDATA[
show_dates_as_local_time()
//]]>
</script>
        </div>
        
        <div id="sidebar">
          
            <div id="search-results"></div>
            
              
      
<div class="sidebar-node">
  <h3>About</h3>
My name is Kevin Clark. I'm a <a href="http://ruby-lang.org">Ruby</a> hacker making awesome things at <a href="http://powerset.com">Powerset</a> in San Francisco.

</div>


      
<div class="sidebar-node">
  <h3>Understanding</h3>
<a href="http://glu.ttono.us/articles/2005/08/19/understanding-ruby-symbols">Ruby Symbols</a><br />
<a href="http://glu.ttono.us/articles/2005/09/05/environments-in-rails-0-13-1">Environments in Rails 0.13.1</a><br />
<a href="http://glu.ttono.us/articles/2005/10/27/the-joy-of-migrations">The Joy of Migrations</a><br />
<a href="http://glu.ttono.us/articles/2005/10/30/why-and-how-ruby-and-rails-unit-testing">Ruby (and Rails) Unit Testing</a><br />
<a href="http://glu.ttono.us/articles/2006/02/06/rails-best-practices-tips-and-tricks">Rails Best Practices, Tips and Tricks</a><br />
<a href="http://glu.ttono.us/articles/2006/03/21/rails-for-designers">Rails for Designers</a><br />
<a href="http://glu.ttono.us/articles/2006/05/22/guide-environments-in-rails-1-1">Environments in Rails 1.1</a><br />
<a href="http://glu.ttono.us/articles/2006/05/29/guide-test-driven-rjs-with-arts">Test Driven RJS with ARTS</a>

</div>


      
<div class="sidebar-node">
  <h3>Cheat Sheets</h3>
<a href="http://glu.ttono.us/articles/2006/05/22/configuring-rails-environments-the-cheat-sheet">Configuring Rails Environments</a>

</div>


      
<div class="sidebar-node">
  <h3>Categories</h3>
<ul id="categories">
  
  <li><a href="/articles/category/web-dev">Web Dev</a> <em>(14)</em></li>
  
  
  <li><a href="/articles/category/coding">Coding</a> <em>(37)</em></li>
  
  
  <li><a href="/articles/category/rails">Rails</a> <em>(74)</em></li>
  
  
  <li><a href="/articles/category/op-ed">Op-Ed</a> <em>(7)</em></li>
  
  
  <li><a href="/articles/category/reviews">Reviews</a> <em>(3)</em></li>
  
  
  <li><a href="/articles/category/musings">Musings</a> <em>(18)</em></li>
  
  
  <li><a href="/articles/category/ruby">Ruby</a> <em>(69)</em></li>
  
  
  <li><a href="/articles/category/hacks">Hacks</a> <em>(22)</em></li>
  
  
  <li><a href="/articles/category/sdrug">sd.rb</a> <em>(10)</em></li>
  
  
  <li><a href="/articles/category/testing">testing</a> <em>(17)</em></li>
  
  
  <li><a href="/articles/category/documentation">documentation</a> <em>(6)</em></li>
  
  
  <li><a href="/articles/category/sightings">sightings</a> <em>(19)</em></li>
  
  
  <li><a href="/articles/category/guides">guides</a> <em>(8)</em></li>
  
  
  <li><a href="/articles/category/cheat-sheets">cheat sheets</a> <em>(1)</em></li>
  
  
  <li><a href="/articles/category/business">business</a> <em>(1)</em></li>
  
  
  <li><a href="/articles/category/summer-of-code">summer of code</a> <em>(5)</em></li>
  
</ul>


</div>


      
<div class="sidebar-node">
  <h3></h3>
<a href="http://feeds.feedburner.com/Gluttonous"><img src="http://feeds.feedburner.com/~fc/Gluttonous?bg=5189b5&amp;fg=333333&amp;anim=0" height="26" width="88" style="border:0" alt="" /></a>

</div>


      
<div class="sidebar-node">
  <h3></h3>
<!-- Creative Commons License -->
<a rel="license" href="http://creativecommons.org/licenses/by-nc-sa/2.5/"><img alt="Creative Commons License" border="0" src="http://creativecommons.org/images/public/somerights20.gif" /></a><br />
<!-- /Creative Commons License -->


<!--

<rdf:RDF xmlns="http://web.resource.org/cc/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
<Work rdf:about="">
   <dc:type rdf:resource="http://purl.org/dc/dcmitype/Text" />
   <license rdf:resource="http://creativecommons.org/licenses/by-nc-sa/2.5/" />
</Work>

<License rdf:about="http://creativecommons.org/licenses/by-nc-sa/2.5/">
   <permits rdf:resource="http://web.resource.org/cc/Reproduction" />
   <permits rdf:resource="http://web.resource.org/cc/Distribution" />
   <requires rdf:resource="http://web.resource.org/cc/Notice" />
   <requires rdf:resource="http://web.resource.org/cc/Attribution" />
   <prohibits rdf:resource="http://web.resource.org/cc/CommercialUse" />
   <permits rdf:resource="http://web.resource.org/cc/DerivativeWorks" />
   <requires rdf:resource="http://web.resource.org/cc/ShareAlike" />
</License>

</rdf:RDF>

-->


</div>


  


            
            
            <a href="http://typo.leetsoft.com/" class="powered"><img alt="Powered" src="/images/powered.gif?1155250442" /></a>
            </div>

            <br clear="all" />
      </div>
      <div id="footer">
        <ul>
          <li><a href="http://validator.w3.org/check?uri=referer">Valid XHTML 1.0</a></li>
          <li><a href="http://jigsaw.w3.org/css-validator/validator?uri=http://glu.ttono.us/">Valid CSS</a></li>
        </ul>
      </div>
  </div>
<script type="text/javascript" src="http://tracker.measuremap.com/a/562"></script>
<script src="http://www.google-analytics.com/urchin.js" type="text/javascript">
</script>
<script type="text/javascript">
_uacct = "UA-89073-1";
urchinTracker();
</script>
</body>
</html>

