<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <title>Gluttonous : Glen Vanderburg - Testing Migrations</title>
  <meta http-equiv="content-type" content="text/html; charset=utf-8" />
  <meta content="32.867098, -117.211597" name="ICBM" />
  <link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://glu.ttono.us/xml/rsd" />
  <link rel="alternate" type="application/rss+xml" title="RSS" href="http://feeds.feedburner.com/Gluttonous" />
  <link rel="alternate" type="application/atom+xml" title="Atom" href="http://feeds.feedburner.com/Gluttonous" />
  <script src="/javascripts/cookies.js?1155250443" type="text/javascript"></script>
  <script src="/javascripts/prototype.js?1155250443" type="text/javascript"></script>
  <script src="/javascripts/effects.js?1155250443" type="text/javascript"></script>
  <script src="/javascripts/typo.js?1155250443" type="text/javascript"></script>
  
  <script type="text/javascript"></script>
  <link href="/stylesheets/theme/azure.css?1215021856" media="all" rel="Stylesheet" type="text/css" />
  <link href="/stylesheets/user-styles.css?1155250443" media="all" rel="Stylesheet" type="text/css" />
  <link href="/stylesheets/theme/print.css?1215021856" media="print" rel="Stylesheet" type="text/css" />
  <link href='http://www.myopenid.com/server' rel='openid.server' />
  <link href='http://kevinclark.myopenid.com/' rel='openid.delegate' />
</head>

<body>
  <div id="container" class="clearfix">
      <div id="header">
        <div id="logo">
          <h1 id="sitename"><a href="/">Gluttonous</a></h1>
          <h2 id="subtitle"></h2>
        </div>
      </div>
      
      <div id="search"> <form action="/articles/search" id="sform" method="get">
 <label for="q">Live Search:</label><input type="text" id="q" name="q" value="" size="15" />
<img alt="Spinner-blue" id="search_spinner" src="/images/spinner-blue.gif?1155250442" style="display:none;" />
</form>
<script type="text/javascript">
//<![CDATA[
new Form.Element.Observer('q', 1, function(element, value) {new Ajax.Updater('search-results', '/live/search', {asynchronous:true, evalScripts:true, onComplete:function(request){Element.hide('search_spinner')}, onLoading:function(request){Element.show('search_spinner')}, parameters:'q=' + escape($F('q'))})})
//]]>
</script></div>
      

      <div id="content" class="clearfix">
        <div id="main">
          <!--
<rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
       xmlns:trackback="http://madskills.com/public/xml/rss/module/trackback/"
       xmlns:dc="http://purl.org/dc/elements/1.1/">
<rdf:Description
    rdf:about=""
    dc:title="Glen Vanderburg - Testing Migrations"
    dc:identifier="http://glu.ttono.us/articles/2006/06/24/glen-vanderburg-testing-migrations"
    dc:description="Glen Vanderburg glv@vanderburg.org About Me Independent consultant Ruby, Java, Agile, TDD, the usual suspects Frequent conference speaker &amp;#8220;Generalizing specialist&amp;#8221; Addicted"
    dc:creator="kevin"
    dc:date="2006-08-10T19:03:14-04:00" />
</rdf:RDF>
-->

<div class="post" onmouseover="if (getCookie('is_admin') == 'yes') { Element.show('admin_article'); }"  onmouseout="Element.hide('admin_article');" >
  <a href="/admin/content/edit/939" class="admintools" id="admin_article" style="display: none">edit</a>
  <h2>Glen Vanderburg - Testing Migrations</h2>
  <p class="auth">Posted by kev
  <span class="typo_date" title="Sat, 24 Jun 2006 20:00:00 GMT">Sat, 24 Jun 2006 20:00:00 GMT</span></p>
  <div id="adsense">
  <script type="text/javascript"><!--
google_ad_client = "pub-1730274975094059";
google_ad_width = 468;
google_ad_height = 60;
google_ad_format = "468x60_as";
google_ad_type = "text";
google_ad_channel ="";
google_color_border = "FFFFFF";
google_color_bg = "FFFFFF";
google_color_link = "5189B5";
google_color_url = "000000";
google_color_text = "000000";
//--></script>
<script type="text/javascript"
  src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
  </div>
  <p>Glen Vanderburg
glv@vanderburg.org</p>

<p>About Me</p>

<ul>
<li>Independent consultant
<ul>
<li>Ruby, Java, Agile, TDD, the usual suspects</li>
<li>Frequent conference speaker</li>
</ul></li>
<li>&#8220;Generalizing specialist&#8221;
<ul>
<li>Addicted to learning</li>
</ul></li>
<li>Rubyist since 2000</li>
<li>Rails since mid-2005</li>
<li>Previous experience: Java, C++, Perl, C, Tcl, REXX, Awk, sh, Pascal &#8230;</li>
</ul>

<p>About this Talk</p>

<ul>
<li>Work in progress.</li>
<li>Thinking about testing Rails migrations.
<ul>
<li>how</li>
<li>why</li>
<li>whether</li>
<li>when</li>
<li>how much</li>
</ul></li>
<li>Preliminary code for testing migrations.</li>
<li>A challenge to take this farther.</li>
</ul>

<p><strong>Migrations Rock!</strong></p>

<p>The Problem</p>

<ul>
<li>Database schemas <em>always</em> need to evlove.</li>
<li>Most frameworks/platforms/tools ignore this fact.</li>
<li>Left to themselves, teams do crazy things&#8230;</li>
</ul>

<p>A Common Result</p>

<ul>
<li><em>ad hoc</em> changes</li>
<li>Made manually in development or staging</li>
<li>Must be rediscovered (somehow) and recreated in test, and then productions</li>
</ul>

<p>Another Common Result</p>

<ul>
<li>Resistance to changing the db</li>
<li>Application much change instead
<ul>
<li>in unpleasent ways</li>
</ul></li>
<li>Meaning of schema is perverted</li>
<li>Overloaded fields, severer denormalization, etc</li>
<li>Britleness!</li>
</ul>

<p>Still Another Common Result</p>

<ul>
<li>Versioned SQL script for schema
<ul>
<li>and one for basic test data</li>
</ul></li>
<li>Not too bad .. schema all in one place</li>
<li>Version control systems help manage change</li>
<li>Development systems can often rebuild database from scratch</li>
<li>Time to deploy? look at differences, manually modify databse.</li>
</ul>

<p>The Best of the Rest</p>

<ul>
<li>Hand-written SQL migration scripts</li>
<li>Use database to dump schema for single-file view</li>
<li>Easy to move changes to test, production servers</li>
<li>Not too bad, except rollback is rarely considered&#8230;
<ul>
<li>and the SQL is usually pretty ugly.</li>
</ul></li>
</ul>

<p>Rails Does it Right</p>

<ul>
<li>Migrations deal with all of those problems.</li>
<li>Nice (mostly) database independent code</li>
<li>Incremental migrations</li>
<li><code>up</code> and <code>down</code> method provide for rollback</li>
</ul>

<p><em>* AND YET *</em></p>

<p>Migrations suck (at least a little)</p>

<ul>
<li>No testing support</li>
<li>It turns out to be hard to <em>build</em> testing support
<ul>
<li>and only partly for technical reasoning</li>
</ul></li>
</ul>

<p>Why?</p>

<ul>
<li>Migrations and version control are an odd match</li>
<li>Active Record&#8217;s model abstraction leaks like a sieve</li>
<li>Old migrations don&#8217;t need ongoing testing</li>
<li>Sometimes testing migrations is overkill</li>
</ul>

<p>Your Application and Version Control</p>

<ul>
<li>Each version represents a point in time
<ul>
<li>start from scratch, check out, run your app</li>
<li>that&#8217;s the whole point!</li>
</ul></li>
<li>Old versions are hidden
<ul>
<li>You can get to them, but that&#8217;s time travel</li>
</ul></li>
</ul>

<p>Version Control Wormhole</p>

<ul>
<li>Migrations are very different.</li>
<li>The whole history of your schema in one directory
<ul>
<li>In one <em>version</em> of your directory.</li>
</ul></li>
<li>Move the database back in time while the app stays put.</li>
<li>Causes some obvious problems.
<ul>
<li>&#8220;<strong>Never</strong> change a migrations after you check it in&#8221;</li>
</ul></li>
</ul>

<p>Models or Tables?</p>

<ul>
<li>Active Record lets the tables show through</li>
<li><code>has_and_belongs_to_many</code> hides them (especially the join table)</li>
<li>Parameters to <code>find</code> (and other methods) expose them.</li>
<li>Unit tests are especially leaky places.</li>
</ul>

<p>Fixtures: Models or Tables?</p>

<ul>
<li>All information about overridden class/table mapping is in the class.</li>
<li>Then in unit test, fixtures are all about tables, so things fail.</li>
<li>How does it know about class Person?
<ul>
<li>See Rails ticket #1911 (flexible fixtures)</li>
</ul></li>
</ul>

<p>But Migrations are ALL Tables!</p>

<ul>
<li>Yes they are . (Until you start thinking about testing them)</li>
<li>In migrations: <code>add_column :events, :user_id, :integer</code></li>
<li>In test: <code>assert_has_column :events, :user_id, :integer</code></li>
<li>Does that really help?</li>
<li>Wouldn&#8217;t this be better?
<ul>
<li><code>assert_supports_has_many :users, :events</code></li>
</ul></li>
</ul>

<p>Old Migrations Shouldn&#8217;t Break</p>

<ul>
<li>Remember the version control wormhole?</li>
<li>Old migrations are <em>history</em></li>
<li>If you&#8217;ve already moved beyond them (especially in production) they should never change, and should never break</li>
<li>If testing migrations is slow, don&#8217;t keep testing old migrations</li>
</ul>

<p>Sometimes Migrations Don&#8217;t Need Testing</p>

<ul>
<li>Just a few lines</li>
<li>Run promptly in development</li>
<li>Test-through-use with new application code</li>
</ul>

<p>What&#8217;s the Point?</p>

<ul>
<li>Often, the trouble of automated testing is of marginal benefit for migrations</li>
<li>There are two big exceptions
<ul>
<li>Data conversion</li>
<li>The <code>down</code> method</li>
</ul></li>
<li>Those two things usually won&#8217;t be fully exercised until you really need them &#8211; in production</li>
</ul>

<p>Migration Testing Setup</p>

<ul>
<li>see slides (but I&#8217;ll summarize as I can)</li>
<li>Move from Category habtm Merchants to Category has many Merchants through Order</li>
<li>Lots of code examples, I&#8217;ll try to link the slides</li>
<li>Mix in <code>MigrationTesting</code> module (unreleased)</li>
<li><code>def migration_number; 2; end</code></li>
<li><code>def setup; db_setup; end</code></li>
</ul>

<p>Data Conversion</p>

<ul>
<li>Can sometimes be done with model instances.</li>
<li>But not in general, because you&#8217;re working across two different version of the tables underneath the models</li>
</ul>

<p>Why Test Data Conversion?</p>

<ul>
<li>Real-world data is strange.</li>
<li>Your development data probably isn&#8217;t the same.
<ul>
<li>(or at least, a much smaller sample size)</li>
</ul></li>
<li>You want to test <em>before</em> your migration chokes on the production data.
<ul>
<li>Unexpected nulls can wreak havoc</li>
</ul></li>
<li>Sample code&#8230;</li>
</ul>

<p>Testing Up/Testing Down slides are all code examples</p>

<p>Why Test Reverse Migrations?</p>

<ul>
<li><code>rake rollback</code> really *is* the best thing since sliced bread.
<ul>
<li><code>rake deploy</code> is merely the best thing since SSH.</li>
</ul></li>
<li>But if your new release includes a migration, you&#8217;re counting on the reverse migrations</li>
<li>Have you ever run it?</li>
<li>Did you even <em>write it</em>?</li>
</ul>

<p>Making it Easy to do the Right Thing</p>

<ul>
<li>Testing reverse migrations should be trivial. (Free even)</li>
<li>The failing test provides incentive to write the reverse migration in the first place.
<ul>
<li>Not to mention getting it right</li>
</ul></li>
</ul>

<p>Testing Down</p>

<ul>
<li><code>test_down_schema</code> gets mixed into your test case and runs automatically</li>
<li>Detects pure schema errors for (almost) free</li>
<li>Test downward data conversion using the same techniques</li>
</ul>

<p>What, Me Worry?</p>

<ul>
<li>Maybe migratiosn don&#8217;t need to be as thoroughly tested as other code</li>
<li>But some parts do
<ul>
<li>Data conversion</li>
<li>Rollback code</li>
</ul></li>
<li>Testing rollback code, in particular should be trival
<ul>
<li>For one thing, it prompts us to write tests</li>
</ul></li>
</ul>

<p>Further Work</p>

<ul>
<li>Smarter &#8220;down&#8221; testing
<ul>
<li>Detecting errors is easy</li>
<li>Reporting them is clumsy</li>
</ul></li>
<li>Model oriented assertions
<ul>
<li>Associations, acts_as, aggregation
<ul>
<li>Should exploit ActiveRecord reflection facilities</li>
</ul></li>
</ul></li>
<li>Better infrastructure
<ul>
<li>Automatically test new migrations, skip old ones</li>
<li>Fixture creation and management for migration testing</li>
</ul></li>
</ul>
</div>
<p class="meta">
  Posted in <a href="/articles/category/rails" rel="tag">Rails</a>, <a href="/articles/category/testing" rel="tag">testing</a>
</p>



<p class="postmetadata alt">
  <small>
  <a href="http://glu.ttono.us/xml/rss20/article/939/feed.xml" title="RSS Feed">RSS feed for this post</a>
  </small>
</p>

  <p>Comments are disabled</p>

<script type="text/javascript"><!--
if(!mmposts){var mmposts=[];}mmposts[mmposts.length]="939";
//--></script>
<!-- mmp mmid:939 mmdate:2006-06-24 16:00:00 mmurl:/articles/2006/06/24/glen-vanderburg-testing-migrations mmtitle:Glen Vanderburg - Testing Migrations -->
<script src="http://feeds.feedburner.com/~s/Gluttonous?i=http://glu.ttono.us/articles/2006/06/24/glen-vanderburg-testing-migrations" type="text/javascript" charset="utf-8"></script>

          <script type="text/javascript">
//<![CDATA[
show_dates_as_local_time()
//]]>
</script>
        </div>
        
        <div id="sidebar">
          
            <div id="search-results"></div>
            
              
      
<div class="sidebar-node">
  <h3>About</h3>
My name is Kevin Clark. I'm a <a href="http://ruby-lang.org">Ruby</a> hacker making awesome things at <a href="http://powerset.com">Powerset</a> in San Francisco.

</div>


      
<div class="sidebar-node">
  <h3>Understanding</h3>
<a href="http://glu.ttono.us/articles/2005/08/19/understanding-ruby-symbols">Ruby Symbols</a><br />
<a href="http://glu.ttono.us/articles/2005/09/05/environments-in-rails-0-13-1">Environments in Rails 0.13.1</a><br />
<a href="http://glu.ttono.us/articles/2005/10/27/the-joy-of-migrations">The Joy of Migrations</a><br />
<a href="http://glu.ttono.us/articles/2005/10/30/why-and-how-ruby-and-rails-unit-testing">Ruby (and Rails) Unit Testing</a><br />
<a href="http://glu.ttono.us/articles/2006/02/06/rails-best-practices-tips-and-tricks">Rails Best Practices, Tips and Tricks</a><br />
<a href="http://glu.ttono.us/articles/2006/03/21/rails-for-designers">Rails for Designers</a><br />
<a href="http://glu.ttono.us/articles/2006/05/22/guide-environments-in-rails-1-1">Environments in Rails 1.1</a><br />
<a href="http://glu.ttono.us/articles/2006/05/29/guide-test-driven-rjs-with-arts">Test Driven RJS with ARTS</a>

</div>


      
<div class="sidebar-node">
  <h3>Cheat Sheets</h3>
<a href="http://glu.ttono.us/articles/2006/05/22/configuring-rails-environments-the-cheat-sheet">Configuring Rails Environments</a>

</div>


      
<div class="sidebar-node">
  <h3>Categories</h3>
<ul id="categories">
  
  <li><a href="/articles/category/web-dev">Web Dev</a> <em>(14)</em></li>
  
  
  <li><a href="/articles/category/coding">Coding</a> <em>(37)</em></li>
  
  
  <li><a href="/articles/category/rails">Rails</a> <em>(74)</em></li>
  
  
  <li><a href="/articles/category/op-ed">Op-Ed</a> <em>(7)</em></li>
  
  
  <li><a href="/articles/category/reviews">Reviews</a> <em>(3)</em></li>
  
  
  <li><a href="/articles/category/musings">Musings</a> <em>(18)</em></li>
  
  
  <li><a href="/articles/category/ruby">Ruby</a> <em>(69)</em></li>
  
  
  <li><a href="/articles/category/hacks">Hacks</a> <em>(22)</em></li>
  
  
  <li><a href="/articles/category/sdrug">sd.rb</a> <em>(10)</em></li>
  
  
  <li><a href="/articles/category/testing">testing</a> <em>(17)</em></li>
  
  
  <li><a href="/articles/category/documentation">documentation</a> <em>(6)</em></li>
  
  
  <li><a href="/articles/category/sightings">sightings</a> <em>(19)</em></li>
  
  
  <li><a href="/articles/category/guides">guides</a> <em>(8)</em></li>
  
  
  <li><a href="/articles/category/cheat-sheets">cheat sheets</a> <em>(1)</em></li>
  
  
  <li><a href="/articles/category/business">business</a> <em>(1)</em></li>
  
  
  <li><a href="/articles/category/summer-of-code">summer of code</a> <em>(5)</em></li>
  
</ul>


</div>


      
<div class="sidebar-node">
  <h3></h3>
<a href="http://feeds.feedburner.com/Gluttonous"><img src="http://feeds.feedburner.com/~fc/Gluttonous?bg=5189b5&amp;fg=333333&amp;anim=0" height="26" width="88" style="border:0" alt="" /></a>

</div>


      
<div class="sidebar-node">
  <h3></h3>
<!-- Creative Commons License -->
<a rel="license" href="http://creativecommons.org/licenses/by-nc-sa/2.5/"><img alt="Creative Commons License" border="0" src="http://creativecommons.org/images/public/somerights20.gif" /></a><br />
<!-- /Creative Commons License -->


<!--

<rdf:RDF xmlns="http://web.resource.org/cc/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
<Work rdf:about="">
   <dc:type rdf:resource="http://purl.org/dc/dcmitype/Text" />
   <license rdf:resource="http://creativecommons.org/licenses/by-nc-sa/2.5/" />
</Work>

<License rdf:about="http://creativecommons.org/licenses/by-nc-sa/2.5/">
   <permits rdf:resource="http://web.resource.org/cc/Reproduction" />
   <permits rdf:resource="http://web.resource.org/cc/Distribution" />
   <requires rdf:resource="http://web.resource.org/cc/Notice" />
   <requires rdf:resource="http://web.resource.org/cc/Attribution" />
   <prohibits rdf:resource="http://web.resource.org/cc/CommercialUse" />
   <permits rdf:resource="http://web.resource.org/cc/DerivativeWorks" />
   <requires rdf:resource="http://web.resource.org/cc/ShareAlike" />
</License>

</rdf:RDF>

-->


</div>


  


            
            
            <a href="http://typo.leetsoft.com/" class="powered"><img alt="Powered" src="/images/powered.gif?1155250442" /></a>
            </div>

            <br clear="all" />
      </div>
      <div id="footer">
        <ul>
          <li><a href="http://validator.w3.org/check?uri=referer">Valid XHTML 1.0</a></li>
          <li><a href="http://jigsaw.w3.org/css-validator/validator?uri=http://glu.ttono.us/">Valid CSS</a></li>
        </ul>
      </div>
  </div>
<script type="text/javascript" src="http://tracker.measuremap.com/a/562"></script>
<script src="http://www.google-analytics.com/urchin.js" type="text/javascript">
</script>
<script type="text/javascript">
_uacct = "UA-89073-1";
urchinTracker();
</script>
</body>
</html>

