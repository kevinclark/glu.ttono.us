<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <title>Gluttonous : Top-to-bottom Testing in Ruby</title>
  <meta http-equiv="content-type" content="text/html; charset=utf-8" />
  <meta content="32.867098, -117.211597" name="ICBM" />
  <link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://glu.ttono.us/xml/rsd" />
  <link rel="alternate" type="application/rss+xml" title="RSS" href="http://feeds.feedburner.com/Gluttonous" />
  <link rel="alternate" type="application/atom+xml" title="Atom" href="http://feeds.feedburner.com/Gluttonous" />
  <script src="/javascripts/cookies.js?1155250443" type="text/javascript"></script>
  <script src="/javascripts/prototype.js?1155250443" type="text/javascript"></script>
  <script src="/javascripts/effects.js?1155250443" type="text/javascript"></script>
  <script src="/javascripts/typo.js?1155250443" type="text/javascript"></script>
  
  <script type="text/javascript"></script>
  <link href="/stylesheets/theme/azure.css?1215021856" media="all" rel="Stylesheet" type="text/css" />
  <link href="/stylesheets/user-styles.css?1155250443" media="all" rel="Stylesheet" type="text/css" />
  <link href="/stylesheets/theme/print.css?1215021856" media="print" rel="Stylesheet" type="text/css" />
  <link href='http://www.myopenid.com/server' rel='openid.server' />
  <link href='http://kevinclark.myopenid.com/' rel='openid.delegate' />
</head>

<body>
  <div id="container" class="clearfix">
      <div id="header">
        <div id="logo">
          <h1 id="sitename"><a href="/">Gluttonous</a></h1>
          <h2 id="subtitle"></h2>
        </div>
      </div>
      
      <div id="search"> <form action="/articles/search" id="sform" method="get">
 <label for="q">Live Search:</label><input type="text" id="q" name="q" value="" size="15" />
<img alt="Spinner-blue" id="search_spinner" src="/images/spinner-blue.gif?1155250442" style="display:none;" />
</form>
<script type="text/javascript">
//<![CDATA[
new Form.Element.Observer('q', 1, function(element, value) {new Ajax.Updater('search-results', '/live/search', {asynchronous:true, evalScripts:true, onComplete:function(request){Element.hide('search_spinner')}, onLoading:function(request){Element.show('search_spinner')}, parameters:'q=' + escape($F('q'))})})
//]]>
</script></div>
      

      <div id="content" class="clearfix">
        <div id="main">
          <!--
<rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
       xmlns:trackback="http://madskills.com/public/xml/rss/module/trackback/"
       xmlns:dc="http://purl.org/dc/elements/1.1/">
<rdf:Description
    rdf:about=""
    trackback:ping="http://glu.ttono.us/articles/trackback/13"
    dc:title="Top-to-bottom Testing in Ruby"
    dc:identifier="http://glu.ttono.us/articles/2005/10/14/top-to-bottom-testing-in-ruby"
    dc:description="Presented by Francis Hwang http://fhwang.net/top_to_bottom/ First Toy Example fibonacci.rb Testing is harder in the real world&lt;/"
    dc:creator="kevin"
    dc:date="2006-08-10T19:03:12-04:00" />
</rdf:RDF>
-->

<div class="post" onmouseover="if (getCookie('is_admin') == 'yes') { Element.show('admin_article'); }"  onmouseout="Element.hide('admin_article');" >
  <a href="/admin/content/edit/13" class="admintools" id="admin_article" style="display: none">edit</a>
  <h2>Top-to-bottom Testing in Ruby</h2>
  <p class="auth">Posted by kev
  <span class="typo_date" title="Fri, 14 Oct 2005 20:56:00 GMT">Fri, 14 Oct 2005 20:56:00 GMT</span></p>
  <div id="adsense">
  <script type="text/javascript"><!--
google_ad_client = "pub-1730274975094059";
google_ad_width = 468;
google_ad_height = 60;
google_ad_format = "468x60_as";
google_ad_type = "text";
google_ad_channel ="";
google_color_border = "FFFFFF";
google_color_bg = "FFFFFF";
google_color_link = "5189B5";
google_color_url = "000000";
google_color_text = "000000";
//--></script>
<script type="text/javascript"
  src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
  </div>
  <p>Presented by Francis Hwang
<a href="http://fhwang.net/top_to_bottom/">http://fhwang.net/top_to_bottom/</a></p>

<p>First Toy Example <a href="http://fhwang.net/top_to_bottom/01_fibonacci.rb">fibonacci.rb</a></p>

<p>Testing is harder in the real world</p>

<ul>
<li>Complexity</li>
<li>External components</li>
<li>Side-effects
<ul>
<li>You don&#8217;t want to send a thousand emails to test</li>
</ul></li>
<li>Speed
<ul>
<li>You don&#8217;t want to drop and rebuild your schema for every single test</li>
</ul></li>
</ul>

<p>The Quality Elbow</p>

<ul>
<li>You initially get lots of quality for your cost</li>
<li>As it goes on, you get lest quality from your code</li>
<li>Similarly, testing degrades as code does</li>
</ul>

<p>Message</p>

<ul>
<li>Simple mailer.</li>
<li>Just sends stuff down the pipe</li>
</ul>

<p>For testing we don&#8217;t want to send real emails</p>

<p>MockMailer</p>

<ul>
<li>Same methods, but its really really stupid</li>
<li>Adds emails to emails sent</li>
</ul>

<p>We can use this to simply check our mailers.</p>

<p>This is too coupled however, so a message ought to automatically know what mailer to use in tests.</p>

<p>So we use a <a href="http://fhwang.net/top_to_bottom/03_email.rb">user</a>, and pass in the mock mailer to the user. This still isn&#8217;t right, as its not the user&#8217;s job.</p>

<p>We need to bite the bullet and imitate a global variable. We&#8217;ll use <a href="http://fhwang.net/top_to_bottom/04_email.rb">contextual service</a>.</p>

<p>If we need to use a mock with several outside services, we can set those up in <a href="http://fhwang.net/top_to_bottom/05_seniors.rb">setup</a>.</p>

<p>The issue with mocking a sql query is that you&#8217;re basically writing a full sql parser.</p>

<p>Back to slides&#8230;</p>

<p>Tradeoffs of Complex Mock classes</p>

<ul>
<li>Upsides
<ul>
<li>Speed
<ul>
<li>Incredible speed increase</li>
<li>Not spending 3 hours to run sql tests</li>
</ul></li>
<li>No side-effects and no cleanup
<ul>
<li>No need to touch the db</li>
</ul></li>
</ul></li>
<li>Downsides
<ul>
<li>Indirection</li>
<li>Possible bugs in mock class</li>
<li>Time spent to build mock</li>
</ul></li>
</ul>

<p>You could mock anything!</p>

<ul>
<li>Filesystem - <a href="http://fhwang.net/top_to_bottom/06_mockfs.rb">MockFS</a></li>
<li>Command line user entry - <a href="http://fhwang.net/top_to_bottom/07_easyprompt.rb">EasyPrompt</a></li>
<li>email</li>
<li>network services</li>
</ul>

<p>Dynamicity is your friend</p>

<p><a href="http://fhwang.net/top_to_bottom/09_override.rb">Overriding</a></p>

<ul>
<li>May not be a good idea</li>
<li>Undefines FileUtil, and Dir and File</li>
<li>Also require</li>
</ul>

<p>Further improvement</p>

<ul>
<li>Test-centric libraries
<ul>
<li>Try to include mocks in your libraries</li>
</ul></li>
<li>Domain-specific test languages</li>
</ul>

<p>Questions/Comments</p>

<p>DHH: Use transactions and still use the db. Saves speed. Run test cases in a transaction, rollback. Basecamp tests using db does 410 tests, runs in 60 seconds.</p>

<p>Austin: In 3rd code example, ContextualService, isn&#8217;t that just another way of doing dependency injection (needle, etc).</p>

<p>Response: Yup. I like the fact that the mailer manages its own instance.</p>

<p>DHH: At 0.10, Rails on Needle? Decided its not an approach, what you really want is dependency injection, without knowing anything about dependency injection. What you&#8217;re really interested in is referencing the class mailer and getting the mock back when you&#8217;re running tests. You can preload the load path so when you&#8217;re using tests it uses the mock directory before the real thing. The mock can then just be called Mailer.</p>

<p>Azlak: One downside is writing them.. libraries can generate mock objects dynamically.</p>

<p>Response: YMMV, mocking is a thing mostly on the logick of the thing, so abstracting out doesn&#8217;t work well. Most mock libraries work like message interception, but its like a black box. I personally like just writing them better.</p>

<p>Azlak: Mixing up mocks and stubbs, whats the difference? Mocks are actually black boxes that pretend to be something else. Rails has stubbs not mocks.</p>

<p>DHH: You can choose to override or not. Or turn into a whole black box if you like. You can use either mocks or stubbs.</p>

<p>Azlak: The major difference is that if you don&#8217;t specifically say its a mock, it blows up in your face.</p>

<p>Blah blah blah..</p>

<p>AC: If you want a mockfs, why don&#8217;t you just use a specific path as a sandbox.</p>

<p>Response: I have classes where they know the specific paths, so you have to intercept everywhere and it gets messy.</p>

<p>AC: If you&#8217;re hitting a real file system you have the potential to bork your tests in the future if things crash.</p>

<p>Response: You may also want to check if the hd is full.. etc.</p>

<p>AC: Can run mock tests without actually having the server running (mysql etc).</p>

<p>Response: Also nice to be able to change your structure without touching a database. Also, in theory, you could use tests to test if you&#8217;re working on code running on different machines&#8230;</p>

<p>Dom Tersen: Mock testing are good for tests, but they actually don&#8217;t proove the system works for real. Mock object testing doesn&#8217;t replace real testing.</p>

<p>Patrick: Who&#8217;s responsibility is it to write the mocks? Should we write them on the side, or should the capability to be mocked be part of every IO library?</p>

<p>Response: I&#8217;d be happy if library authors were writing mocks for their libraries. Those writing the library are usually in the best place to write Mocks.</p>

<p>I&#8217;ll clean this article up more as I have time. &#8211; Kev</p>
</div>
<p class="meta">
  Posted in <a href="/articles/category/coding" rel="tag">Coding</a>, <a href="/articles/category/ruby" rel="tag">Ruby</a>&nbsp;<strong>|</strong>&nbsp;<a href="/articles/2005/10/14/top-to-bottom-testing-in-ruby#comments">no comments</a>&nbsp;<strong>|</strong>&nbsp;<a href="/articles/2005/10/14/top-to-bottom-testing-in-ruby#trackbacks">no trackbacks</a>
</p>

  <a name="comments"></a><h4 class="blueblk">Comments</h4>
    <ol class="comment-list" id="commentList">
  
    <li id="dummy_comment" style="display: none"></li>
  
  </ol>

  <a name="trackbacks"></a><h4 class="blueblk">Trackbacks</h4>
  <p>
    Use the following link to trackback from your own site:<br/>
    <span class="light-bg">http://glu.ttono.us/articles/trackback/13</span>
    </p>
  

<p class="postmetadata alt">
  <small>
  <a href="http://glu.ttono.us/xml/rss20/article/13/feed.xml" title="RSS Feed">RSS feed for this post</a>
  <a href="http://glu.ttono.us/articles/trackback/13" >trackback uri</a>
  </small>
</p>

  <p>Comments are disabled</p>

<script type="text/javascript"><!--
if(!mmposts){var mmposts=[];}mmposts[mmposts.length]="13";
//--></script>
<!-- mmp mmid:13 mmdate:2005-10-14 16:56:00 mmurl:/articles/2005/10/14/top-to-bottom-testing-in-ruby mmtitle:Top-to-bottom Testing in Ruby -->
<script src="http://feeds.feedburner.com/~s/Gluttonous?i=http://glu.ttono.us/articles/2005/10/14/top-to-bottom-testing-in-ruby" type="text/javascript" charset="utf-8"></script>

          <script type="text/javascript">
//<![CDATA[
show_dates_as_local_time()
//]]>
</script>
        </div>
        
        <div id="sidebar">
          
            <div id="search-results"></div>
            
              
      
<div class="sidebar-node">
  <h3>About</h3>
My name is Kevin Clark. I'm a <a href="http://ruby-lang.org">Ruby</a> hacker making awesome things at <a href="http://powerset.com">Powerset</a> in San Francisco.

</div>


      
<div class="sidebar-node">
  <h3>Understanding</h3>
<a href="http://glu.ttono.us/articles/2005/08/19/understanding-ruby-symbols">Ruby Symbols</a><br />
<a href="http://glu.ttono.us/articles/2005/09/05/environments-in-rails-0-13-1">Environments in Rails 0.13.1</a><br />
<a href="http://glu.ttono.us/articles/2005/10/27/the-joy-of-migrations">The Joy of Migrations</a><br />
<a href="http://glu.ttono.us/articles/2005/10/30/why-and-how-ruby-and-rails-unit-testing">Ruby (and Rails) Unit Testing</a><br />
<a href="http://glu.ttono.us/articles/2006/02/06/rails-best-practices-tips-and-tricks">Rails Best Practices, Tips and Tricks</a><br />
<a href="http://glu.ttono.us/articles/2006/03/21/rails-for-designers">Rails for Designers</a><br />
<a href="http://glu.ttono.us/articles/2006/05/22/guide-environments-in-rails-1-1">Environments in Rails 1.1</a><br />
<a href="http://glu.ttono.us/articles/2006/05/29/guide-test-driven-rjs-with-arts">Test Driven RJS with ARTS</a>

</div>


      
<div class="sidebar-node">
  <h3>Cheat Sheets</h3>
<a href="http://glu.ttono.us/articles/2006/05/22/configuring-rails-environments-the-cheat-sheet">Configuring Rails Environments</a>

</div>


      
<div class="sidebar-node">
  <h3>Categories</h3>
<ul id="categories">
  
  <li><a href="/articles/category/web-dev">Web Dev</a> <em>(14)</em></li>
  
  
  <li><a href="/articles/category/coding">Coding</a> <em>(37)</em></li>
  
  
  <li><a href="/articles/category/rails">Rails</a> <em>(74)</em></li>
  
  
  <li><a href="/articles/category/op-ed">Op-Ed</a> <em>(7)</em></li>
  
  
  <li><a href="/articles/category/reviews">Reviews</a> <em>(3)</em></li>
  
  
  <li><a href="/articles/category/musings">Musings</a> <em>(18)</em></li>
  
  
  <li><a href="/articles/category/ruby">Ruby</a> <em>(69)</em></li>
  
  
  <li><a href="/articles/category/hacks">Hacks</a> <em>(22)</em></li>
  
  
  <li><a href="/articles/category/sdrug">sd.rb</a> <em>(10)</em></li>
  
  
  <li><a href="/articles/category/testing">testing</a> <em>(17)</em></li>
  
  
  <li><a href="/articles/category/documentation">documentation</a> <em>(6)</em></li>
  
  
  <li><a href="/articles/category/sightings">sightings</a> <em>(19)</em></li>
  
  
  <li><a href="/articles/category/guides">guides</a> <em>(8)</em></li>
  
  
  <li><a href="/articles/category/cheat-sheets">cheat sheets</a> <em>(1)</em></li>
  
  
  <li><a href="/articles/category/business">business</a> <em>(1)</em></li>
  
  
  <li><a href="/articles/category/summer-of-code">summer of code</a> <em>(5)</em></li>
  
</ul>


</div>


      
<div class="sidebar-node">
  <h3></h3>
<a href="http://feeds.feedburner.com/Gluttonous"><img src="http://feeds.feedburner.com/~fc/Gluttonous?bg=5189b5&amp;fg=333333&amp;anim=0" height="26" width="88" style="border:0" alt="" /></a>

</div>


      
<div class="sidebar-node">
  <h3></h3>
<!-- Creative Commons License -->
<a rel="license" href="http://creativecommons.org/licenses/by-nc-sa/2.5/"><img alt="Creative Commons License" border="0" src="http://creativecommons.org/images/public/somerights20.gif" /></a><br />
<!-- /Creative Commons License -->


<!--

<rdf:RDF xmlns="http://web.resource.org/cc/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
<Work rdf:about="">
   <dc:type rdf:resource="http://purl.org/dc/dcmitype/Text" />
   <license rdf:resource="http://creativecommons.org/licenses/by-nc-sa/2.5/" />
</Work>

<License rdf:about="http://creativecommons.org/licenses/by-nc-sa/2.5/">
   <permits rdf:resource="http://web.resource.org/cc/Reproduction" />
   <permits rdf:resource="http://web.resource.org/cc/Distribution" />
   <requires rdf:resource="http://web.resource.org/cc/Notice" />
   <requires rdf:resource="http://web.resource.org/cc/Attribution" />
   <prohibits rdf:resource="http://web.resource.org/cc/CommercialUse" />
   <permits rdf:resource="http://web.resource.org/cc/DerivativeWorks" />
   <requires rdf:resource="http://web.resource.org/cc/ShareAlike" />
</License>

</rdf:RDF>

-->


</div>


  


            
            
            <a href="http://typo.leetsoft.com/" class="powered"><img alt="Powered" src="/images/powered.gif?1155250442" /></a>
            </div>

            <br clear="all" />
      </div>
      <div id="footer">
        <ul>
          <li><a href="http://validator.w3.org/check?uri=referer">Valid XHTML 1.0</a></li>
          <li><a href="http://jigsaw.w3.org/css-validator/validator?uri=http://glu.ttono.us/">Valid CSS</a></li>
        </ul>
      </div>
  </div>
<script type="text/javascript" src="http://tracker.measuremap.com/a/562"></script>
<script src="http://www.google-analytics.com/urchin.js" type="text/javascript">
</script>
<script type="text/javascript">
_uacct = "UA-89073-1";
urchinTracker();
</script>
</body>
</html>

