<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <title>Gluttonous : Growl-Based Bonjour Chat with Channels in 150 Lines</title>
  <meta http-equiv="content-type" content="text/html; charset=utf-8" />
  <meta content="32.867098, -117.211597" name="ICBM" />
  <link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://glu.ttono.us/xml/rsd" />
  <link rel="alternate" type="application/rss+xml" title="RSS" href="http://feeds.feedburner.com/Gluttonous" />
  <link rel="alternate" type="application/atom+xml" title="Atom" href="http://feeds.feedburner.com/Gluttonous" />
  <script src="/javascripts/cookies.js?1155250443" type="text/javascript"></script>
  <script src="/javascripts/prototype.js?1155250443" type="text/javascript"></script>
  <script src="/javascripts/effects.js?1155250443" type="text/javascript"></script>
  <script src="/javascripts/typo.js?1155250443" type="text/javascript"></script>
  
  <script type="text/javascript"></script>
  <link href="/stylesheets/theme/azure.css?1215021856" media="all" rel="Stylesheet" type="text/css" />
  <link href="/stylesheets/user-styles.css?1155250443" media="all" rel="Stylesheet" type="text/css" />
  <link href="/stylesheets/theme/print.css?1215021856" media="print" rel="Stylesheet" type="text/css" />
  <link href='http://www.myopenid.com/server' rel='openid.server' />
  <link href='http://kevinclark.myopenid.com/' rel='openid.delegate' />
</head>

<body>
  <div id="container" class="clearfix">
      <div id="header">
        <div id="logo">
          <h1 id="sitename"><a href="/">Gluttonous</a></h1>
          <h2 id="subtitle"></h2>
        </div>
      </div>
      
      <div id="search"> <form action="/articles/search" id="sform" method="get">
 <label for="q">Live Search:</label><input type="text" id="q" name="q" value="" size="15" />
<img alt="Spinner-blue" id="search_spinner" src="/images/spinner-blue.gif?1155250442" style="display:none;" />
</form>
<script type="text/javascript">
//<![CDATA[
new Form.Element.Observer('q', 1, function(element, value) {new Ajax.Updater('search-results', '/live/search', {asynchronous:true, evalScripts:true, onComplete:function(request){Element.hide('search_spinner')}, onLoading:function(request){Element.show('search_spinner')}, parameters:'q=' + escape($F('q'))})})
//]]>
</script></div>
      

      <div id="content" class="clearfix">
        <div id="main">
          <!--
<rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
       xmlns:trackback="http://madskills.com/public/xml/rss/module/trackback/"
       xmlns:dc="http://purl.org/dc/elements/1.1/">
<rdf:Description
    rdf:about=""
    dc:title="Growl-Based Bonjour Chat with Channels in 150 Lines"
    dc:identifier="http://glu.ttono.us/articles/2007/05/06/growl-based-bonjour-chat-with-channels-in-150-lines"
    dc:description="One of the many awesome things about working at Powerset is the guys I get to hack with. Tonight, my buddies Tom Preston-Werner, Chris Van Pelt, and"
    dc:creator="kevin"
    dc:date="2007-05-06T07:10:21-04:00" />
</rdf:RDF>
-->

<div class="post" onmouseover="if (getCookie('is_admin') == 'yes') { Element.show('admin_article'); }"  onmouseout="Element.hide('admin_article');" >
  <a href="/admin/content/edit/1455" class="admintools" id="admin_article" style="display: none">edit</a>
  <h2>Growl-Based Bonjour Chat with Channels in 150 Lines</h2>
  <p class="auth">Posted by kev
  <span class="typo_date" title="Sun, 06 May 2007 10:58:00 GMT">Sun, 06 May 2007 10:58:00 GMT</span></p>
  <div id="adsense">
  <script type="text/javascript"><!--
google_ad_client = "pub-1730274975094059";
google_ad_width = 468;
google_ad_height = 60;
google_ad_format = "468x60_as";
google_ad_type = "text";
google_ad_channel ="";
google_color_border = "FFFFFF";
google_color_bg = "FFFFFF";
google_color_link = "5189B5";
google_color_url = "000000";
google_color_text = "000000";
//--></script>
<script type="text/javascript"
  src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
  </div>
  <p>One of the many awesome things about working at <a href="http://powerset.com">Powerset</a> is the guys I get to hack with. Tonight, my buddies <a href="http://rubyisawesome.com">Tom Preston-Werner</a>, <a href="http://vandev.com">Chris Van Pelt</a>, and I were feeling whimsical. Full source, with quicksilver hook and startup scripts can be found <a href="http://code.google.com/p/jakl/">here</a>, but this is the meat:</p>

<div class="typocode"><div class="codetitle">growl_handler.rb</div><pre><code class="typocode_ruby "><span class="ident">require</span> <span class="punct">'</span><span class="string">rubygems</span><span class="punct">'</span>
<span class="ident">require</span> <span class="punct">'</span><span class="string">ruby-growl</span><span class="punct">'</span>

<span class="keyword">module </span><span class="module">Jakl</span>
  <span class="keyword">class </span><span class="class">GrowlHandler</span>
    <span class="keyword">def </span><span class="method">initialize</span>
      <span class="keyword">if</span> `<span class="ident">which</span> <span class="ident">growlnotify`</span> <span class="punct">=~</span> <span class="punct">/</span><span class="regex">^no .+ in</span><span class="punct">/</span>
        <span class="attribute">@strategy</span> <span class="punct">=</span> <span class="symbol">:ruby</span>
        <span class="attribute">@growl</span> <span class="punct">=</span> <span class="constant">Growl</span><span class="punct">.</span><span class="ident">new</span><span class="punct">(&quot;</span><span class="string">localhost</span><span class="punct">&quot;,</span> <span class="punct">&quot;</span><span class="string">jakl</span><span class="punct">&quot;,</span> <span class="punct">[&quot;</span><span class="string">jakl_message</span><span class="punct">&quot;])</span>
      <span class="keyword">else</span>
        <span class="attribute">@strategy</span> <span class="punct">=</span> <span class="symbol">:command</span>
      <span class="keyword">end</span>
    <span class="keyword">end</span>

    <span class="keyword">def </span><span class="method">notify</span><span class="punct">(</span><span class="ident">group</span><span class="punct">,</span> <span class="ident">name</span><span class="punct">,</span> <span class="ident">message</span><span class="punct">)</span>
      <span class="keyword">case</span> <span class="attribute">@strategy</span>
        <span class="keyword">when</span> <span class="symbol">:command</span>
          <span class="ident">img_path</span> <span class="punct">=</span> <span class="constant">File</span><span class="punct">.</span><span class="ident">join</span><span class="punct">(</span><span class="constant">File</span><span class="punct">.</span><span class="ident">dirname</span><span class="punct">(</span><span class="constant">__FILE__</span><span class="punct">),</span> <span class="punct">'</span><span class="string">../../assets/jakl.png</span><span class="punct">')</span>
          `<span class="ident">growlnotify</span> <span class="punct">-</span><span class="ident">n</span> <span class="ident">jakl</span> <span class="punct">--</span><span class="ident">image</span> <span class="comment">#{img_path} -m '#{message}' '#{name} (#{group})'`</span>
        <span class="keyword">when</span> <span class="symbol">:ruby</span>
          <span class="attribute">@growl</span><span class="punct">.</span><span class="ident">notify</span><span class="punct">(&quot;</span><span class="string">jakl_message</span><span class="punct">&quot;,</span> <span class="punct">&quot;</span><span class="string"><span class="expr">#{name}</span> (<span class="expr">#{group}</span>)</span><span class="punct">&quot;,</span> <span class="ident">message</span><span class="punct">)</span>
        <span class="keyword">else</span>
          <span class="keyword">raise</span> <span class="constant">StandardError</span><span class="punct">.</span><span class="ident">new</span><span class="punct">('</span><span class="string">Invalid strategy</span><span class="punct">')</span>
      <span class="keyword">end</span>
    <span class="keyword">end</span>
  <span class="keyword">end</span>
<span class="keyword">end</span></code></pre></div>

<div class="typocode"><div class="codetitle">client.rb</div><pre><code class="typocode_ruby "><span class="ident">require</span> <span class="punct">'</span><span class="string">rubygems</span><span class="punct">'</span>
<span class="ident">require</span> <span class="punct">'</span><span class="string">net/dns/mdns-sd</span><span class="punct">'</span>
<span class="ident">require</span> <span class="punct">'</span><span class="string">base64</span><span class="punct">'</span>

<span class="keyword">module </span><span class="module">Jakl</span>
  <span class="keyword">class </span><span class="class">Client</span>
    <span class="constant">DNSSD</span> <span class="punct">=</span> <span class="constant">Net</span><span class="punct">::</span><span class="constant">DNS</span><span class="punct">::</span><span class="constant">MDNSSD</span>

    <span class="attribute">@@debug</span> <span class="punct">=</span> <span class="constant">false</span>

    <span class="keyword">def </span><span class="method">self.debug=</span><span class="punct">(</span><span class="ident">value</span><span class="punct">)</span>
      <span class="attribute">@@debug</span> <span class="punct">=</span> <span class="ident">value</span>
    <span class="keyword">end</span>

    <span class="keyword">def </span><span class="method">self.debug</span>
      <span class="attribute">@@debug</span>
    <span class="keyword">end</span>

    <span class="keyword">def </span><span class="method">initialize</span><span class="punct">(</span><span class="ident">options</span><span class="punct">={})</span>
      <span class="ident">default_options</span> <span class="punct">=</span> <span class="punct">{</span>
        <span class="symbol">:default_recv</span> <span class="punct">=&gt;</span> <span class="punct">&quot;</span><span class="string">jakl</span><span class="punct">&quot;,</span> 
        <span class="symbol">:timeout</span> <span class="punct">=&gt;</span> <span class="number">2</span><span class="punct">,</span> 
        <span class="symbol">:login</span> <span class="punct">=&gt;</span> <span class="constant">ENV</span><span class="punct">['</span><span class="string">USER</span><span class="punct">']</span>
      <span class="punct">}</span>
      <span class="attribute">@options</span> <span class="punct">=</span> <span class="ident">default_options</span><span class="punct">.</span><span class="ident">merge</span><span class="punct">(</span><span class="ident">options</span><span class="punct">)</span>
    <span class="keyword">end</span>

    <span class="keyword">def </span><span class="method">send</span><span class="punct">(</span><span class="ident">message</span><span class="punct">,</span> <span class="ident">recv</span><span class="punct">=</span><span class="constant">nil</span><span class="punct">)</span>
      <span class="ident">recv</span> <span class="punct">||=</span> <span class="attribute">@options</span><span class="punct">[</span><span class="symbol">:default_recv</span><span class="punct">]</span>
      <span class="ident">recv</span> <span class="punct">=</span> <span class="ident">recv</span><span class="punct">.</span><span class="ident">split</span><span class="punct">('</span><span class="string">,</span><span class="punct">').</span><span class="ident">collect</span> <span class="punct">{|</span><span class="ident">g</span><span class="punct">|</span> <span class="ident">g</span><span class="punct">.</span><span class="ident">strip</span> <span class="punct">}</span>
      <span class="ident">puts</span> <span class="punct">&quot;</span><span class="string">Sending: '<span class="expr">#{message}</span>' to '<span class="expr">#{recv.join(',')}</span>'</span><span class="punct">&quot;</span> <span class="keyword">if</span> <span class="attribute">@@debug</span>

      <span class="ident">find_recipients</span> <span class="punct">=</span> <span class="constant">DNSSD</span><span class="punct">.</span><span class="ident">resolve</span><span class="punct">('</span><span class="string">jakl</span><span class="punct">',</span> <span class="punct">'</span><span class="string">_jakl._tcp</span><span class="punct">')</span> <span class="keyword">do</span> <span class="punct">|</span><span class="ident">r</span><span class="punct">|</span>
        <span class="ident">puts</span> <span class="punct">&quot;</span><span class="string">Found jakl service at <span class="expr">#{r.target}</span></span><span class="punct">&quot;</span> <span class="keyword">if</span> <span class="attribute">@@debug</span>
        <span class="ident">recvs</span> <span class="punct">=</span> <span class="ident">r</span><span class="punct">.</span><span class="ident">text_record</span><span class="punct">['</span><span class="string">recvs</span><span class="punct">'].</span><span class="ident">split</span><span class="punct">('</span><span class="string">,</span><span class="punct">').</span><span class="ident">collect</span> <span class="punct">{|</span><span class="ident">g</span><span class="punct">|</span> <span class="ident">g</span><span class="punct">.</span><span class="ident">strip</span> <span class="punct">}</span>
        <span class="ident">puts</span> <span class="punct">&quot;</span><span class="string">  responds to: <span class="expr">#{recvs.join(', ')}</span></span><span class="punct">&quot;</span>  <span class="keyword">if</span> <span class="attribute">@@debug</span>

        <span class="keyword">if</span> <span class="punct">(</span><span class="ident">succ_recvs</span> <span class="punct">=</span> <span class="ident">recvs</span> <span class="punct">&amp;</span> <span class="ident">recv</span><span class="punct">).</span><span class="ident">any?</span>
          <span class="ident">puts</span> <span class="punct">&quot;</span><span class="string">Sending to: <span class="expr">#{r.target}</span>:<span class="expr">#{r.port}</span></span><span class="punct">&quot;</span> <span class="keyword">if</span> <span class="attribute">@@debug</span>

          <span class="comment"># B64 Encoded NAME;GROUP;MESSAGE</span>
          <span class="ident">data</span> <span class="punct">=</span> <span class="punct">[</span><span class="attribute">@options</span><span class="punct">[</span><span class="symbol">:login</span><span class="punct">],</span> <span class="ident">succ_recvs</span><span class="punct">.</span><span class="ident">first</span><span class="punct">,</span> <span class="ident">message</span><span class="punct">].</span><span class="ident">map</span> <span class="keyword">do</span> <span class="punct">|</span><span class="ident">s</span><span class="punct">|</span> 
            <span class="constant">Base64</span><span class="punct">.</span><span class="ident">encode64</span><span class="punct">(</span><span class="ident">s</span><span class="punct">)</span>
          <span class="keyword">end</span><span class="punct">.</span><span class="ident">join</span><span class="punct">('</span><span class="string">;</span><span class="punct">')</span>
          <span class="constant">TCPSocket</span><span class="punct">.</span><span class="ident">new</span><span class="punct">(</span><span class="ident">r</span><span class="punct">.</span><span class="ident">target</span><span class="punct">,</span> <span class="ident">r</span><span class="punct">.</span><span class="ident">port</span><span class="punct">).</span><span class="ident">send</span><span class="punct">(</span><span class="ident">data</span><span class="punct">,</span> <span class="number">0</span><span class="punct">)</span>
        <span class="keyword">end</span>
      <span class="keyword">end</span>

      <span class="ident">sleep</span> <span class="attribute">@options</span><span class="punct">[</span><span class="symbol">:timeout</span><span class="punct">]</span>
      <span class="ident">find_recipients</span><span class="punct">.</span><span class="ident">stop</span>
    <span class="keyword">end</span>
  <span class="keyword">end</span>
<span class="keyword">end</span></code></pre></div>

<div class="typocode"><div class="codetitle">server.rb</div><pre><code class="typocode_ruby "><span class="ident">require</span> <span class="punct">'</span><span class="string">rubygems</span><span class="punct">'</span>
<span class="ident">require</span> <span class="punct">'</span><span class="string">eventmachine</span><span class="punct">'</span>
<span class="ident">require</span> <span class="punct">'</span><span class="string">net/dns/mdns-sd</span><span class="punct">'</span>
<span class="ident">require</span> <span class="punct">'</span><span class="string">base64</span><span class="punct">'</span>

<span class="global">$:</span><span class="punct">.</span><span class="ident">unshift</span> <span class="constant">File</span><span class="punct">.</span><span class="ident">dirname</span><span class="punct">(</span><span class="constant">__FILE__</span><span class="punct">)</span>
<span class="ident">require</span> <span class="punct">'</span><span class="string">growl_handler</span><span class="punct">'</span>

<span class="keyword">module </span><span class="module">JaklEventServer</span>
  <span class="keyword">def </span><span class="method">receive_data</span><span class="punct">(</span><span class="ident">data</span><span class="punct">)</span>
    <span class="comment"># B64 Encoded NAME;GROUP;MESSAGE</span>
    <span class="ident">name</span><span class="punct">,</span> <span class="ident">recv</span><span class="punct">,</span> <span class="ident">message</span> <span class="punct">=</span> <span class="ident">data</span><span class="punct">.</span><span class="ident">split</span><span class="punct">('</span><span class="string">;</span><span class="punct">').</span><span class="ident">map</span> <span class="punct">{|</span><span class="ident">s</span><span class="punct">|</span> <span class="constant">Base64</span><span class="punct">.</span><span class="ident">decode64</span><span class="punct">(</span><span class="ident">s</span><span class="punct">)</span> <span class="punct">}</span>
    <span class="constant">Jakl</span><span class="punct">::</span><span class="constant">GrowlHandler</span><span class="punct">.</span><span class="ident">new</span><span class="punct">.</span><span class="ident">notify</span><span class="punct">(</span><span class="ident">recv</span><span class="punct">,</span> <span class="ident">name</span><span class="punct">,</span> <span class="ident">message</span><span class="punct">)</span>
    <span class="global">$stderr</span><span class="punct">.</span><span class="ident">puts</span> <span class="punct">&quot;</span><span class="string">Name: <span class="expr">#{name}</span>, Recipient: <span class="expr">#{recv}</span>, Message: <span class="expr">#{message}</span></span><span class="punct">&quot;</span> <span class="keyword">if</span> <span class="constant">Jakl</span><span class="punct">::</span><span class="constant">Server</span><span class="punct">.</span><span class="ident">debug</span>
  <span class="keyword">end</span>
<span class="keyword">end</span>

<span class="keyword">module </span><span class="module">Jakl</span>
  <span class="keyword">class </span><span class="class">Server</span>
    <span class="constant">DNSSD</span> <span class="punct">=</span> <span class="constant">Net</span><span class="punct">::</span><span class="constant">DNS</span><span class="punct">::</span><span class="constant">MDNSSD</span>

    <span class="attribute">@@debug</span> <span class="punct">=</span> <span class="constant">false</span>

    <span class="keyword">def </span><span class="method">self.debug=</span><span class="punct">(</span><span class="ident">value</span><span class="punct">)</span>
      <span class="attribute">@@debug</span> <span class="punct">=</span> <span class="ident">value</span>
    <span class="keyword">end</span>

    <span class="keyword">def </span><span class="method">self.debug</span>
      <span class="attribute">@@debug</span>
    <span class="keyword">end</span>

    <span class="keyword">def </span><span class="method">initialize</span><span class="punct">(</span><span class="ident">options</span><span class="punct">={})</span>
      <span class="ident">default_options</span> <span class="punct">=</span> <span class="punct">{</span>
        <span class="symbol">:recvs</span> <span class="punct">=&gt;</span> <span class="punct">&quot;</span><span class="string">jakl</span><span class="punct">&quot;,</span> 
        <span class="symbol">:timeout</span> <span class="punct">=&gt;</span> <span class="number">5</span><span class="punct">,</span> 
        <span class="symbol">:login</span> <span class="punct">=&gt;</span> <span class="constant">ENV</span><span class="punct">['</span><span class="string">USER</span><span class="punct">']</span>
      <span class="punct">}</span>
      <span class="attribute">@options</span> <span class="punct">=</span> <span class="ident">default_options</span><span class="punct">.</span><span class="ident">merge</span><span class="punct">(</span><span class="ident">options</span><span class="punct">)</span>

      <span class="ident">validate_login!</span>
    <span class="keyword">end</span>

    <span class="keyword">def </span><span class="method">start</span>
      <span class="constant">DNSSD</span><span class="punct">.</span><span class="ident">register</span><span class="punct">('</span><span class="string">jakl</span><span class="punct">',</span> <span class="punct">'</span><span class="string">_jakl._tcp</span><span class="punct">',</span> <span class="punct">'</span><span class="string">local</span><span class="punct">',</span> <span class="number">4180</span><span class="punct">,</span> 
                             <span class="punct">{'</span><span class="string">recvs</span><span class="punct">'</span> <span class="punct">=&gt;</span> <span class="attribute">@options</span><span class="punct">[</span><span class="symbol">:recvs</span><span class="punct">],</span> <span class="punct">'</span><span class="string">login</span><span class="punct">'</span> <span class="punct">=&gt;</span> <span class="attribute">@options</span><span class="punct">[</span><span class="symbol">:login</span><span class="punct">]})</span>

      <span class="constant">EventMachine</span><span class="punct">::</span><span class="ident">run</span> <span class="punct">{</span>
        <span class="constant">EventMachine</span><span class="punct">::</span><span class="ident">start_server</span> <span class="punct">&quot;</span><span class="string">0.0.0.0</span><span class="punct">&quot;,</span> <span class="number">4180</span><span class="punct">,</span> <span class="constant">JaklEventServer</span>
        <span class="ident">puts</span> <span class="punct">&quot;</span><span class="string">Listening for howls on 4180</span><span class="punct">&quot;</span>
      <span class="punct">}</span>
    <span class="keyword">end</span>

    <span class="keyword">def </span><span class="method">validate_login!</span>
      <span class="comment"># Yeah, I know there's a race condition here. So it goes.</span>
      <span class="ident">name_validation</span> <span class="punct">=</span> <span class="constant">DNSSD</span><span class="punct">.</span><span class="ident">resolve</span><span class="punct">('</span><span class="string">jakl</span><span class="punct">',</span> <span class="punct">'</span><span class="string">_jakl._tcp</span><span class="punct">')</span> <span class="keyword">do</span> <span class="punct">|</span><span class="ident">r</span><span class="punct">|</span>
        <span class="keyword">if</span> <span class="punct">[</span><span class="ident">r</span><span class="punct">.</span><span class="ident">text_record</span><span class="punct">['</span><span class="string">login</span><span class="punct">'],</span> 
            <span class="ident">r</span><span class="punct">.</span><span class="ident">text_record</span><span class="punct">['</span><span class="string">recvs</span><span class="punct">'].</span><span class="ident">split</span><span class="punct">('</span><span class="string">,</span><span class="punct">')].</span><span class="ident">flatten</span><span class="punct">.</span><span class="ident">include?</span> <span class="attribute">@options</span><span class="punct">[</span><span class="symbol">:login</span><span class="punct">]</span>
          <span class="ident">puts</span> <span class="punct">&quot;</span><span class="string">The name <span class="expr">#{@options[:login]}</span> is already taken. Sorry :<span class="escape">\\</span></span><span class="punct">&quot;</span>
          <span class="ident">exit</span> <span class="number">1</span>
        <span class="keyword">end</span>
      <span class="keyword">end</span>

      <span class="comment"># Add username to recvs</span>
      <span class="attribute">@options</span><span class="punct">[</span><span class="symbol">:recvs</span><span class="punct">]</span> <span class="punct">=</span> <span class="punct">[</span><span class="attribute">@options</span><span class="punct">[</span><span class="symbol">:recvs</span><span class="punct">].</span><span class="ident">split</span><span class="punct">('</span><span class="string">,</span><span class="punct">')</span> <span class="punct">&lt;&lt;</span> <span class="attribute">@options</span><span class="punct">[</span><span class="symbol">:login</span><span class="punct">]].</span><span class="ident">join</span><span class="punct">('</span><span class="string">,</span><span class="punct">')</span>

      <span class="comment"># Wait for resolv thread to come back</span>
      <span class="ident">sleep</span> <span class="number">3</span>
      <span class="ident">name_validation</span><span class="punct">.</span><span class="ident">stop</span>
    <span class="keyword">end</span>
  <span class="keyword">end</span>
<span class="keyword">end</span></code></pre></div>
</div>
<p class="meta">
  Posted in <a href="/articles/category/ruby" rel="tag">Ruby</a>, <a href="/articles/category/hacks" rel="tag">Hacks</a>&nbsp;<strong>|</strong>&nbsp;<a href="/articles/2007/05/06/growl-based-bonjour-chat-with-channels-in-150-lines#comments">no comments</a>
</p>

  <a name="comments"></a><h4 class="blueblk">Comments</h4>
    <ol class="comment-list" id="commentList">
  
     
  
  </ol>


<p class="postmetadata alt">
  <small>
  <a href="http://glu.ttono.us/xml/rss20/article/1455/feed.xml" title="RSS Feed">RSS feed for this post</a>
  </small>
</p>

  <p>Comments are disabled</p>

<script type="text/javascript"><!--
if(!mmposts){var mmposts=[];}mmposts[mmposts.length]="1455";
//--></script>
<!-- mmp mmid:1455 mmdate:2007-05-06 07:06:21 mmurl:/articles/2007/05/06/growl-based-bonjour-chat-with-channels-in-150-lines mmtitle:Growl-Based Bonjour Chat with Channels in 150 Lines -->
<script src="http://feeds.feedburner.com/~s/Gluttonous?i=http://glu.ttono.us/articles/2007/05/06/growl-based-bonjour-chat-with-channels-in-150-lines" type="text/javascript" charset="utf-8"></script>

          <script type="text/javascript">
//<![CDATA[
show_dates_as_local_time()
//]]>
</script>
        </div>
        
        <div id="sidebar">
          
            <div id="search-results"></div>
            
              
      
<div class="sidebar-node">
  <h3>About</h3>
My name is Kevin Clark. I'm a <a href="http://ruby-lang.org">Ruby</a> hacker making awesome things at <a href="http://powerset.com">Powerset</a> in San Francisco.

</div>


      
<div class="sidebar-node">
  <h3>Understanding</h3>
<a href="http://glu.ttono.us/articles/2005/08/19/understanding-ruby-symbols">Ruby Symbols</a><br />
<a href="http://glu.ttono.us/articles/2005/09/05/environments-in-rails-0-13-1">Environments in Rails 0.13.1</a><br />
<a href="http://glu.ttono.us/articles/2005/10/27/the-joy-of-migrations">The Joy of Migrations</a><br />
<a href="http://glu.ttono.us/articles/2005/10/30/why-and-how-ruby-and-rails-unit-testing">Ruby (and Rails) Unit Testing</a><br />
<a href="http://glu.ttono.us/articles/2006/02/06/rails-best-practices-tips-and-tricks">Rails Best Practices, Tips and Tricks</a><br />
<a href="http://glu.ttono.us/articles/2006/03/21/rails-for-designers">Rails for Designers</a><br />
<a href="http://glu.ttono.us/articles/2006/05/22/guide-environments-in-rails-1-1">Environments in Rails 1.1</a><br />
<a href="http://glu.ttono.us/articles/2006/05/29/guide-test-driven-rjs-with-arts">Test Driven RJS with ARTS</a>

</div>


      
<div class="sidebar-node">
  <h3>Cheat Sheets</h3>
<a href="http://glu.ttono.us/articles/2006/05/22/configuring-rails-environments-the-cheat-sheet">Configuring Rails Environments</a>

</div>


      
<div class="sidebar-node">
  <h3>Categories</h3>
<ul id="categories">
  
  <li><a href="/articles/category/web-dev">Web Dev</a> <em>(14)</em></li>
  
  
  <li><a href="/articles/category/coding">Coding</a> <em>(37)</em></li>
  
  
  <li><a href="/articles/category/rails">Rails</a> <em>(74)</em></li>
  
  
  <li><a href="/articles/category/op-ed">Op-Ed</a> <em>(7)</em></li>
  
  
  <li><a href="/articles/category/reviews">Reviews</a> <em>(3)</em></li>
  
  
  <li><a href="/articles/category/musings">Musings</a> <em>(18)</em></li>
  
  
  <li><a href="/articles/category/ruby">Ruby</a> <em>(69)</em></li>
  
  
  <li><a href="/articles/category/hacks">Hacks</a> <em>(22)</em></li>
  
  
  <li><a href="/articles/category/sdrug">sd.rb</a> <em>(10)</em></li>
  
  
  <li><a href="/articles/category/testing">testing</a> <em>(17)</em></li>
  
  
  <li><a href="/articles/category/documentation">documentation</a> <em>(6)</em></li>
  
  
  <li><a href="/articles/category/sightings">sightings</a> <em>(19)</em></li>
  
  
  <li><a href="/articles/category/guides">guides</a> <em>(8)</em></li>
  
  
  <li><a href="/articles/category/cheat-sheets">cheat sheets</a> <em>(1)</em></li>
  
  
  <li><a href="/articles/category/business">business</a> <em>(1)</em></li>
  
  
  <li><a href="/articles/category/summer-of-code">summer of code</a> <em>(5)</em></li>
  
</ul>


</div>


      
<div class="sidebar-node">
  <h3></h3>
<a href="http://feeds.feedburner.com/Gluttonous"><img src="http://feeds.feedburner.com/~fc/Gluttonous?bg=5189b5&amp;fg=333333&amp;anim=0" height="26" width="88" style="border:0" alt="" /></a>

</div>


      
<div class="sidebar-node">
  <h3></h3>
<!-- Creative Commons License -->
<a rel="license" href="http://creativecommons.org/licenses/by-nc-sa/2.5/"><img alt="Creative Commons License" border="0" src="http://creativecommons.org/images/public/somerights20.gif" /></a><br />
<!-- /Creative Commons License -->


<!--

<rdf:RDF xmlns="http://web.resource.org/cc/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
<Work rdf:about="">
   <dc:type rdf:resource="http://purl.org/dc/dcmitype/Text" />
   <license rdf:resource="http://creativecommons.org/licenses/by-nc-sa/2.5/" />
</Work>

<License rdf:about="http://creativecommons.org/licenses/by-nc-sa/2.5/">
   <permits rdf:resource="http://web.resource.org/cc/Reproduction" />
   <permits rdf:resource="http://web.resource.org/cc/Distribution" />
   <requires rdf:resource="http://web.resource.org/cc/Notice" />
   <requires rdf:resource="http://web.resource.org/cc/Attribution" />
   <prohibits rdf:resource="http://web.resource.org/cc/CommercialUse" />
   <permits rdf:resource="http://web.resource.org/cc/DerivativeWorks" />
   <requires rdf:resource="http://web.resource.org/cc/ShareAlike" />
</License>

</rdf:RDF>

-->


</div>


  


            
            
            <a href="http://typo.leetsoft.com/" class="powered"><img alt="Powered" src="/images/powered.gif?1155250442" /></a>
            </div>

            <br clear="all" />
      </div>
      <div id="footer">
        <ul>
          <li><a href="http://validator.w3.org/check?uri=referer">Valid XHTML 1.0</a></li>
          <li><a href="http://jigsaw.w3.org/css-validator/validator?uri=http://glu.ttono.us/">Valid CSS</a></li>
        </ul>
      </div>
  </div>
<script type="text/javascript" src="http://tracker.measuremap.com/a/562"></script>
<script src="http://www.google-analytics.com/urchin.js" type="text/javascript">
</script>
<script type="text/javascript">
_uacct = "UA-89073-1";
urchinTracker();
</script>
</body>
</html>

