<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <title>Gluttonous : Gluttonous - category hacks</title>
  <meta http-equiv="content-type" content="text/html; charset=utf-8" />
  <meta content="32.867098, -117.211597" name="ICBM" />
  <link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://glu.ttono.us/xml/rsd" />
  <link rel="alternate" type="application/rss+xml" title="RSS" href="http://feeds.feedburner.com/Gluttonous" />
  <link rel="alternate" type="application/atom+xml" title="Atom" href="http://feeds.feedburner.com/Gluttonous" />
  <script src="/javascripts/cookies.js?1155250443" type="text/javascript"></script>
  <script src="/javascripts/prototype.js?1155250443" type="text/javascript"></script>
  <script src="/javascripts/effects.js?1155250443" type="text/javascript"></script>
  <script src="/javascripts/typo.js?1155250443" type="text/javascript"></script>
  
  <script type="text/javascript"></script>
  <link href="/stylesheets/theme/azure.css?1215021856" media="all" rel="Stylesheet" type="text/css" />
  <link href="/stylesheets/user-styles.css?1155250443" media="all" rel="Stylesheet" type="text/css" />
  <link href="/stylesheets/theme/print.css?1215021856" media="print" rel="Stylesheet" type="text/css" />
  <link href='http://www.myopenid.com/server' rel='openid.server' />
  <link href='http://kevinclark.myopenid.com/' rel='openid.delegate' />
</head>

<body>
  <div id="container" class="clearfix">
      <div id="header">
        <div id="logo">
          <h1 id="sitename"><a href="/">Gluttonous</a></h1>
          <h2 id="subtitle"></h2>
        </div>
      </div>
      
      <div id="search"> <form action="/articles/search" id="sform" method="get">
 <label for="q">Live Search:</label><input type="text" id="q" name="q" value="" size="15" />
<img alt="Spinner-blue" id="search_spinner" src="/images/spinner-blue.gif?1155250442" style="display:none;" />
</form>
<script type="text/javascript">
//<![CDATA[
new Form.Element.Observer('q', 1, function(element, value) {new Ajax.Updater('search-results', '/live/search', {asynchronous:true, evalScripts:true, onComplete:function(request){Element.hide('search_spinner')}, onLoading:function(request){Element.show('search_spinner')}, parameters:'q=' + escape($F('q'))})})
//]]>
</script></div>
      

      <div id="content" class="clearfix">
        <div id="main">
           <div class="post">
  <h2><a href="/articles/2008/04/05/really-simple-git-deployment-with-vlad">Really Simple Git Deployment with Vlad</a></h2>
<p class="auth">Posted by kev
<span class="typo_date" title="Sun, 06 Apr 2008 00:13:00 GMT">Sun, 06 Apr 2008 00:13:00 GMT</span></p>
<p>Just drop this in your Rakefile. This is slightly modified from something I&#8217;m using in production.</p>

<p>Disect! Enjoy! Explanation (read: spoilers) after the jump.</p>

<div class="typocode"><pre><code class="typocode_ruby "><span class="comment">##############################################################################</span>
<span class="comment"># Deploy</span>
<span class="comment">##############################################################################</span>

<span class="keyword">begin</span>
  <span class="ident">require</span> <span class="punct">'</span><span class="string">rake_remote_task</span><span class="punct">'</span>

  <span class="constant">APP_NAME</span> <span class="punct">=</span> <span class="punct">&quot;</span><span class="string">someapp</span><span class="punct">&quot;</span>
  <span class="constant">DEPLOY_ROOT</span> <span class="punct">=</span> <span class="punct">&quot;</span><span class="string">/usr/local/share/applications/<span class="expr">#{APP_NAME}</span></span><span class="punct">&quot;</span>
  <span class="constant">ON_DEPLOY_RESTART</span> <span class="punct">=</span> <span class="punct">[&quot;</span><span class="string">someappd</span><span class="punct">&quot;]</span>

  <span class="ident">role</span> <span class="symbol">:app_server</span><span class="punct">,</span> <span class="punct">&quot;</span><span class="string">myserver.com</span><span class="punct">&quot;</span>

  <span class="keyword">def </span><span class="method">archive</span>
    <span class="ident">commit</span> <span class="punct">=</span> `<span class="ident">git</span><span class="punct">-</span><span class="ident">rev</span><span class="punct">-</span><span class="ident">list</span> <span class="punct">--</span><span class="ident">max</span><span class="punct">-</span><span class="ident">count</span><span class="punct">=</span><span class="number">1</span> <span class="punct">--</span><span class="ident">abbrev</span><span class="punct">=</span><span class="number">10</span> <span class="punct">--</span><span class="ident">abbrev</span><span class="punct">-</span><span class="ident">commit</span> <span class="constant">HEAD`</span><span class="punct">.</span><span class="ident">chomp</span>
    <span class="ident">file</span> <span class="punct">=</span> <span class="punct">&quot;</span><span class="string"><span class="expr">#{APP_NAME}</span>-<span class="expr">#{commit}</span>.tar.gz</span><span class="punct">&quot;</span>
  <span class="keyword">end</span>

  <span class="keyword">def </span><span class="method">restart_daemons</span>
    <span class="constant">ON_DEPLOY_RESTART</span><span class="punct">.</span><span class="ident">each</span> <span class="keyword">do</span> <span class="punct">|</span><span class="ident">app</span><span class="punct">|</span>
      <span class="ident">run</span> <span class="punct">&quot;</span><span class="string">sudo god restart <span class="expr">#{app}</span></span><span class="punct">&quot;</span>
    <span class="keyword">end</span>
  <span class="keyword">end</span>

  <span class="ident">namespace</span> <span class="symbol">:deploy</span> <span class="keyword">do</span>
    <span class="ident">task</span> <span class="symbol">:build</span> <span class="keyword">do</span>
      <span class="ident">sh</span> <span class="punct">&quot;</span><span class="string">git archive --format=tar HEAD | gzip &gt; <span class="expr">#{archive}</span></span><span class="punct">&quot;</span>
    <span class="keyword">end</span>

    <span class="ident">remote_task</span> <span class="symbol">:push</span> <span class="punct">=&gt;</span> <span class="symbol">:build</span> <span class="keyword">do</span>
      <span class="ident">rsync</span> <span class="ident">archive</span><span class="punct">,</span> <span class="punct">&quot;</span><span class="string">/tmp</span><span class="punct">&quot;</span>
    <span class="keyword">end</span>

    <span class="ident">desc</span> <span class="punct">&quot;</span><span class="string">Install a release from the latest commit</span><span class="punct">&quot;</span>
    <span class="ident">remote_task</span> <span class="symbol">:install</span> <span class="punct">=&gt;</span> <span class="symbol">:push</span> <span class="keyword">do</span>
      <span class="ident">date_stamp</span> <span class="punct">=</span> <span class="constant">Time</span><span class="punct">.</span><span class="ident">now</span><span class="punct">.</span><span class="ident">strftime</span><span class="punct">(&quot;</span><span class="string">%Y%m%d</span><span class="punct">&quot;)</span>
      <span class="ident">last_release</span> <span class="punct">=</span> <span class="ident">run</span><span class="punct">(&quot;</span><span class="string">ls <span class="expr">#{DEPLOY_ROOT}</span>/rels | sort -r | head -n 1</span><span class="punct">&quot;).</span><span class="ident">chomp</span>

      <span class="keyword">if</span> <span class="ident">last_release</span> <span class="punct">=~</span> <span class="punct">/</span><span class="regex"><span class="expr">#{date_stamp}</span><span class="escape">\-</span>(<span class="escape">\d</span>+)</span><span class="punct">/</span>
        <span class="ident">serial</span> <span class="punct">=</span> <span class="global">$1</span><span class="punct">.</span><span class="ident">to_i</span> <span class="punct">+</span> <span class="number">1</span>
      <span class="keyword">else</span>
        <span class="ident">serial</span> <span class="punct">=</span> <span class="number">0</span> 
      <span class="keyword">end</span>

      <span class="ident">rel</span> <span class="punct">=</span> <span class="punct">(&quot;</span><span class="string">%d-%02d</span><span class="punct">&quot;</span> <span class="punct">%</span> <span class="punct">[</span><span class="ident">date_stamp</span><span class="punct">,</span> <span class="ident">serial</span><span class="punct">])</span>
      <span class="ident">rel_dir</span> <span class="punct">=</span> <span class="punct">&quot;</span><span class="string"><span class="expr">#{DEPLOY_ROOT}</span>/rels/<span class="expr">#{rel}</span></span><span class="punct">&quot;</span>

      <span class="ident">run</span> <span class="punct">&quot;</span><span class="string">sudo mkdir -p <span class="expr">#{rel_dir}</span></span><span class="punct">&quot;</span>
      <span class="ident">run</span> <span class="punct">&quot;</span><span class="string">sudo tar -xzvf /tmp/<span class="expr">#{archive}</span> -C <span class="expr">#{rel_dir}</span> &amp;&amp; rm -rf /tmp/<span class="expr">#{archive}</span></span><span class="punct">&quot;</span>
      <span class="ident">run</span> <span class="punct">&quot;</span><span class="string">sudo ln -s -f -T <span class="expr">#{rel_dir}</span> <span class="expr">#{DEPLOY_ROOT}</span>/current</span><span class="punct">&quot;</span>
      <span class="ident">restart_daemons</span>
    <span class="keyword">end</span>

    <span class="ident">desc</span> <span class="punct">&quot;</span><span class="string">Rollback to the previous release</span><span class="punct">&quot;</span>
    <span class="ident">remote_task</span> <span class="symbol">:rollback</span> <span class="keyword">do</span>
      <span class="ident">current_link</span> <span class="punct">=</span> <span class="ident">run</span><span class="punct">(&quot;</span><span class="string">ls -alF <span class="expr">#{DEPLOY_ROOT}</span> | awk '/current -&gt; .*/ { print $NF }'</span><span class="punct">&quot;).</span><span class="ident">chomp</span>
      <span class="ident">current</span> <span class="punct">=</span> <span class="constant">File</span><span class="punct">.</span><span class="ident">basename</span><span class="punct">(</span><span class="ident">current_link</span><span class="punct">)</span>
      <span class="ident">releases</span> <span class="punct">=</span> <span class="ident">run</span><span class="punct">(&quot;</span><span class="string">ls <span class="expr">#{DEPLOY_ROOT}</span>/rels | sort -r</span><span class="punct">&quot;).</span><span class="ident">split</span><span class="punct">(&quot;</span><span class="string"><span class="escape">\n</span></span><span class="punct">&quot;)</span>
      <span class="ident">previous</span> <span class="punct">=</span> <span class="ident">releases</span><span class="punct">.</span><span class="ident">find</span> <span class="punct">{|</span><span class="ident">rel</span><span class="punct">|</span> <span class="ident">current</span> <span class="punct">&gt;</span> <span class="ident">rel</span><span class="punct">}</span>
      <span class="keyword">raise</span> <span class="punct">&quot;</span><span class="string">No previous release</span><span class="punct">&quot;</span> <span class="keyword">if</span> <span class="ident">previous</span><span class="punct">.</span><span class="ident">nil?</span>
      <span class="ident">run</span> <span class="punct">&quot;</span><span class="string">sudo ln -s -f -T <span class="expr">#{DEPLOY_ROOT}</span>/rels/<span class="expr">#{previous}</span> <span class="expr">#{DEPLOY_ROOT}</span>/current</span><span class="punct">&quot;</span>
      <span class="ident">restart_daemons</span>
      <span class="ident">puts</span> <span class="punct">&quot;</span><span class="string">Moved to <span class="expr">#{previous}</span></span><span class="punct">&quot;</span>
    <span class="keyword">end</span>

    <span class="ident">desc</span> <span class="punct">&quot;</span><span class="string">Rollforward to the next release</span><span class="punct">&quot;</span>
    <span class="ident">remote_task</span> <span class="symbol">:rollforward</span> <span class="keyword">do</span>
      <span class="ident">current_link</span> <span class="punct">=</span> <span class="ident">run</span><span class="punct">(&quot;</span><span class="string">ls -alF <span class="expr">#{DEPLOY_ROOT}</span> | awk '/current -&gt; .*/ { print $NF }'</span><span class="punct">&quot;).</span><span class="ident">chomp</span>
      <span class="ident">current</span> <span class="punct">=</span> <span class="constant">File</span><span class="punct">.</span><span class="ident">basename</span><span class="punct">(</span><span class="ident">current_link</span><span class="punct">)</span>
      <span class="ident">releases</span> <span class="punct">=</span> <span class="ident">run</span><span class="punct">(&quot;</span><span class="string">ls <span class="expr">#{DEPLOY_ROOT}</span>/rels | sort -r</span><span class="punct">&quot;).</span><span class="ident">split</span><span class="punct">(&quot;</span><span class="string"><span class="escape">\n</span></span><span class="punct">&quot;)</span>
      <span class="ident">next_rel</span> <span class="punct">=</span> <span class="ident">releases</span><span class="punct">.</span><span class="ident">find</span> <span class="punct">{|</span><span class="ident">rel</span><span class="punct">|</span> <span class="ident">current</span> <span class="punct">&lt;</span> <span class="ident">rel</span><span class="punct">}</span>
      <span class="keyword">raise</span> <span class="punct">&quot;</span><span class="string">No next release</span><span class="punct">&quot;</span> <span class="keyword">if</span> <span class="ident">next_rel</span><span class="punct">.</span><span class="ident">nil?</span>
      <span class="ident">run</span> <span class="punct">&quot;</span><span class="string">sudo ln -s -f -T <span class="expr">#{DEPLOY_ROOT}</span>/rels/<span class="expr">#{next_rel}</span> <span class="expr">#{DEPLOY_ROOT}</span>/current</span><span class="punct">&quot;</span>
      <span class="ident">restart_daemons</span>
      <span class="ident">puts</span> <span class="punct">&quot;</span><span class="string">Moved to <span class="expr">#{next_rel}</span></span><span class="punct">&quot;</span>
    <span class="keyword">end</span>
  <span class="keyword">end</span>
<span class="keyword">rescue</span> <span class="constant">LoadError</span> <span class="punct">=&gt;</span> <span class="ident">e</span>
  <span class="ident">puts</span> <span class="punct">&quot;</span><span class="string">NOTE: Install vlad to get Kevin's awesome deployment tasks</span><span class="punct">&quot;</span>
<span class="keyword">end</span></code></pre></div>

  <a href="/articles/2008/04/05/really-simple-git-deployment-with-vlad">Read more...</a>
  <p class="meta">Posted in <a href="/articles/category/ruby" rel="tag">Ruby</a>, <a href="/articles/category/hacks" rel="tag">Hacks</a>&nbsp;<strong>|</strong>&nbsp;<a href="/articles/2008/04/05/really-simple-git-deployment-with-vlad#comments">4 comments</a></p>
  </div>
 <div class="post">
  <h2><a href="/articles/2007/11/27/depth-first-search">Depth First Search</a></h2>
<p class="auth">Posted by kev
<span class="typo_date" title="Tue, 27 Nov 2007 19:24:00 GMT">Tue, 27 Nov 2007 19:24:00 GMT</span></p>
<p>Because I hadn&#8217;t implemented DFS in Ruby before, and it&#8217;s just so damn easy.</p>

<p><strong>Update:</strong> Phillip rightly pointed out in the comments that with the yield at the end, it&#8217;s actually post-order traversal, not depth first search per se.</p>

<div class="typocode"><pre><code class="typocode_ruby "><span class="keyword">class </span><span class="class">TreeNode</span>
  <span class="ident">attr_reader</span> <span class="symbol">:name</span>

  <span class="keyword">def </span><span class="method">initialize</span><span class="punct">(</span><span class="ident">name</span><span class="punct">)</span>
    <span class="attribute">@name</span> <span class="punct">=</span> <span class="ident">name</span>
    <span class="attribute">@children</span> <span class="punct">=</span> <span class="punct">[]</span>
  <span class="keyword">end</span>

  <span class="keyword">def </span><span class="method">add_node</span><span class="punct">(</span><span class="ident">node</span><span class="punct">)</span>
    <span class="attribute">@children</span> <span class="punct">&lt;&lt;</span> <span class="ident">node</span>
  <span class="keyword">end</span>

  <span class="keyword">def </span><span class="method">each_depth_first</span>
    <span class="attribute">@children</span><span class="punct">.</span><span class="ident">each</span> <span class="keyword">do</span> <span class="punct">|</span><span class="ident">child</span><span class="punct">|</span>
      <span class="ident">child</span><span class="punct">.</span><span class="ident">each_depth_first</span> <span class="keyword">do</span> <span class="punct">|</span><span class="ident">c</span><span class="punct">|</span>
        <span class="keyword">yield</span> <span class="ident">c</span>
      <span class="keyword">end</span>
    <span class="keyword">end</span>

    <span class="keyword">yield</span> <span class="constant">self</span>
  <span class="keyword">end</span>
<span class="keyword">end</span>

<span class="comment"># root  -  a  -  b</span>
<span class="comment">#   \       \ </span>
<span class="comment">#    e - f   c  -  d</span>
<span class="comment">#     \</span>
<span class="comment">#      g</span>

<span class="ident">root</span> <span class="punct">=</span> <span class="constant">TreeNode</span><span class="punct">.</span><span class="ident">new</span><span class="punct">(&quot;</span><span class="string">root</span><span class="punct">&quot;)</span>
<span class="ident">root</span><span class="punct">.</span><span class="ident">add_node</span><span class="punct">(</span> <span class="ident">a</span> <span class="punct">=</span> <span class="constant">TreeNode</span><span class="punct">.</span><span class="ident">new</span><span class="punct">(&quot;</span><span class="string">a</span><span class="punct">&quot;))</span>
<span class="ident">a</span><span class="punct">.</span><span class="ident">add_node</span><span class="punct">(</span> <span class="ident">b</span> <span class="punct">=</span> <span class="constant">TreeNode</span><span class="punct">.</span><span class="ident">new</span><span class="punct">(&quot;</span><span class="string">b</span><span class="punct">&quot;))</span>
<span class="ident">a</span><span class="punct">.</span><span class="ident">add_node</span><span class="punct">(</span> <span class="ident">c</span> <span class="punct">=</span> <span class="constant">TreeNode</span><span class="punct">.</span><span class="ident">new</span><span class="punct">(&quot;</span><span class="string">c</span><span class="punct">&quot;))</span>
<span class="ident">c</span><span class="punct">.</span><span class="ident">add_node</span><span class="punct">(</span> <span class="ident">d</span> <span class="punct">=</span> <span class="constant">TreeNode</span><span class="punct">.</span><span class="ident">new</span><span class="punct">(&quot;</span><span class="string">d</span><span class="punct">&quot;))</span>
<span class="ident">root</span><span class="punct">.</span><span class="ident">add_node</span><span class="punct">(</span><span class="ident">e</span> <span class="punct">=</span> <span class="constant">TreeNode</span><span class="punct">.</span><span class="ident">new</span><span class="punct">(&quot;</span><span class="string">e</span><span class="punct">&quot;))</span>
<span class="ident">e</span><span class="punct">.</span><span class="ident">add_node</span><span class="punct">(</span><span class="ident">f</span> <span class="punct">=</span> <span class="constant">TreeNode</span><span class="punct">.</span><span class="ident">new</span><span class="punct">(&quot;</span><span class="string">f</span><span class="punct">&quot;))</span>
<span class="ident">e</span><span class="punct">.</span><span class="ident">add_node</span><span class="punct">(</span><span class="ident">g</span> <span class="punct">=</span> <span class="constant">TreeNode</span><span class="punct">.</span><span class="ident">new</span><span class="punct">(&quot;</span><span class="string">g</span><span class="punct">&quot;))</span>

<span class="ident">root</span><span class="punct">.</span><span class="ident">each_depth_first</span> <span class="keyword">do</span> <span class="punct">|</span><span class="ident">child</span><span class="punct">|</span>
  <span class="ident">puts</span> <span class="ident">child</span><span class="punct">.</span><span class="ident">name</span>
<span class="keyword">end</span>

<span class="comment"># produces:</span>
<span class="comment"># b</span>
<span class="comment"># d</span>
<span class="comment"># c</span>
<span class="comment"># a</span>
<span class="comment"># f</span>
<span class="comment"># g</span>
<span class="comment"># e</span>
<span class="comment"># root</span></code></pre></div>

  
  <p class="meta">Posted in <a href="/articles/category/ruby" rel="tag">Ruby</a>, <a href="/articles/category/hacks" rel="tag">Hacks</a>&nbsp;<strong>|</strong>&nbsp;<a href="/articles/2007/11/27/depth-first-search#comments">3 comments</a></p>
  </div>
 <div class="post">
  <h2><a href="/articles/2007/10/29/forwardstoenumerable">ForwardsToEnumerable</a></h2>
<p class="auth">Posted by kev
<span class="typo_date" title="Tue, 30 Oct 2007 01:16:00 GMT">Tue, 30 Oct 2007 01:16:00 GMT</span></p>
<p>I haven&#8217;t yet decided if this is a good idea or not.</p>

<p>I&#8217;ll be at RubyConf this weekend. Say hello, if you get the urge.</p>

<div class="typocode"><pre><code class="typocode_ruby "><span class="ident">require</span> <span class="punct">&quot;</span><span class="string">test/unit</span><span class="punct">&quot;</span>
<span class="ident">require</span> <span class="punct">'</span><span class="string">rubygems</span><span class="punct">'</span>
<span class="ident">require</span> <span class="punct">'</span><span class="string">mocha</span><span class="punct">'</span>
<span class="ident">require</span> <span class="punct">'</span><span class="string">stubba</span><span class="punct">'</span>

<span class="keyword">module </span><span class="module">ForwardsToEnumerable</span>
  <span class="keyword">def </span><span class="method">self.included</span><span class="punct">(</span><span class="ident">klass</span><span class="punct">)</span>
    <span class="ident">klass</span><span class="punct">.</span><span class="ident">extend</span><span class="punct">(</span><span class="constant">ClassMethods</span><span class="punct">)</span>
  <span class="keyword">end</span>

  <span class="keyword">module </span><span class="module">ClassMethods</span>
    <span class="keyword">def </span><span class="method">forward_to_enum</span><span class="punct">(</span><span class="ident">instance_var</span><span class="punct">,</span> <span class="punct">*</span><span class="ident">meths</span><span class="punct">)</span>
      <span class="ident">meths</span><span class="punct">.</span><span class="ident">each</span> <span class="keyword">do</span> <span class="punct">|</span><span class="ident">meth</span><span class="punct">|</span>
        <span class="ident">class_eval</span> <span class="punct">&lt;&lt;-</span><span class="constant">METH</span><span class="string">
          def <span class="expr">#{meth}</span>(*args, &amp;block)
            <span class="expr">#{instance_var.to_s}</span>.each do |i|
              i.send(:<span class="expr">#{meth}</span>, *args, &amp;block)
            end
          end
</span><span class="constant">        METH</span>
      <span class="keyword">end</span>
    <span class="keyword">end</span>
  <span class="keyword">end</span>

<span class="keyword">end</span>

<span class="keyword">class </span><span class="class">ForwardsToArray</span>
  <span class="ident">include</span> <span class="constant">ForwardsToEnumerable</span>
  <span class="ident">forward_to_enum</span> <span class="symbol">:@array</span><span class="punct">,</span> <span class="symbol">:foo</span><span class="punct">,</span> <span class="symbol">:bar</span><span class="punct">,</span> <span class="symbol">:baz</span>

  <span class="keyword">def </span><span class="method">initialize</span><span class="punct">(</span><span class="ident">array</span><span class="punct">)</span>
    <span class="attribute">@array</span> <span class="punct">=</span> <span class="ident">array</span>
  <span class="keyword">end</span>
<span class="keyword">end</span>

<span class="keyword">class </span><span class="class">TestForwardsToArray</span> <span class="punct">&lt;</span> <span class="constant">Test</span><span class="punct">::</span><span class="constant">Unit</span><span class="punct">::</span><span class="constant">TestCase</span>
  <span class="keyword">def </span><span class="method">test_forward_to_enum</span>
    <span class="ident">items</span> <span class="punct">=</span> <span class="punct">[</span><span class="ident">mock</span><span class="punct">(),</span> <span class="ident">mock</span><span class="punct">(),</span> <span class="ident">mock</span><span class="punct">()]</span>
    <span class="ident">items</span><span class="punct">.</span><span class="ident">each</span> <span class="punct">{|</span><span class="ident">i</span><span class="punct">|</span> <span class="ident">i</span><span class="punct">.</span><span class="ident">expects</span><span class="punct">(</span><span class="symbol">:foo</span><span class="punct">);</span> <span class="ident">i</span><span class="punct">.</span><span class="ident">expects</span><span class="punct">(</span><span class="symbol">:bar</span><span class="punct">);</span> <span class="ident">i</span><span class="punct">.</span><span class="ident">expects</span><span class="punct">(</span><span class="symbol">:baz</span><span class="punct">)</span> <span class="punct">}</span>
    <span class="ident">f</span> <span class="punct">=</span> <span class="constant">ForwardsToArray</span><span class="punct">.</span><span class="ident">new</span><span class="punct">(</span><span class="ident">items</span><span class="punct">)</span>
    <span class="ident">f</span><span class="punct">.</span><span class="ident">foo</span>
    <span class="ident">f</span><span class="punct">.</span><span class="ident">bar</span>
    <span class="ident">f</span><span class="punct">.</span><span class="ident">baz</span>
  <span class="keyword">end</span>
<span class="keyword">end</span></code></pre></div>

  
  <p class="meta">Posted in <a href="/articles/category/ruby" rel="tag">Ruby</a>, <a href="/articles/category/hacks" rel="tag">Hacks</a>&nbsp;<strong>|</strong>&nbsp;<a href="/articles/2007/10/29/forwardstoenumerable#comments">no comments</a></p>
  </div>
 <div class="post">
  <h2><a href="/articles/2007/09/21/rpm-version-comparison-revisited">RPM Version Comparison Revisited</a></h2>
<p class="auth">Posted by kev
<span class="typo_date" title="Fri, 21 Sep 2007 20:21:00 GMT">Fri, 21 Sep 2007 20:21:00 GMT</span></p>
<div class="typocode"><pre><code class="typocode_ruby "><span class="comment"># Equivalent to rpmvercmp in librpm, eccentricities and all</span>
<span class="keyword">def </span><span class="method">&lt;=&gt;</span><span class="punct">(</span><span class="ident">other</span><span class="punct">)</span>
  <span class="keyword">return</span> <span class="number">0</span> <span class="keyword">if</span> <span class="constant">self</span><span class="punct">.</span><span class="ident">version</span> <span class="punct">==</span> <span class="ident">other</span><span class="punct">.</span><span class="ident">version</span> <span class="keyword">and</span> <span class="constant">self</span><span class="punct">.</span><span class="ident">rel</span> <span class="punct">==</span> <span class="ident">other</span><span class="punct">.</span><span class="ident">rel</span>

  <span class="ident">versions</span> <span class="punct">=</span> <span class="constant">self</span><span class="punct">.</span><span class="ident">version</span><span class="punct">.</span><span class="ident">split</span><span class="punct">(/</span><span class="regex">[^[:alnum:]]</span><span class="punct">/).</span><span class="ident">push</span> <span class="constant">self</span><span class="punct">.</span><span class="ident">rel</span>
  <span class="ident">other_versions</span> <span class="punct">=</span> <span class="ident">other</span><span class="punct">.</span><span class="ident">version</span><span class="punct">.</span><span class="ident">split</span><span class="punct">(/</span><span class="regex">[^[:alnum:]]</span><span class="punct">/).</span><span class="ident">push</span> <span class="ident">other</span><span class="punct">.</span><span class="ident">rel</span>

  <span class="keyword">return</span>  <span class="number">1</span> <span class="keyword">if</span> <span class="ident">versions</span><span class="punct">.</span><span class="ident">size</span> <span class="punct">&gt;</span> <span class="ident">other_versions</span><span class="punct">.</span><span class="ident">size</span>
  <span class="keyword">return</span> <span class="punct">-</span><span class="number">1</span> <span class="keyword">if</span> <span class="ident">versions</span><span class="punct">.</span><span class="ident">size</span> <span class="punct">&lt;</span> <span class="ident">other_versions</span><span class="punct">.</span><span class="ident">size</span>

  <span class="ident">versions</span><span class="punct">.</span><span class="ident">size</span><span class="punct">.</span><span class="ident">times</span> <span class="keyword">do</span> <span class="punct">|</span><span class="ident">n</span><span class="punct">|</span>
    <span class="keyword">if</span> <span class="ident">versions</span><span class="punct">[</span><span class="ident">n</span><span class="punct">]</span> <span class="punct">=~</span> <span class="punct">/</span><span class="regex">[^<span class="escape">\d</span>]</span><span class="punct">/</span> <span class="punct">&amp;&amp;</span> <span class="ident">other_versions</span><span class="punct">[</span><span class="ident">n</span><span class="punct">]</span> <span class="punct">=~</span> <span class="punct">/</span><span class="regex">[^<span class="escape">\d</span>]</span><span class="punct">/</span>
      <span class="ident">comparison</span> <span class="punct">=</span> <span class="punct">(</span><span class="ident">versions</span><span class="punct">[</span><span class="ident">n</span><span class="punct">]</span> <span class="punct">&lt;=&gt;</span> <span class="ident">other_versions</span><span class="punct">[</span><span class="ident">n</span><span class="punct">])</span>
    <span class="keyword">elsif</span> <span class="ident">versions</span><span class="punct">[</span><span class="ident">n</span><span class="punct">]</span> <span class="punct">!~</span> <span class="punct">/</span><span class="regex">[^<span class="escape">\d</span>]</span><span class="punct">/</span> <span class="punct">&amp;&amp;</span> <span class="ident">other_versions</span><span class="punct">[</span><span class="ident">n</span><span class="punct">]</span> <span class="punct">!~</span> <span class="punct">/</span><span class="regex">[^<span class="escape">\d</span>]</span><span class="punct">/</span>
      <span class="ident">comparison</span> <span class="punct">=</span> <span class="punct">(</span><span class="ident">versions</span><span class="punct">[</span><span class="ident">n</span><span class="punct">].</span><span class="ident">to_i</span> <span class="punct">&lt;=&gt;</span> <span class="ident">other_versions</span><span class="punct">[</span><span class="ident">n</span><span class="punct">].</span><span class="ident">to_i</span><span class="punct">)</span>
    <span class="keyword">else</span>
      <span class="ident">comparison</span> <span class="punct">=</span> <span class="punct">-</span><span class="number">1</span>
    <span class="keyword">end</span>
    <span class="keyword">return</span> <span class="ident">comparison</span> <span class="keyword">unless</span> <span class="ident">comparison</span><span class="punct">.</span><span class="ident">zero?</span>
  <span class="keyword">end</span>

  <span class="keyword">return</span> <span class="number">0</span> 
<span class="keyword">end</span></code></pre></div>

<p>Original version sort was <a href="http://glu.ttono.us/articles/2007/03/16/sorting-versions-is-hard">here</a>.</p>

  
  <p class="meta">Posted in <a href="/articles/category/ruby" rel="tag">Ruby</a>, <a href="/articles/category/hacks" rel="tag">Hacks</a>&nbsp;<strong>|</strong>&nbsp;<a href="/articles/2007/09/21/rpm-version-comparison-revisited#comments">no comments</a></p>
  </div>
 <div class="post">
  <h2><a href="/articles/2007/09/19/3-rpm-version-comparison"><3 rpm version comparison</a></h2>
<p class="auth">Posted by kev
<span class="typo_date" title="Wed, 19 Sep 2007 21:19:00 GMT">Wed, 19 Sep 2007 21:19:00 GMT</span></p>
<div class="typocode"><pre><code class="typocode_c ">/* take care of the case where the two version segments are */
/* different types: one numeric and one alpha */
if (one == str1) return -1; /* arbitrary */
if (two == str2) return -1;</code></pre></div>

<p>&#8211; rpm/lib/misc.c</p>

  
  <p class="meta">Posted in <a href="/articles/category/musings" rel="tag">Musings</a>, <a href="/articles/category/hacks" rel="tag">Hacks</a>&nbsp;<strong>|</strong>&nbsp;<a href="/articles/2007/09/19/3-rpm-version-comparison#comments">no comments</a></p>
  </div>
 <div class="post">
  <h2><a href="/articles/2007/09/19/git-quickserver">git-quickserver</a></h2>
<p class="auth">Posted by kev
<span class="typo_date" title="Wed, 19 Sep 2007 07:35:00 GMT">Wed, 19 Sep 2007 07:35:00 GMT</span></p>
<div class="typocode"><div class="codetitle">/usr/bin/git-quickserver</div><pre><code class="typocode_default ">#!/bin/sh

git daemon --verbose --reuseaddr --export-all --base-path='.'</code></pre></div>

<div class="typocode"><pre><code class="typocode_default ">sisyphus:~/code/god kev$ git quickserver</code></pre></div>

<div class="typocode"><pre><code class="typocode_default ">sisyphus:~ kev$ git clone git://localhost/ somethin
Initialized empty Git repository in /Users/kev/somethin/.git/
remote: Generating pack...
remote: Done counting 1469 objects.
remote: Deltifying 1469 objects...
 100% (1469/1remote: 469) done
Indexing 1469 objects...
remote: Total 1469 (delta 905), reused 1461 (delta 902)
 100% (1469/1469) done
Resolving 905 deltas...
 100% (905/905) done</code></pre></div>

<p>(via <a href="http://kirindave.tumblr.com/">KirinDave</a>)</p>

  
  <p class="meta">Posted in <a href="/articles/category/hacks" rel="tag">Hacks</a>&nbsp;<strong>|</strong>&nbsp;<a href="/articles/2007/09/19/git-quickserver#comments">no comments</a></p>
  </div>
 <div class="post">
  <h2><a href="/articles/2007/05/06/growl-based-bonjour-chat-with-channels-in-150-lines">Growl-Based Bonjour Chat with Channels in 150 Lines</a></h2>
<p class="auth">Posted by kev
<span class="typo_date" title="Sun, 06 May 2007 10:58:00 GMT">Sun, 06 May 2007 10:58:00 GMT</span></p>
<p>One of the many awesome things about working at <a href="http://powerset.com">Powerset</a> is the guys I get to hack with. Tonight, my buddies <a href="http://rubyisawesome.com">Tom Preston-Werner</a>, <a href="http://vandev.com">Chris Van Pelt</a>, and I were feeling whimsical. Full source, with quicksilver hook and startup scripts can be found <a href="http://code.google.com/p/jakl/">here</a>, but this is the meat:</p>

<div class="typocode"><div class="codetitle">growl_handler.rb</div><pre><code class="typocode_ruby "><span class="ident">require</span> <span class="punct">'</span><span class="string">rubygems</span><span class="punct">'</span>
<span class="ident">require</span> <span class="punct">'</span><span class="string">ruby-growl</span><span class="punct">'</span>

<span class="keyword">module </span><span class="module">Jakl</span>
  <span class="keyword">class </span><span class="class">GrowlHandler</span>
    <span class="keyword">def </span><span class="method">initialize</span>
      <span class="keyword">if</span> `<span class="ident">which</span> <span class="ident">growlnotify`</span> <span class="punct">=~</span> <span class="punct">/</span><span class="regex">^no .+ in</span><span class="punct">/</span>
        <span class="attribute">@strategy</span> <span class="punct">=</span> <span class="symbol">:ruby</span>
        <span class="attribute">@growl</span> <span class="punct">=</span> <span class="constant">Growl</span><span class="punct">.</span><span class="ident">new</span><span class="punct">(&quot;</span><span class="string">localhost</span><span class="punct">&quot;,</span> <span class="punct">&quot;</span><span class="string">jakl</span><span class="punct">&quot;,</span> <span class="punct">[&quot;</span><span class="string">jakl_message</span><span class="punct">&quot;])</span>
      <span class="keyword">else</span>
        <span class="attribute">@strategy</span> <span class="punct">=</span> <span class="symbol">:command</span>
      <span class="keyword">end</span>
    <span class="keyword">end</span>

    <span class="keyword">def </span><span class="method">notify</span><span class="punct">(</span><span class="ident">group</span><span class="punct">,</span> <span class="ident">name</span><span class="punct">,</span> <span class="ident">message</span><span class="punct">)</span>
      <span class="keyword">case</span> <span class="attribute">@strategy</span>
        <span class="keyword">when</span> <span class="symbol">:command</span>
          <span class="ident">img_path</span> <span class="punct">=</span> <span class="constant">File</span><span class="punct">.</span><span class="ident">join</span><span class="punct">(</span><span class="constant">File</span><span class="punct">.</span><span class="ident">dirname</span><span class="punct">(</span><span class="constant">__FILE__</span><span class="punct">),</span> <span class="punct">'</span><span class="string">../../assets/jakl.png</span><span class="punct">')</span>
          `<span class="ident">growlnotify</span> <span class="punct">-</span><span class="ident">n</span> <span class="ident">jakl</span> <span class="punct">--</span><span class="ident">image</span> <span class="comment">#{img_path} -m '#{message}' '#{name} (#{group})'`</span>
        <span class="keyword">when</span> <span class="symbol">:ruby</span>
          <span class="attribute">@growl</span><span class="punct">.</span><span class="ident">notify</span><span class="punct">(&quot;</span><span class="string">jakl_message</span><span class="punct">&quot;,</span> <span class="punct">&quot;</span><span class="string"><span class="expr">#{name}</span> (<span class="expr">#{group}</span>)</span><span class="punct">&quot;,</span> <span class="ident">message</span><span class="punct">)</span>
        <span class="keyword">else</span>
          <span class="keyword">raise</span> <span class="constant">StandardError</span><span class="punct">.</span><span class="ident">new</span><span class="punct">('</span><span class="string">Invalid strategy</span><span class="punct">')</span>
      <span class="keyword">end</span>
    <span class="keyword">end</span>
  <span class="keyword">end</span>
<span class="keyword">end</span></code></pre></div>

<div class="typocode"><div class="codetitle">client.rb</div><pre><code class="typocode_ruby "><span class="ident">require</span> <span class="punct">'</span><span class="string">rubygems</span><span class="punct">'</span>
<span class="ident">require</span> <span class="punct">'</span><span class="string">net/dns/mdns-sd</span><span class="punct">'</span>
<span class="ident">require</span> <span class="punct">'</span><span class="string">base64</span><span class="punct">'</span>

<span class="keyword">module </span><span class="module">Jakl</span>
  <span class="keyword">class </span><span class="class">Client</span>
    <span class="constant">DNSSD</span> <span class="punct">=</span> <span class="constant">Net</span><span class="punct">::</span><span class="constant">DNS</span><span class="punct">::</span><span class="constant">MDNSSD</span>

    <span class="attribute">@@debug</span> <span class="punct">=</span> <span class="constant">false</span>

    <span class="keyword">def </span><span class="method">self.debug=</span><span class="punct">(</span><span class="ident">value</span><span class="punct">)</span>
      <span class="attribute">@@debug</span> <span class="punct">=</span> <span class="ident">value</span>
    <span class="keyword">end</span>

    <span class="keyword">def </span><span class="method">self.debug</span>
      <span class="attribute">@@debug</span>
    <span class="keyword">end</span>

    <span class="keyword">def </span><span class="method">initialize</span><span class="punct">(</span><span class="ident">options</span><span class="punct">={})</span>
      <span class="ident">default_options</span> <span class="punct">=</span> <span class="punct">{</span>
        <span class="symbol">:default_recv</span> <span class="punct">=&gt;</span> <span class="punct">&quot;</span><span class="string">jakl</span><span class="punct">&quot;,</span> 
        <span class="symbol">:timeout</span> <span class="punct">=&gt;</span> <span class="number">2</span><span class="punct">,</span> 
        <span class="symbol">:login</span> <span class="punct">=&gt;</span> <span class="constant">ENV</span><span class="punct">['</span><span class="string">USER</span><span class="punct">']</span>
      <span class="punct">}</span>
      <span class="attribute">@options</span> <span class="punct">=</span> <span class="ident">default_options</span><span class="punct">.</span><span class="ident">merge</span><span class="punct">(</span><span class="ident">options</span><span class="punct">)</span>
    <span class="keyword">end</span>

    <span class="keyword">def </span><span class="method">send</span><span class="punct">(</span><span class="ident">message</span><span class="punct">,</span> <span class="ident">recv</span><span class="punct">=</span><span class="constant">nil</span><span class="punct">)</span>
      <span class="ident">recv</span> <span class="punct">||=</span> <span class="attribute">@options</span><span class="punct">[</span><span class="symbol">:default_recv</span><span class="punct">]</span>
      <span class="ident">recv</span> <span class="punct">=</span> <span class="ident">recv</span><span class="punct">.</span><span class="ident">split</span><span class="punct">('</span><span class="string">,</span><span class="punct">').</span><span class="ident">collect</span> <span class="punct">{|</span><span class="ident">g</span><span class="punct">|</span> <span class="ident">g</span><span class="punct">.</span><span class="ident">strip</span> <span class="punct">}</span>
      <span class="ident">puts</span> <span class="punct">&quot;</span><span class="string">Sending: '<span class="expr">#{message}</span>' to '<span class="expr">#{recv.join(',')}</span>'</span><span class="punct">&quot;</span> <span class="keyword">if</span> <span class="attribute">@@debug</span>

      <span class="ident">find_recipients</span> <span class="punct">=</span> <span class="constant">DNSSD</span><span class="punct">.</span><span class="ident">resolve</span><span class="punct">('</span><span class="string">jakl</span><span class="punct">',</span> <span class="punct">'</span><span class="string">_jakl._tcp</span><span class="punct">')</span> <span class="keyword">do</span> <span class="punct">|</span><span class="ident">r</span><span class="punct">|</span>
        <span class="ident">puts</span> <span class="punct">&quot;</span><span class="string">Found jakl service at <span class="expr">#{r.target}</span></span><span class="punct">&quot;</span> <span class="keyword">if</span> <span class="attribute">@@debug</span>
        <span class="ident">recvs</span> <span class="punct">=</span> <span class="ident">r</span><span class="punct">.</span><span class="ident">text_record</span><span class="punct">['</span><span class="string">recvs</span><span class="punct">'].</span><span class="ident">split</span><span class="punct">('</span><span class="string">,</span><span class="punct">').</span><span class="ident">collect</span> <span class="punct">{|</span><span class="ident">g</span><span class="punct">|</span> <span class="ident">g</span><span class="punct">.</span><span class="ident">strip</span> <span class="punct">}</span>
        <span class="ident">puts</span> <span class="punct">&quot;</span><span class="string">  responds to: <span class="expr">#{recvs.join(', ')}</span></span><span class="punct">&quot;</span>  <span class="keyword">if</span> <span class="attribute">@@debug</span>

        <span class="keyword">if</span> <span class="punct">(</span><span class="ident">succ_recvs</span> <span class="punct">=</span> <span class="ident">recvs</span> <span class="punct">&amp;</span> <span class="ident">recv</span><span class="punct">).</span><span class="ident">any?</span>
          <span class="ident">puts</span> <span class="punct">&quot;</span><span class="string">Sending to: <span class="expr">#{r.target}</span>:<span class="expr">#{r.port}</span></span><span class="punct">&quot;</span> <span class="keyword">if</span> <span class="attribute">@@debug</span>

          <span class="comment"># B64 Encoded NAME;GROUP;MESSAGE</span>
          <span class="ident">data</span> <span class="punct">=</span> <span class="punct">[</span><span class="attribute">@options</span><span class="punct">[</span><span class="symbol">:login</span><span class="punct">],</span> <span class="ident">succ_recvs</span><span class="punct">.</span><span class="ident">first</span><span class="punct">,</span> <span class="ident">message</span><span class="punct">].</span><span class="ident">map</span> <span class="keyword">do</span> <span class="punct">|</span><span class="ident">s</span><span class="punct">|</span> 
            <span class="constant">Base64</span><span class="punct">.</span><span class="ident">encode64</span><span class="punct">(</span><span class="ident">s</span><span class="punct">)</span>
          <span class="keyword">end</span><span class="punct">.</span><span class="ident">join</span><span class="punct">('</span><span class="string">;</span><span class="punct">')</span>
          <span class="constant">TCPSocket</span><span class="punct">.</span><span class="ident">new</span><span class="punct">(</span><span class="ident">r</span><span class="punct">.</span><span class="ident">target</span><span class="punct">,</span> <span class="ident">r</span><span class="punct">.</span><span class="ident">port</span><span class="punct">).</span><span class="ident">send</span><span class="punct">(</span><span class="ident">data</span><span class="punct">,</span> <span class="number">0</span><span class="punct">)</span>
        <span class="keyword">end</span>
      <span class="keyword">end</span>

      <span class="ident">sleep</span> <span class="attribute">@options</span><span class="punct">[</span><span class="symbol">:timeout</span><span class="punct">]</span>
      <span class="ident">find_recipients</span><span class="punct">.</span><span class="ident">stop</span>
    <span class="keyword">end</span>
  <span class="keyword">end</span>
<span class="keyword">end</span></code></pre></div>

<div class="typocode"><div class="codetitle">server.rb</div><pre><code class="typocode_ruby "><span class="ident">require</span> <span class="punct">'</span><span class="string">rubygems</span><span class="punct">'</span>
<span class="ident">require</span> <span class="punct">'</span><span class="string">eventmachine</span><span class="punct">'</span>
<span class="ident">require</span> <span class="punct">'</span><span class="string">net/dns/mdns-sd</span><span class="punct">'</span>
<span class="ident">require</span> <span class="punct">'</span><span class="string">base64</span><span class="punct">'</span>

<span class="global">$:</span><span class="punct">.</span><span class="ident">unshift</span> <span class="constant">File</span><span class="punct">.</span><span class="ident">dirname</span><span class="punct">(</span><span class="constant">__FILE__</span><span class="punct">)</span>
<span class="ident">require</span> <span class="punct">'</span><span class="string">growl_handler</span><span class="punct">'</span>

<span class="keyword">module </span><span class="module">JaklEventServer</span>
  <span class="keyword">def </span><span class="method">receive_data</span><span class="punct">(</span><span class="ident">data</span><span class="punct">)</span>
    <span class="comment"># B64 Encoded NAME;GROUP;MESSAGE</span>
    <span class="ident">name</span><span class="punct">,</span> <span class="ident">recv</span><span class="punct">,</span> <span class="ident">message</span> <span class="punct">=</span> <span class="ident">data</span><span class="punct">.</span><span class="ident">split</span><span class="punct">('</span><span class="string">;</span><span class="punct">').</span><span class="ident">map</span> <span class="punct">{|</span><span class="ident">s</span><span class="punct">|</span> <span class="constant">Base64</span><span class="punct">.</span><span class="ident">decode64</span><span class="punct">(</span><span class="ident">s</span><span class="punct">)</span> <span class="punct">}</span>
    <span class="constant">Jakl</span><span class="punct">::</span><span class="constant">GrowlHandler</span><span class="punct">.</span><span class="ident">new</span><span class="punct">.</span><span class="ident">notify</span><span class="punct">(</span><span class="ident">recv</span><span class="punct">,</span> <span class="ident">name</span><span class="punct">,</span> <span class="ident">message</span><span class="punct">)</span>
    <span class="global">$stderr</span><span class="punct">.</span><span class="ident">puts</span> <span class="punct">&quot;</span><span class="string">Name: <span class="expr">#{name}</span>, Recipient: <span class="expr">#{recv}</span>, Message: <span class="expr">#{message}</span></span><span class="punct">&quot;</span> <span class="keyword">if</span> <span class="constant">Jakl</span><span class="punct">::</span><span class="constant">Server</span><span class="punct">.</span><span class="ident">debug</span>
  <span class="keyword">end</span>
<span class="keyword">end</span>

<span class="keyword">module </span><span class="module">Jakl</span>
  <span class="keyword">class </span><span class="class">Server</span>
    <span class="constant">DNSSD</span> <span class="punct">=</span> <span class="constant">Net</span><span class="punct">::</span><span class="constant">DNS</span><span class="punct">::</span><span class="constant">MDNSSD</span>

    <span class="attribute">@@debug</span> <span class="punct">=</span> <span class="constant">false</span>

    <span class="keyword">def </span><span class="method">self.debug=</span><span class="punct">(</span><span class="ident">value</span><span class="punct">)</span>
      <span class="attribute">@@debug</span> <span class="punct">=</span> <span class="ident">value</span>
    <span class="keyword">end</span>

    <span class="keyword">def </span><span class="method">self.debug</span>
      <span class="attribute">@@debug</span>
    <span class="keyword">end</span>

    <span class="keyword">def </span><span class="method">initialize</span><span class="punct">(</span><span class="ident">options</span><span class="punct">={})</span>
      <span class="ident">default_options</span> <span class="punct">=</span> <span class="punct">{</span>
        <span class="symbol">:recvs</span> <span class="punct">=&gt;</span> <span class="punct">&quot;</span><span class="string">jakl</span><span class="punct">&quot;,</span> 
        <span class="symbol">:timeout</span> <span class="punct">=&gt;</span> <span class="number">5</span><span class="punct">,</span> 
        <span class="symbol">:login</span> <span class="punct">=&gt;</span> <span class="constant">ENV</span><span class="punct">['</span><span class="string">USER</span><span class="punct">']</span>
      <span class="punct">}</span>
      <span class="attribute">@options</span> <span class="punct">=</span> <span class="ident">default_options</span><span class="punct">.</span><span class="ident">merge</span><span class="punct">(</span><span class="ident">options</span><span class="punct">)</span>

      <span class="ident">validate_login!</span>
    <span class="keyword">end</span>

    <span class="keyword">def </span><span class="method">start</span>
      <span class="constant">DNSSD</span><span class="punct">.</span><span class="ident">register</span><span class="punct">('</span><span class="string">jakl</span><span class="punct">',</span> <span class="punct">'</span><span class="string">_jakl._tcp</span><span class="punct">',</span> <span class="punct">'</span><span class="string">local</span><span class="punct">',</span> <span class="number">4180</span><span class="punct">,</span> 
                             <span class="punct">{'</span><span class="string">recvs</span><span class="punct">'</span> <span class="punct">=&gt;</span> <span class="attribute">@options</span><span class="punct">[</span><span class="symbol">:recvs</span><span class="punct">],</span> <span class="punct">'</span><span class="string">login</span><span class="punct">'</span> <span class="punct">=&gt;</span> <span class="attribute">@options</span><span class="punct">[</span><span class="symbol">:login</span><span class="punct">]})</span>

      <span class="constant">EventMachine</span><span class="punct">::</span><span class="ident">run</span> <span class="punct">{</span>
        <span class="constant">EventMachine</span><span class="punct">::</span><span class="ident">start_server</span> <span class="punct">&quot;</span><span class="string">0.0.0.0</span><span class="punct">&quot;,</span> <span class="number">4180</span><span class="punct">,</span> <span class="constant">JaklEventServer</span>
        <span class="ident">puts</span> <span class="punct">&quot;</span><span class="string">Listening for howls on 4180</span><span class="punct">&quot;</span>
      <span class="punct">}</span>
    <span class="keyword">end</span>

    <span class="keyword">def </span><span class="method">validate_login!</span>
      <span class="comment"># Yeah, I know there's a race condition here. So it goes.</span>
      <span class="ident">name_validation</span> <span class="punct">=</span> <span class="constant">DNSSD</span><span class="punct">.</span><span class="ident">resolve</span><span class="punct">('</span><span class="string">jakl</span><span class="punct">',</span> <span class="punct">'</span><span class="string">_jakl._tcp</span><span class="punct">')</span> <span class="keyword">do</span> <span class="punct">|</span><span class="ident">r</span><span class="punct">|</span>
        <span class="keyword">if</span> <span class="punct">[</span><span class="ident">r</span><span class="punct">.</span><span class="ident">text_record</span><span class="punct">['</span><span class="string">login</span><span class="punct">'],</span> 
            <span class="ident">r</span><span class="punct">.</span><span class="ident">text_record</span><span class="punct">['</span><span class="string">recvs</span><span class="punct">'].</span><span class="ident">split</span><span class="punct">('</span><span class="string">,</span><span class="punct">')].</span><span class="ident">flatten</span><span class="punct">.</span><span class="ident">include?</span> <span class="attribute">@options</span><span class="punct">[</span><span class="symbol">:login</span><span class="punct">]</span>
          <span class="ident">puts</span> <span class="punct">&quot;</span><span class="string">The name <span class="expr">#{@options[:login]}</span> is already taken. Sorry :<span class="escape">\\</span></span><span class="punct">&quot;</span>
          <span class="ident">exit</span> <span class="number">1</span>
        <span class="keyword">end</span>
      <span class="keyword">end</span>

      <span class="comment"># Add username to recvs</span>
      <span class="attribute">@options</span><span class="punct">[</span><span class="symbol">:recvs</span><span class="punct">]</span> <span class="punct">=</span> <span class="punct">[</span><span class="attribute">@options</span><span class="punct">[</span><span class="symbol">:recvs</span><span class="punct">].</span><span class="ident">split</span><span class="punct">('</span><span class="string">,</span><span class="punct">')</span> <span class="punct">&lt;&lt;</span> <span class="attribute">@options</span><span class="punct">[</span><span class="symbol">:login</span><span class="punct">]].</span><span class="ident">join</span><span class="punct">('</span><span class="string">,</span><span class="punct">')</span>

      <span class="comment"># Wait for resolv thread to come back</span>
      <span class="ident">sleep</span> <span class="number">3</span>
      <span class="ident">name_validation</span><span class="punct">.</span><span class="ident">stop</span>
    <span class="keyword">end</span>
  <span class="keyword">end</span>
<span class="keyword">end</span></code></pre></div>

  
  <p class="meta">Posted in <a href="/articles/category/ruby" rel="tag">Ruby</a>, <a href="/articles/category/hacks" rel="tag">Hacks</a>&nbsp;<strong>|</strong>&nbsp;<a href="/articles/2007/05/06/growl-based-bonjour-chat-with-channels-in-150-lines#comments">no comments</a></p>
  </div>
 <div class="post">
  <h2><a href="/articles/2007/03/20/snippet-shuffle-an-array">Snippet: Shuffle an Array</a></h2>
<p class="auth">Posted by kev
<span class="typo_date" title="Tue, 20 Mar 2007 07:47:00 GMT">Tue, 20 Mar 2007 07:47:00 GMT</span></p>
<div class="typocode"><pre><code class="typocode_ruby "><span class="keyword">class </span><span class="class">Array</span>
  <span class="keyword">def </span><span class="method">shuffle</span>
    <span class="ident">sort</span> <span class="punct">{</span> <span class="ident">rand</span><span class="punct">(</span><span class="number">3</span><span class="punct">)</span> <span class="punct">-</span> <span class="number">1</span> <span class="punct">}</span>
  <span class="keyword">end</span>
<span class="keyword">end</span>

<span class="ident">arr</span> <span class="punct">=</span> <span class="punct">(</span><span class="number">1</span><span class="punct">..</span><span class="number">10</span><span class="punct">).</span><span class="ident">to_a</span>
<span class="comment"># =&gt; [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]</span>
<span class="ident">arr</span><span class="punct">.</span><span class="ident">shuffle</span>
<span class="comment"># =&gt; [1, 8, 6, 10, 9, 3, 7, 2, 5, 4]</span>
<span class="ident">arr</span><span class="punct">.</span><span class="ident">shuffle</span>
<span class="comment"># =&gt; [3, 7, 10, 4, 5, 8, 2, 6, 9, 1]</span></code></pre></div>

  
  <p class="meta">Posted in <a href="/articles/category/coding" rel="tag">Coding</a>, <a href="/articles/category/ruby" rel="tag">Ruby</a>, <a href="/articles/category/hacks" rel="tag">Hacks</a>&nbsp;<strong>|</strong>&nbsp;<a href="/articles/2007/03/20/snippet-shuffle-an-array#comments">7 comments</a></p>
  </div>
 <div class="post">
  <h2><a href="/articles/2006/12/19/tormenting-your-tests-with-heckle">Tormenting Your Tests with Heckle</a></h2>
<p class="auth">Posted by kev
<span class="typo_date" title="Tue, 19 Dec 2006 09:24:00 GMT">Tue, 19 Dec 2006 09:24:00 GMT</span></p>
<p><strong>Update</strong>: Ruby2Ruby is having gem propogation issues. Feel free to download the gem <a href="http://rubyforge.org/frs/download.php/15738/ruby2ruby-1.1.2.gem">here</a> directly and install via <code>gem install ruby2ruby-1.1.2.gem</code>.</p>

<p><strong>Update 2</strong>: We&#8217;ve found a bug in the loading that causes problems when you supply a method to Heckle. A bug fix has been checked into the repo and we&#8217;re preparing a release. Look for 1.1.1 soonish.</p>

<p><strong>Update 3</strong>: Ok, 1.1.1 is out the door. The gem server is syncing, so look for a new version this afternoon (12/20) with several bugs including the loading error fixed.</p>

<p>Yes, I know what you&#8217;re thinking. &#8220;Holy crap, Kevin posted for the first time in months! I thought he died, or got eaten by a corporate zombie, or set out on a epic adventure to find himself.&#8221; But hey, good things come to those who wait, right? </p>

<p>So, you&#8217;ve been waiting, and I&#8217;ve been writing <a href="http://rubyforge.org/projects/seattlerb/">Heckle</a>. It&#8217;s a good thing.</p>

<p>Heckle is a mutation tester. It modifies your code and runs your tests to make sure they fail. The idea is that if code can be changed and your tests don&#8217;t notice, either that code isn&#8217;t being covered or it doesn&#8217;t do anything.</p>

<p>It&#8217;s a little weird, I know, but I like to think about it as pen-testing. It&#8217;s like hiring a white-hat hacker to try to break into your server and making sure you detect it. You learn the most by trying to break things and watching the outcome.</p>

<p>Anyway, Heckle was inspired by <a href="http://jester.sourceforge.net/">Jester</a>, and <a href="http://blog.zenspider.com/">Ryan Davis</a> wrote a proof of concept at RubyConf. As he <a href="http://blog.zenspider.com/archives/2006/10/heckle_another_rubyconf_hack.html">notes</a>, I went a little nuts and much of the current implementation I rewrote that night or on the plane home.</p>

<p>You can install Heckle from Ruby Gems:</p>

<div class="typocode"><pre><code class="typocode_default ">  gem install heckle --include-dependencies </code></pre></div>

<p>Let&#8217;s take the new toy out for a test drive. </p>

  <a href="/articles/2006/12/19/tormenting-your-tests-with-heckle">Read more...</a>
  <p class="meta">Posted in <a href="/articles/category/hacks" rel="tag">Hacks</a>, <a href="/articles/category/testing" rel="tag">testing</a>&nbsp;<strong>|</strong>&nbsp;<a href="/articles/2006/12/19/tormenting-your-tests-with-heckle#comments">10 comments</a></p>
  </div>
 <div class="post">
  <h2><a href="/articles/2006/08/22/colorize-your-tests">Colorize Your Tests</a></h2>
<p class="auth">Posted by kev
<span class="typo_date" title="Tue, 22 Aug 2006 17:49:00 GMT">Tue, 22 Aug 2006 17:49:00 GMT</span></p>
<p>Are your test runs dull and listless? Do you miss the red/green bar of JUnit? Well, now you don&#8217;t have to! Between <a href="http://on-ruby.blogspot.com/">Pat Eyler&#8217;s</a> <a href="http://on-ruby.blogspot.com/2006/06/more-fun-with-redgreen.html">RedGreen</a> and <a href="http://errtheblog.com/">Chris Wanstrath&#8217;s</a> <a href="http://errtheblog.com/post/15">modifications</a> you can have red, green and yellow tests. That doesn&#8217;t sound nearly as cool written, but take a look:</p>

<p><img src="http://thar.be/colored_tests.png" alt="Colored Tests!"/></p>

<p>It makes me happy. Oh, and a 3 line addition to your <code>~/.autotest</code> will make colorized <code>autotest</code> runs (pictured above).</p>

  
  <p class="meta">Posted in <a href="/articles/category/ruby" rel="tag">Ruby</a>, <a href="/articles/category/hacks" rel="tag">Hacks</a>, <a href="/articles/category/testing" rel="tag">testing</a></p>
  </div>


  <p id="pagination">Older posts: 1 <a href="/articles/category/hacks/page/2">2</a> <a href="/articles/category/hacks/page/3">3</a> </p>

          <script type="text/javascript">
//<![CDATA[
show_dates_as_local_time()
//]]>
</script>
        </div>
        
        <div id="sidebar">
          
            <div id="search-results"></div>
            
              
      
<div class="sidebar-node">
  <h3>About</h3>
My name is Kevin Clark. I'm a <a href="http://ruby-lang.org">Ruby</a> hacker making awesome things at <a href="http://powerset.com">Powerset</a> in San Francisco.

</div>


      
<div class="sidebar-node">
  <h3>Understanding</h3>
<a href="http://glu.ttono.us/articles/2005/08/19/understanding-ruby-symbols">Ruby Symbols</a><br />
<a href="http://glu.ttono.us/articles/2005/09/05/environments-in-rails-0-13-1">Environments in Rails 0.13.1</a><br />
<a href="http://glu.ttono.us/articles/2005/10/27/the-joy-of-migrations">The Joy of Migrations</a><br />
<a href="http://glu.ttono.us/articles/2005/10/30/why-and-how-ruby-and-rails-unit-testing">Ruby (and Rails) Unit Testing</a><br />
<a href="http://glu.ttono.us/articles/2006/02/06/rails-best-practices-tips-and-tricks">Rails Best Practices, Tips and Tricks</a><br />
<a href="http://glu.ttono.us/articles/2006/03/21/rails-for-designers">Rails for Designers</a><br />
<a href="http://glu.ttono.us/articles/2006/05/22/guide-environments-in-rails-1-1">Environments in Rails 1.1</a><br />
<a href="http://glu.ttono.us/articles/2006/05/29/guide-test-driven-rjs-with-arts">Test Driven RJS with ARTS</a>

</div>


      
<div class="sidebar-node">
  <h3>Cheat Sheets</h3>
<a href="http://glu.ttono.us/articles/2006/05/22/configuring-rails-environments-the-cheat-sheet">Configuring Rails Environments</a>

</div>


      
<div class="sidebar-node">
  <h3>Categories</h3>
<ul id="categories">
  
  <li><a href="/articles/category/web-dev">Web Dev</a> <em>(14)</em></li>
  
  
  <li><a href="/articles/category/coding">Coding</a> <em>(37)</em></li>
  
  
  <li><a href="/articles/category/rails">Rails</a> <em>(74)</em></li>
  
  
  <li><a href="/articles/category/op-ed">Op-Ed</a> <em>(7)</em></li>
  
  
  <li><a href="/articles/category/reviews">Reviews</a> <em>(3)</em></li>
  
  
  <li><a href="/articles/category/musings">Musings</a> <em>(18)</em></li>
  
  
  <li><a href="/articles/category/ruby">Ruby</a> <em>(69)</em></li>
  
  
  <li><a href="/articles/category/hacks">Hacks</a> <em>(22)</em></li>
  
  
  <li><a href="/articles/category/sdrug">sd.rb</a> <em>(10)</em></li>
  
  
  <li><a href="/articles/category/testing">testing</a> <em>(17)</em></li>
  
  
  <li><a href="/articles/category/documentation">documentation</a> <em>(6)</em></li>
  
  
  <li><a href="/articles/category/sightings">sightings</a> <em>(19)</em></li>
  
  
  <li><a href="/articles/category/guides">guides</a> <em>(8)</em></li>
  
  
  <li><a href="/articles/category/cheat-sheets">cheat sheets</a> <em>(1)</em></li>
  
  
  <li><a href="/articles/category/business">business</a> <em>(1)</em></li>
  
  
  <li><a href="/articles/category/summer-of-code">summer of code</a> <em>(5)</em></li>
  
</ul>


</div>


      
<div class="sidebar-node">
  <h3></h3>
<a href="http://feeds.feedburner.com/Gluttonous"><img src="http://feeds.feedburner.com/~fc/Gluttonous?bg=5189b5&amp;fg=333333&amp;anim=0" height="26" width="88" style="border:0" alt="" /></a>

</div>


      
<div class="sidebar-node">
  <h3></h3>
<!-- Creative Commons License -->
<a rel="license" href="http://creativecommons.org/licenses/by-nc-sa/2.5/"><img alt="Creative Commons License" border="0" src="http://creativecommons.org/images/public/somerights20.gif" /></a><br />
<!-- /Creative Commons License -->


<!--

<rdf:RDF xmlns="http://web.resource.org/cc/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
<Work rdf:about="">
   <dc:type rdf:resource="http://purl.org/dc/dcmitype/Text" />
   <license rdf:resource="http://creativecommons.org/licenses/by-nc-sa/2.5/" />
</Work>

<License rdf:about="http://creativecommons.org/licenses/by-nc-sa/2.5/">
   <permits rdf:resource="http://web.resource.org/cc/Reproduction" />
   <permits rdf:resource="http://web.resource.org/cc/Distribution" />
   <requires rdf:resource="http://web.resource.org/cc/Notice" />
   <requires rdf:resource="http://web.resource.org/cc/Attribution" />
   <prohibits rdf:resource="http://web.resource.org/cc/CommercialUse" />
   <permits rdf:resource="http://web.resource.org/cc/DerivativeWorks" />
   <requires rdf:resource="http://web.resource.org/cc/ShareAlike" />
</License>

</rdf:RDF>

-->


</div>


  


            
            
            <a href="http://typo.leetsoft.com/" class="powered"><img alt="Powered" src="/images/powered.gif?1155250442" /></a>
            </div>

            <br clear="all" />
      </div>
      <div id="footer">
        <ul>
          <li><a href="http://validator.w3.org/check?uri=referer">Valid XHTML 1.0</a></li>
          <li><a href="http://jigsaw.w3.org/css-validator/validator?uri=http://glu.ttono.us/">Valid CSS</a></li>
        </ul>
      </div>
  </div>
<script type="text/javascript" src="http://tracker.measuremap.com/a/562"></script>
<script src="http://www.google-analytics.com/urchin.js" type="text/javascript">
</script>
<script type="text/javascript">
_uacct = "UA-89073-1";
urchinTracker();
</script>
</body>
</html>

